<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/1243066710.html"/>
      <url>/posts/1243066710.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux 计算两个时间差，精确到毫秒</title>
      <link href="/posts/56eab5c9.html"/>
      <url>/posts/56eab5c9.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/12/image-6.png"></p><p>因为有些时候需要查看程序的响应时间或执行周期，做了这个脚本。</p><p>思路很简单，就是date %s 去获取 1970 年 1 月 1 日 00:00:00 UTC 到截取时间戳的秒数，然后计算时差。</p><p>需要注意的点</p><p>1.结束毫秒小于开始毫秒时，需要借位，从秒借1。</p><p>2.相差的天、小时、分钟、秒的计算方法</p><p>范本time.txt如下：4对时间戳，做对比。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">2022-01-01 01:01:11.118</span><br><span class="line">2022-01-01 01:01:11.222</span><br><span class="line">2022-01-01 01:02:21.888</span><br><span class="line">2022-01-01 01:02:22.022</span><br><span class="line">2022-01-01 01:03:31.338</span><br><span class="line">2022-01-01 02:33:32.022</span><br><span class="line">2022-01-01 01:04:43.448</span><br><span class="line">2022-01-21 22:44:43.642</span><br></pre></td></tr></table></figure><p>脚本如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">FILE=time.txt</span><br><span class="line">##########################################</span><br><span class="line">WC=`cat $FILEwc -l`</span><br><span class="line">for i in `seq 1 2 $WC`</span><br><span class="line">do </span><br><span class="line">VAR=`sed -n $&#123;i&#125;p $FILE` </span><br><span class="line">if [ -z &quot;$VAR&quot; ];then break;fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#获取奇数行</span><br><span class="line">DATE1=$VAR</span><br><span class="line">#T，获取日期时间</span><br><span class="line">T1=`echo $DATE1awk -F &#x27;.&#x27; &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">#S，获取毫秒</span><br><span class="line">S1=`echo $DATE1awk -F &#x27;.&#x27; &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line"></span><br><span class="line">#获取偶数行（奇数行的下一行）</span><br><span class="line">DATE2=`cat $FILEgrep -A1 &quot;$DATE1&quot;tail -1`</span><br><span class="line">#T，获取日期时间</span><br><span class="line">T2=`echo $DATE2awk -F &#x27;.&#x27; &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">#S，获取毫秒</span><br><span class="line">S2=`echo $DATE2awk -F &#x27;.&#x27; &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#获取时间差！！！如果偶数行毫秒&lt;奇数行需要借1，反之不需要！！！</span><br><span class="line">if [ $S2 -lt $S1  ];then</span><br><span class="line">#相差秒数</span><br><span class="line">DDT=$(( `date -d &quot;$T2&quot; +%s` - `date -d &quot;$T1&quot; +%s` -1 ))</span><br><span class="line">#相差毫秒数</span><br><span class="line">DDS=$(( $S2-$S1+1000 ))</span><br><span class="line">else</span><br><span class="line">#相差秒数</span><br><span class="line">DDT=$(( `date -d &quot;$T2&quot; +%s` - `date -d &quot;$T1&quot; +%s` ))</span><br><span class="line">#相差毫秒数</span><br><span class="line">DDS=$(( $S2-$S1 ))</span><br><span class="line">fi</span><br><span class="line">#得到相差</span><br><span class="line">DDTS=$DDT.$DDS</span><br><span class="line"></span><br><span class="line">#相差天数， 秒数 整除 天</span><br><span class="line">DAY=$(( $DDT / (60*60*24)  ))</span><br><span class="line">#相差小时， 秒数 整除 1小时（3600秒）后，对一天（24小时）求余</span><br><span class="line">HOUR=$(($DDT / (60*60) % 24 ))</span><br><span class="line">#相差分钟， 秒数与天求余，排除天；再与小时求余，排除小时；最后剩余秒数整除分钟，得到分钟数</span><br><span class="line">MIN=$(( $DDT %  (60*60*24) % (60*60) /60 ))</span><br><span class="line">#相差秒数，与分钟同理，求余</span><br><span class="line">SECOND=$(( $DDT %  (60*60*24) % (60*60) %60 ))</span><br><span class="line"></span><br><span class="line">#打印结果</span><br><span class="line">echo ----------------------------------------------------------</span><br><span class="line">echo &quot;$DATE1 与 $DATE2&quot;</span><br><span class="line">echo &quot;间隔：$DDTS 秒&quot;</span><br><span class="line">echo &quot;相差：$&#123;DAY&#125;天$&#123;HOUR&#125;小时$&#123;MIN&#125;分钟$&#123;SECOND&#125;秒$&#123;DDS&#125;毫秒&quot;</span><br><span class="line">echo ----------------------------------------------------------</span><br><span class="line">echo</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> 时间差 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ffmpeg 简单使用</title>
      <link href="/posts/6d77e8e4.html"/>
      <url>/posts/6d77e8e4.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/12/image-1.png"></p><p>ffmpeg是一个开源免费跨平台的音视频工具,支持windows、mac、linux平台。提供源码和二进制程序</p><p>ffmpeg官网地址：<a href="https://www.ffmpeg.org/download.html">https://www.ffmpeg.org/download.html</a></p><h2 id="一、下载"><a href="#一、下载" class="headerlink" title="一、下载"></a>一、下载</h2><p>MAC平台：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/12/image-2.png"></p><p>winows平台：如若经常使用需配置windows环境变量，懒人可以直接使用</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/12/image-3.png"></p><p>linux：使用NuxDextop源安装</p><p>NuxDextop_是一个面对_CentOS_、<em>RHEL_、_ScientificLinux_的含有许多流行的桌面和多媒体相关的包的第三方_RPM_仓库</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#安装epel源</span><br><span class="line">yum -y install epel-release</span><br><span class="line">#安装升级nux源</span><br><span class="line"> rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm</span><br><span class="line">#安装ffmpeg</span><br><span class="line">yum -y install ffmpeg</span><br></pre></td></tr></table></figure><h2 id="二，使用"><a href="#二，使用" class="headerlink" title="二，使用"></a>二，使用</h2><p>我这里只提供简单参数满足日常使用,有更复杂需求自行百度。</p><p>参数</p><p>说明</p><p>-y</p><p>输出文件,执行覆盖操作而不再询问</p><p>-n</p><p>输出文件，若已存在同名文件，则取消操作，立即退出</p><p>-i</p><p>输入的文件或url</p><p>-c</p><p>选择一个编码器（当在输出文件之前使用）或解码器（当在输入文件之前使用时）用于一个或多个流。codec 是解码器&#x2F;编码器的名称或 copy（仅输出）以指示该流不被重新编码。如：ffmpeg -i INPUT -map 0 -c:v libx264 -c:a copy OUTPUT</p><p>-ss</p><p>起始时间</p><p>-to</p><p>截止时间</p><p>-t</p><p>持续时间</p><h4 id="1-音频、视频合并（并行）"><a href="#1-音频、视频合并（并行）" class="headerlink" title="1.音频、视频合并（并行）"></a>1.音频、视频合并（并行）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i 视频源.mp4 -i 音频源.m4a -acodec copy -vcodec copy 输出视频.mp4</span><br></pre></td></tr></table></figure><h4 id="2-多个视频串联拼接"><a href="#2-多个视频串联拼接" class="headerlink" title="2.多个视频串联拼接"></a>2.多个视频串联拼接</h4><p>通过文件记录视频路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#list.txt文件内容如下，file后跟要合并的视频文件路径（若文件路径有空格或特殊符号，需单引号）</span><br><span class="line">file /volume1/f1.mp4</span><br><span class="line">file /volume1/f2.mp4</span><br><span class="line"></span><br><span class="line">#读取list.txt文件，串联拼接，输出名为out.mp4</span><br><span class="line">ffmpeg -f concat -safe 0  -i list.txt -c copy out.mp4</span><br></pre></td></tr></table></figure><h4 id="3-获取视频信息"><a href="#3-获取视频信息" class="headerlink" title="3.获取视频信息"></a>3.获取视频信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#显示视频的详细信息</span><br><span class="line">ffmpeg -i src.mp4</span><br></pre></td></tr></table></figure><h4 id="4-获取视频时长"><a href="#4-获取视频时长" class="headerlink" title="4.获取视频时长"></a>4.获取视频时长</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#过滤“Duration”所在行，获取视频时长</span><br><span class="line">ffmpeg -i src.mp4 2&gt;&amp;1grep Durationawk -F &#x27; ,&#x27; &#x27;&#123;print $4&#125;&#x27;</span><br></pre></td></tr></table></figure><h4 id="5-分割视频"><a href="#5-分割视频" class="headerlink" title="5.分割视频"></a>5.分割视频</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">###按时间戳进行分割 -to</span><br><span class="line">#将src.mp4从00:30:00到1:00:00的视频截取出来，输出名为out.mp4</span><br><span class="line">ffmpeg -i src.mp4 -ss 00:30:00 -to 1:00:00 -c copy out.mp4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###按后续时长分割 -t </span><br><span class="line">#将src.mp4从00:30:00往后15秒(00:30:15)的视频截取出来，输出名为out.mp4</span><br><span class="line">ffmpeg -i src.mp4 -ss 00:33:00 -t 15 -c copy out.mp4</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Windows </category>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ffmpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于shell的aliddns</title>
      <link href="/posts/a9d43fba.html"/>
      <url>/posts/a9d43fba.html</url>
      
        <content type="html"><![CDATA[<p>没时间写东西，把草稿整理一下</p><p>阿里官方sdk说明：<a href="https://next.api.aliyun.com/api/Alidns/2015-01-09"></a>[<a href="https://next.api.aliyun.com/api/Alidns/2015-01-09]">https://next.api.aliyun.com/api/Alidns/2015-01-09]</a>(<a href="https://next.api.aliyun.com/api/Alidns/2015-01-09?spm=api-workbench.SDK">https://next.api.aliyun.com/api/Alidns/2015-01-09?spm=api-workbench.SDK</a> Document.0.0.16ab1e0f2NBZgO)</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-41.png"></p><p>官方没有shell版本，后github上找了个不要太多依赖的脚本。</p><p>随在github上看到了<a href="https://github.com/h46incon/AliDDNSBash">h46incon</a>大神脚本，此脚本，需要依赖curl和openssl，在x86的linux都是默认安装的。大神原版估计是懒得更新了，其实可以再优化下，免去手工二次修改。</p><p><strong>注：只能实现域名更新，不能新建域名！！！只能更新最近20个以内子域名！！！</strong></p><p>我优化后的脚本：<a href="https://gitee.com/ffing/shell-aliddnss">https://gitee.com/ffing/shell-aliddnss</a></p><p>1.优化RecordId项，免去二次修改</p><p>2.优化获取ip的api接口逻辑，避免多个域名定时请求，造成api接口拒绝</p><p>最终实现：仅需修改下面5项即可</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/%E5%9B%BE%E7%89%87.png"></p><ul><li>获取阿里云AccessKey</li><li>下载脚本</li><li>修改脚本,填写阿里key及域名</li><li>执行脚本</li></ul><h2 id="一，获取阿里云AccessKey"><a href="#一，获取阿里云AccessKey" class="headerlink" title="一，获取阿里云AccessKey"></a>一，获取阿里云AccessKey</h2><p>登录<a href="https://www.aliyun.com/">阿里云</a>，进入控制台，鼠标悬浮右上角头像，选择AccessKey管理</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-45.png"></p><p>如果有账号信息控制严格，可以使用子账号区分，如果就你个人使用直接选择“继续”。</p><p>如果已有key可以直接使用，没有就创建一个。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-46.png"></p><p>已有key，点击查看，会给绑定手机号发送验证码</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-47.png"></p><h2 id="二，下载脚本"><a href="#二，下载脚本" class="headerlink" title="二，下载脚本"></a>二，下载脚本</h2><p>脚本下载地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://gitee.com/ffing/shell-aliddnss/raw/master/aliddns.sh</span><br></pre></td></tr></table></figure><p>linux下直接wget，也可以下载后上传至linux</p><h2 id="三，修改脚本-填写阿里key及域名"><a href="#三，修改脚本-填写阿里key及域名" class="headerlink" title="三，修改脚本,填写阿里key及域名"></a>三，修改脚本,填写阿里key及域名</h2><p>vi aliddns.sh</p><p>仅需填写这5个数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AccessKeyId=填写阿里AccessKeyID</span><br><span class="line">AccessKeySec=填写阿里AccessKeySec</span><br><span class="line">DomainRR=子域名</span><br><span class="line">DomainName=主域名</span><br><span class="line">DomainType=记录类型</span><br></pre></td></tr></table></figure><h2 id="四，执行脚本"><a href="#四，执行脚本" class="headerlink" title="四，执行脚本"></a>四，执行脚本</h2><p>bash aliddns.sh</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> aliddns </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>群晖Docker部署Dashy---功能强大的导航页</title>
      <link href="/posts/856ba58b.html"/>
      <url>/posts/856ba58b.html</url>
      
        <content type="html"><![CDATA[<p>在线导航页、导航页插件都需要先联网再配置，环境跳过。。。</p><p>之前用过heimdall，后来nginx配合静态页面。。。</p><p>Dashy很强大，作者一直在优化，配置内容可以在web页面进行修改，复杂的需要通过conf.xml文件进行配置。</p><p>dashy 除了添加应用，还能添加应用状态灯（检测链接状态，没有在运行，就显示红灯），且支持的很多小部件时间、日期、天气、CPU利用率、硬盘使用情况、网络使用情况、汇率、股价、新闻头条、iframe等，（作者是国外的，小部件调用的都是国外的，插件数据偶尔会延迟，所以我自己做了php和html，通过iframe调用）其中CPU利用率、硬盘使用情况、网络使用情况，需要配合glances使用。</p><p>而我最喜欢的一点就是“配置”，备份好配置文件，可以随意迁移。</p><p>Dashy项目地址：<a href="https://github.com/Lissy93/dashy">https://github.com/Lissy93/dashy</a></p><p>Dashy插件介绍：<a href="https://dashy.to/docs/widgets">https://dashy.to/docs/widgets</a></p><p>-—————————————————————————————————-</p><p>图中，我只使用了基础的添加应用和iframe插件功能</p><p>分享下我的iframe（可以直接调用）</p><p>时钟天气：<a href="http://ffing.gitee.io/clock">http://ffing.gitee.io/clock</a></p><p>必应每图：<a href="https://blog.ffing.cn/bing.php">https://blog.ffing.cn/bing.php</a></p><p>百度疫情（自己更换城市）：<a href="https://voice.baidu.com/act/newpneumonia/newpneumonia/?from=osari%5C_aladin%5C_banner&city=%E6%B2%B3%E5%8D%97-%E9%83%91%E5%B7%9E">https://voice.baidu.com/act/newpneumonia/newpneumonia/?from=osari\_aladin\_banner&amp;city=河南-郑州</a></p><p>其他的iframe是我根据自己需求做的php和html，如硬件信息、日志文件</p><p>-——————————————————————————————————–</p><ul><li>群晖安装docker</li><li>Docker添加Dashy</li><li>配置Dashy</li></ul><h2 id="一，群晖安装docker"><a href="#一，群晖安装docker" class="headerlink" title="一，群晖安装docker"></a>一，群晖安装docker</h2><p>通过套件中心安装docker，操作简单不详细描述</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-27.png"></p><h2 id="二，Docker添加Dashy"><a href="#二，Docker添加Dashy" class="headerlink" title="二，Docker添加Dashy"></a>二，Docker添加Dashy</h2><h4 id="1-下载Dashy映像"><a href="#1-下载Dashy映像" class="headerlink" title="1.下载Dashy映像"></a>1.下载Dashy映像</h4><p>打开Docker—》注册表—》lissy93&#x2F;dashy—》右键或双击进行下载—》最新版‘latest’</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-28.png"></p><h4 id="2-安装Dashy映像"><a href="#2-安装Dashy映像" class="headerlink" title="2.安装Dashy映像"></a>2.安装Dashy映像</h4><p>从Docker页可以看到的配置信息</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-29.png"></p><p>端口：80</p><p>config文件：&#x2F;app&#x2F;public&#x2F;conf.yml</p><p>所以，在群晖映射是也需要映射端口和配置文件</p><p>打开Docker—》映像—》双击dashy映像进行安装配置：配置映射端口和映射目录</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-32.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-33.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-34.png"></p><h2 id="三，配置Dashy"><a href="#三，配置Dashy" class="headerlink" title="三，配置Dashy"></a>三，配置Dashy</h2><h4 id="1-添加conf-yml文件"><a href="#1-添加conf-yml文件" class="headerlink" title="1.添加conf.yml文件"></a>1.添加conf.yml文件</h4><p>上传我的yml文件，建议使用yml编辑器后上传文件（yml格式错误，会导致报错，无法启动）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-35.png"></p><p>下面是我自己的yml文件，可保存后自行修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line">appConfig:</span><br><span class="line">  webSearch: </span><br><span class="line">    searchEngine: &#x27;duckduckgo&#x27;</span><br><span class="line">    openingMethod: &#x27;newtab&#x27;</span><br><span class="line">    searchBangs:</span><br><span class="line">      /r: reddit</span><br><span class="line">      /w: wikipedia</span><br><span class="line">      /b: http://www.baidu.com/s?ie=UTF-8&amp;wd=</span><br><span class="line"></span><br><span class="line">  theme: colorful</span><br><span class="line">  layout: auto</span><br><span class="line">  iconSize: medium</span><br><span class="line">  language: cn</span><br><span class="line">pageInfo:</span><br><span class="line">  title: FFing-Tab</span><br><span class="line">  description: 学无止境~</span><br><span class="line">  navLinks:</span><br><span class="line">    - title: B站</span><br><span class="line">      path: https://space.bilibili.com/376172153</span><br><span class="line">      target: newtab</span><br><span class="line">    - title: YouTube</span><br><span class="line">      path: https://www.youtube.com/</span><br><span class="line">      target: newtab</span><br><span class="line">sections:</span><br><span class="line"></span><br><span class="line">  - name: null</span><br><span class="line">    icon: null</span><br><span class="line">    widgets:</span><br><span class="line">      - type: iframe</span><br><span class="line">        options:</span><br><span class="line">          url: http://ffing.gitee.io/clock/</span><br><span class="line">          frameHeight: 100</span><br><span class="line">        id: 0_2254_clock</span><br><span class="line">    displayData:</span><br><span class="line">      sortBy: default</span><br><span class="line">      rows: 1</span><br><span class="line">      cols: 2</span><br><span class="line">      collapsed: false</span><br><span class="line">      hideForGuests: false</span><br><span class="line"></span><br><span class="line">  - name: null</span><br><span class="line">    icon: null</span><br><span class="line">    widgets:</span><br><span class="line">      - type: iframe</span><br><span class="line">        options:</span><br><span class="line">          url: https://voice.baidu.com/act/newpneumonia/newpneumonia/?from=osari_aladin_banner&amp;city=%E6%B2%B3%E5%8D%97-%E9%83%91%E5%B7%9E</span><br><span class="line">          frameHeight: 800</span><br><span class="line">        id: 0_2314_iframe</span><br><span class="line">    displayData:</span><br><span class="line">      sortBy: default</span><br><span class="line">      rows: 4</span><br><span class="line">      cols: 1</span><br><span class="line">      collapsed: false</span><br><span class="line">      hideForGuests: false</span><br><span class="line"></span><br><span class="line">  - name: </span><br><span class="line">    icon: </span><br><span class="line">    displayData:</span><br><span class="line">      rows: 4</span><br><span class="line">    widgets:</span><br><span class="line">      - type: image</span><br><span class="line">        options:</span><br><span class="line">          imagePath: https://blog.ffing.cn/bing.php</span><br><span class="line">      - type: iframe</span><br><span class="line">        options:</span><br><span class="line">          url: http://192.168.68.253:888/</span><br><span class="line">      - type: iframe</span><br><span class="line">        options:</span><br><span class="line">          url: http://192.168.68.253:89/</span><br><span class="line">          frameHeight: 320</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - name: Home Server</span><br><span class="line">    icon: http://ffing.gitee.io/img/png/server.png</span><br><span class="line">    items:</span><br><span class="line">      - title: Esxi</span><br><span class="line">        description: null</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/esxi.png</span><br><span class="line">        url: http://192.168.68.250</span><br><span class="line">        target: newtab</span><br><span class="line"></span><br><span class="line">      - title: Rout-主</span><br><span class="line">        description: null</span><br><span class="line">        url: http://192.168.68.251</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/ikuai.png</span><br><span class="line">        statusCheck: true</span><br><span class="line">      - title: Route-从</span><br><span class="line">        description: null</span><br><span class="line">        provider: Dashy.to</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/route.png</span><br><span class="line">        url: http://192.168.68.252</span><br><span class="line">        statusCheck: true</span><br><span class="line">      - title: 群晖</span><br><span class="line">        description: null</span><br><span class="line">        url: http://192.168.68.253:5000</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/dsm.png</span><br><span class="line">        statusCheck: true</span><br><span class="line">      - title: Plex</span><br><span class="line">        description: null</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/video.png</span><br><span class="line">        url: http://192.168.68.101:32400/web/index.html</span><br><span class="line">        statusCheck: true</span><br><span class="line">      - title: WXY</span><br><span class="line">        description: null</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/wxy.png</span><br><span class="line">        url: http://192.168.68.241:8080</span><br><span class="line">        target: newtab</span><br><span class="line">        statusCheck: true</span><br><span class="line">      - title: NGO-Down</span><br><span class="line">        description: null</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/ngo.png</span><br><span class="line">        url: http://192.168.68.200:23000</span><br><span class="line">        target: newtab        </span><br><span class="line">        statusCheck: true</span><br><span class="line"></span><br><span class="line">      - title: SMB</span><br><span class="line">        description: null</span><br><span class="line">        url: smb://192.168.68.253</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/smb.png</span><br><span class="line">        target: sametab</span><br><span class="line"></span><br><span class="line">      - title: FTP</span><br><span class="line">        description: null</span><br><span class="line">        url: ftp://192.168.68.253</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/ftp.png</span><br><span class="line">        target: sametab</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      - title: Esxi-Win10</span><br><span class="line">        description: null</span><br><span class="line">        provider: Dashy.to</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/windows.png</span><br><span class="line">        url: vmrc://192.168.68.250/?moid=62</span><br><span class="line">        target: sametab</span><br><span class="line"></span><br><span class="line">      - title: Esxi-UOS</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/uos.png</span><br><span class="line">        url: vmrc://192.168.68.250/?moid=55</span><br><span class="line">        target: sametab</span><br><span class="line"></span><br><span class="line">      - title: Esxi-Kylin</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/kylin.png</span><br><span class="line">        url: vmrc://192.168.68.250/?moid=56</span><br><span class="line">        target: sametab</span><br><span class="line">    displayData:</span><br><span class="line">      sortBy: default</span><br><span class="line">      rows: 1</span><br><span class="line">      cols: 2</span><br><span class="line">      collapsed: false</span><br><span class="line">      hideForGuests: false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - name: Link</span><br><span class="line">    icon: http://ffing.gitee.io/img/png/link.png</span><br><span class="line">    items:</span><br><span class="line">      - title: 百度</span><br><span class="line">        description: null</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/baidu.png</span><br><span class="line">        url: http://www.baidu.com</span><br><span class="line">        target: null</span><br><span class="line">        id: 0_398_</span><br><span class="line">      - title: Google</span><br><span class="line">        description: null</span><br><span class="line">        url: http://www.google.com</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/google.png</span><br><span class="line">        id: 1_398_google</span><br><span class="line">      - title: Github</span><br><span class="line">        description: null</span><br><span class="line">        provider: null</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/github.png</span><br><span class="line">        url: http://www.github.com</span><br><span class="line">        id: 2_398_github</span><br><span class="line">      - title: Gitee</span><br><span class="line">        description: null</span><br><span class="line">        url: http://www.gitee.com</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/gitee.png</span><br><span class="line">        id: 3_398_gitee</span><br><span class="line">      - title: 阿里云</span><br><span class="line">        description: null</span><br><span class="line">        url: http://www.aliyun.com</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/aliyun.png</span><br><span class="line">        id: 4_398_</span><br><span class="line">      - title: 腾讯云</span><br><span class="line">        description: null</span><br><span class="line">        url: https://cloud.tencent.com/</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/tengxunyun.png</span><br><span class="line">        id: 5_398_</span><br><span class="line">      - title: FFing</span><br><span class="line">        description: null</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/ffing.png</span><br><span class="line">        url: http://blog.ffing.cn</span><br><span class="line">        target: newtab</span><br><span class="line">        id: 6_398_ffing</span><br><span class="line">      - title: 云盘</span><br><span class="line">        description: null</span><br><span class="line">        url: http://pan.ffing.cn</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/cloud.png</span><br><span class="line">        id: 7_398_</span><br><span class="line">      - title: Mac下载站</span><br><span class="line">        description: null</span><br><span class="line">        provider: Dashy.to</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/mac1.png</span><br><span class="line">        url: https://xclient.info/</span><br><span class="line">        id: 8_398_mac</span><br><span class="line">      - title: CPU天梯图</span><br><span class="line">        description: null</span><br><span class="line">        url: https://www.mydrivers.com/zhuanti/tianti/cpu/</span><br><span class="line">        icon: http://ffing.gitee.io/img/png/ie.png</span><br><span class="line">        id: 9_398_cpu</span><br><span class="line">    displayData:</span><br><span class="line">      sortBy: default</span><br><span class="line">      rows: 1</span><br><span class="line">      cols: 2</span><br><span class="line">      collapsed: false</span><br><span class="line">      hideForGuests: false</span><br></pre></td></tr></table></figure><h4 id="2-启动Dashy"><a href="#2-启动Dashy" class="headerlink" title="2.启动Dashy"></a>2.启动Dashy</h4><p>第一次启动Dashy构建时间比较长，需要等待2~3分钟左右。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-36.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-37.png"></p><h4 id="3-打开dashy"><a href="#3-打开dashy" class="headerlink" title="3.打开dashy"></a>3.打开dashy</h4><p>http:&#x2F;&#x2F;群晖ip：映射端口</p><p>映射端口，在第二步安装过程中映射的端口，如果忘记可点开dashy容器查看映射信息！！！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-38.png"></p><p>注：我的截图使用的域名home，是通过爱快做了dns</p>]]></content>
      
      
      <categories>
          
          <category> Me </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dashy </tag>
            
            <tag> 导航页 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac 使用磁盘工具打包dmg</title>
      <link href="/posts/c0b81c21.html"/>
      <url>/posts/c0b81c21.html</url>
      
        <content type="html"><![CDATA[<p>dmg是Mac上的压缩镜像文件，相当于在Windows上常见的iso文件。</p><p>本文通过Mac自带的磁盘工具，打包“计算器”为例</p><p>流程：</p><ul><li>新建空白的镜像文件</li><li>将需要打包的文件拖入镜像</li><li>增加背景图</li><li>调整窗口大小及布局</li><li>转换为最终镜像文件</li></ul><h2 id="一，新建空白的镜像文件"><a href="#一，新建空白的镜像文件" class="headerlink" title="一，新建空白的镜像文件"></a>一，新建空白的镜像文件</h2><p>1.打开磁盘工具：访达—&gt;应用程序—&gt;其他—&gt;磁盘工具</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-11.png"></p><p>2.磁盘工具状态：文件—&gt;新建映像—&gt;空白映像</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-13.png"></p><p>3.空白映像信息</p><p>存储为：临时映像名</p><p>位置：临时映像保存位置</p><p>名称：此字段是dmg解压的标签</p><p>大小：临时创建的dmg容量如果过小，将无法拖入过大的文件，dmg转换后会压缩到实际大小。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-14.png"></p><p>4.打开刚刚创建的映像文件</p><p>再磁盘工具中，会出现刚刚创建的dmg镜像文件，右键在“访达中显示”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-15.png"></p><h2 id="二，将需要打包的文件拖入镜像"><a href="#二，将需要打包的文件拖入镜像" class="headerlink" title="二，将需要打包的文件拖入镜像"></a>二，将需要打包的文件拖入镜像</h2><p>1.拖入文件</p><p>拖入：计算器app+背景图+“应用程序”替身</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-16.png"></p><h2 id="三，增加背景"><a href="#三，增加背景" class="headerlink" title="三，增加背景"></a>三，增加背景</h2><p>如果不需背景，可忽略本步骤</p><p>查看显示选项，将准备的背景图拖入背景框。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-17.png"></p><p>3.隐藏背景图片</p><p>隐藏背景图，将图片拖入终端自动显示图片路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chflags hidden 你的图片路径</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-18.png"></p><h2 id="四，调整窗口大小及布局"><a href="#四，调整窗口大小及布局" class="headerlink" title="四，调整窗口大小及布局"></a>四，调整窗口大小及布局</h2><p>根据背景，拖动鼠标调整窗口大小及布局</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-19.png"></p><h2 id="五，转换为最终镜像文件"><a href="#五，转换为最终镜像文件" class="headerlink" title="五，转换为最终镜像文件"></a>五，转换为最终镜像文件</h2><p>1.卸载刚刚创建的映像</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-20.png"></p><p>2.转换（将刚刚创建的dmg压缩）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-23.png"></p><p>3.转换结束后，就可将压缩后的dmg发给朋友了</p>]]></content>
      
      
      <categories>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> dmg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Beyond Compare for mac 无限试用</title>
      <link href="/posts/1b59b95b.html"/>
      <url>/posts/1b59b95b.html</url>
      
        <content type="html"><![CDATA[<p>Beyond Compare是文件、目录对比神器。官方默认试用30天，通过删除注册信息文件（registry.dat）来实现无限试用。</p><p>本文通过添加脚本来实现：启动Beyond Compare前，先删除注册信息文件</p><ul><li>官网下载</li><li>程序分析</li><li>破解</li></ul><h2 id="一，下载"><a href="#一，下载" class="headerlink" title="一，下载"></a>一，下载</h2><p>官网下载：<a href="https://www.scootersoftware.com/download.php">https://www.scootersoftware.com/download.php</a></p><h2 id="二，程序分析"><a href="#二，程序分析" class="headerlink" title="二，程序分析"></a>二，程序分析</h2><p>1.通过“活动监视器”找到Beyond Compare，查看启动时调用的程序为：BCompare</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-6.png"></p><p>2.注册信息文件：&#x2F;Users&#x2F;用户名&#x2F;Library&#x2F;Application Support&#x2F;Beyond Compare&#x2F;registry.dat</p><p>因此，实现破解就需要启动程序前删除注册信息文件。</p><h2 id="三，破解"><a href="#三，破解" class="headerlink" title="三，破解"></a>三，破解</h2><p>知道启动程序是BCompare文件，也知道了注册信息文件（registry.dat），那就一个脚本来同时实现这两个动作即可，方法就是来个偷梁换柱：将BCompare备份为“BCompare.real”后，再新建脚本名为“BCompare”</p><p>1.BCompare所在文件夹:</p><p>“&#x2F;Applications&#x2F;Beyond Compare.app&#x2F;Contents&#x2F;MacOS&#x2F;BCompare”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-7.png"></p><p>2.将BCompare重命名为：BCompare.real</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-8.png"></p><p>3.新创建脚本文件：BCompare，并添加执行权限：chmod +x BCompare</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-9.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">rm &quot;/Users/$(whoami)/Library/Application Support/Beyond Compare/registry.dat&quot;</span><br><span class="line">&quot;`dirname &quot;$0&quot;`&quot;/BCompare.real &amp;</span><br></pre></td></tr></table></figure><p>4.OK，结束。</p><p>以后每次Beyond Compare时，脚本将先将注册文件删除后，再打开。</p>]]></content>
      
      
      <categories>
          
          <category> Me </category>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Beyond Compare for mac 无限试用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国产化Debian打包----dpkg命令</title>
      <link href="/posts/d3d4152e.html"/>
      <url>/posts/d3d4152e.html</url>
      
        <content type="html"><![CDATA[<p>当前测试麒麟V10、统信UOS20</p><p>dpkg命令适合二进制打包，简单讲就是将已经编译好的程序，封装为deb包，方便用户直接双击安装；而安装过程可以简单理解：将包内文件解压到‘&#x2F;’根目录相对应的文件目录中。（有复杂需求的需要通过pre或post的inst&#x2F;rm脚本操作！）</p><p>如下图将名为’dir’的目录打成deb包后，双击deb安装后的路径结果</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image.png"></p><p><strong>注：dpkg像yum一样，系统仅允许存在一个dpkg进程，如果你打包的文件中含有deb包，你的postinst不可再做dpkg动作（可理解为：dpkg执行中，不允许再次出现子进程的dpkg动作）</strong></p><h2 id="一，标准deb包框架"><a href="#一，标准deb包框架" class="headerlink" title="一，标准deb包框架"></a>一，<strong>标准deb包框架</strong></h2><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-1.png"></p><p>deb包内目录有两大项：配置项和解压项</p><h6 id="1）配置项，DEBIAN目录（必须大写）"><a href="#1）配置项，DEBIAN目录（必须大写）" class="headerlink" title="1）配置项，DEBIAN目录（必须大写）"></a>1）<strong>配置项，<strong><strong>DEBIAN</strong></strong>目录（必须大写）</strong></h6><p>此目录内放置deb信息文件(必须有)，其它deb解压前、后、删除前、后执行操作，根据需求增加，且文件权限需644~755之间。</p><ul><li>control文件：描述性文件：软件包的名称、版本、描述等，必须文件。</li><li>preinst文件：解包前运行的脚本。</li><li>postinst文件：解包完成并将目录文件拷贝到系统后，运行的脚本。</li><li>prerm文件：软件卸载前需要执行的脚本。</li><li>postrm文件：软件卸载后需要执行的脚本。</li></ul><h6 id="2）解压项：除‘DEBIAN’-以外的目录"><a href="#2）解压项：除‘DEBIAN’-以外的目录" class="headerlink" title="2）解压项：除‘DEBIAN’****以外的目录"></a>2）<strong>解压项：除‘<strong><strong>DEBIAN</strong></strong>’****以外的目录</strong></h6><p>解压项目录，会在安装中，将以‘&#x2F;’根目录为基础，进行解压，且解压后的程序目录权限为777。</p><p>两个常用目录</p><ul><li>&#x2F;usr&#x2F;share&#x2F;applications，此目录为开始菜单图标目录</li><li>&#x2F;opt&#x2F;apps，此目录为程序解压目录</li></ul><p>因此，若打一个最简单的空包，就是仅创建DEBIAN目录，并在其内添加control文件即可。</p><h2 id="二，国产化打包规范"><a href="#二，国产化打包规范" class="headerlink" title="二，国产化打包规范"></a>二，<strong>国产化打包规范</strong></h2><p>1）程序名称：以‘-’号分隔，如程序名称nuesoft-ebill</p><p>2）deb包名称：以‘_’分隔，程序名称_版本号_平台.deb，如deb包名称ffing-cn_0.0.1_amd64.deb</p><p>3）程序，需解压到&#x2F;opt&#x2F;apps&#x2F;你的程序名目录</p><p>4）开始菜单图标，需放在&#x2F;usr&#x2F;share&#x2F;applications&#x2F;你的程序名.desktop</p><h2 id="三，常用命令"><a href="#三，常用命令" class="headerlink" title="三，常用命令"></a>三，<strong>常用命令</strong></h2><p>语法：dpkg [参数] 目录名或包名</p><p>参数</p><p>说明</p><p>-b</p><p>打包</p><p>-x</p><p>解包，仅解压“解压项”</p><p>-e</p><p>解包，仅解压“配置项”，执行后解压出DEBIAN目录，查看配置内容</p><p>-i</p><p>安装软件包</p><p>--purge</p><p>删除软件包及配置文件（用于软件卸载后，依然存有配置信息</p><p>-r</p><p>仅删除软件包（此命令会导致 -l参数误判，建议使用–purge）</p><p>-l(小写)</p><p>显示已安装的软件包</p><p>-L(大写)</p><p>显示软件包关联文件（也可理解为安装路径）</p><p><strong>dpkg</strong> **-**<strong>b</strong> <strong>test&#x2F;</strong></p><p><strong>解析：将test目录打包，将自动生成同名deb，执行结果生成test.deb</strong></p><p><strong>dpkg -b test&#x2F; neusoft-ebill_0.0.1_amd64.deb</strong></p><p><strong>解析：将test目录打包，指定包名为ffing-cn_0.0.1_amd64.deb，执行结果生成ffing-cn_0.0.1_amd64.deb</strong></p><h2 id="四，文件范本"><a href="#四，文件范本" class="headerlink" title="四，文件范本"></a>四，<strong>文件范本</strong></h2><h4 id="desktop文件"><a href="#desktop文件" class="headerlink" title="desktop文件"></a><strong>desktop文件</strong></h4><p>用于开始菜单图标文件（桌面图标由postinst脚本将desktop文件复制到桌面）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-2.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Version=</span><br><span class="line">Name=</span><br><span class="line">Name[zh_CN]=</span><br><span class="line">Comment=</span><br><span class="line">Icon=</span><br><span class="line">Exec=</span><br><span class="line">Categories= </span><br><span class="line">Terminal=</span><br><span class="line">Type=</span><br></pre></td></tr></table></figure><h4 id="control文件"><a href="#control文件" class="headerlink" title="control文件"></a><strong>control文件</strong></h4><p>包名、版本、描述等信息，用于在deb安装器时拉取信息</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/11/image-3.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Package: </span><br><span class="line">Version:              </span><br><span class="line">Architecture:  </span><br><span class="line">Maintainer: </span><br><span class="line">Description: </span><br></pre></td></tr></table></figure><h4 id="postinst文件"><a href="#postinst文件" class="headerlink" title="postinst文件"></a>postinst文件</h4><p>deb安装解压后，执行的脚本（添加桌面图标、添加开机启动、系统变量等），<strong>若postinst有向系统创建文件操作时，必须有postrm文件进行文件删除，否则二次安装deb会报错！！！</strong></p><h4 id="postrm文件"><a href="#postrm文件" class="headerlink" title="postrm文件"></a><strong>postrm文件</strong></h4><p>deb包卸载后执行脚本（主要是删除postinst创建的文件，也可以删除其他文件）</p>]]></content>
      
      
      <categories>
          
          <category> Debian </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Debian </tag>
            
            <tag> dpkg </tag>
            
            <tag> 国产化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux之watch</title>
      <link href="/posts/27569959.html"/>
      <url>/posts/27569959.html</url>
      
        <content type="html"><![CDATA[<p>watch命令用于周期性的执行命令，<strong>且打印在一个屏幕中</strong>!<strong>超过一个屏幕将无法显示！</strong></p><p>免去单行while或for的语句来说很是方便，但如果打印输出超出一个屏幕将无法显示，所以需要根据环境去使用这个命令。</p><h5 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">watch [参数] [命令]</span><br></pre></td></tr></table></figure><h5 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a><strong>命令参数</strong></h5><ul><li><strong>-n或–interval</strong> 缺省每2秒运行一下程序，可以用-n或-interval来指定间隔周期</li><li><strong>-d或–differences</strong> 选项watch 会高亮显示变化的区域</li><li><strong>-d&#x3D;cumulative</strong>选项会把变动过的区域(不管最近的那次有没有变动)都高亮显示出来。</li><li><strong>-t 或-no-title</strong> 关闭watch命令在顶部的时间。</li><li>-h, –help 查看帮助文档</li></ul><h4 id="范例：循环显示当前时间"><a href="#范例：循环显示当前时间" class="headerlink" title="范例：循环显示当前时间"></a><strong>范例：循环显示当前时间</strong></h4><p>使用while来循环显示时间，需要sleep</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">while true;do echo `date &#x27;+%Y-%m-%d %H:%M:%S&#x27;`;sleep 1;done</span><br></pre></td></tr></table></figure><p>下面使用watch来循环显示时间</p><p>1.空命令执行后，顶行右上角显示时间，默认间隔周期为2秒</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">watch  &quot;&quot;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/10/image.png"></p><p>2.调整，输出指定格式的时间戳：yyyy-mm-dd HH:MM:SS</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#日期和时间中间有空格，需要引号</span><br><span class="line">watch -n1 &quot;date &#x27;+%Y-%m-%d %H:%M:%S&#x27;&quot;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/10/image-2.png"></p><p>3.再次调整，不显示顶行的watch提示执行内容及自带的时间戳（加入-t参数）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">watch -tn1 &quot;date &#x27;+%Y-%m-%d %H:%M:%S&#x27;&quot;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/10/image-3.png"></p><h4 id="范例：循环显示平均负载"><a href="#范例：循环显示平均负载" class="headerlink" title="范例：循环显示平均负载"></a><strong>范例：循环显示平均负载</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#默认2秒刷新一次，-d参数用于高亮变化区域</span><br><span class="line">watch -d uptime</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/10/image-4.png"></p><p><strong>范例：循环显示内存使用状态</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">watch -n1 free</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/10/image-5.png"></p><h4 id="拓展："><a href="#拓展：" class="headerlink" title="拓展："></a>拓展：</h4><p>因此watch可以免去我们的循环写法，但鉴于只能打印一个屏幕，在grep关键字段时，需要注意不能超时屏幕行数，或者tail时不能加-f</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> watch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux expect中的while循环</title>
      <link href="/posts/b039dfd0.html"/>
      <url>/posts/b039dfd0.html</url>
      
        <content type="html"><![CDATA[<p>尬了。sftp的rm一次只能删除一个文件，用shell的循环只能登录一次删一个，效率有点低，而且容易被风控，当然也可以使用脚本提前生成文件一次解决，那就顺便就看了下expect的内嵌循环，真的真是资料有点少。</p><p>expect内嵌循环实在是不会用，百度了一下，一知半解，这里记录一下，另外说下expect中的语法多个空格都要报错，只能一点一点排查。</p><p>例：sftp一次性删除远端多个文件</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-29.png"></p><p>expect脚本如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/expect</span><br><span class="line">#set变量赋值</span><br><span class="line">set FE_IPADD 192.168.68.160</span><br><span class="line">set FE_USER root</span><br><span class="line">set FE_PWD 123456789</span><br><span class="line">set DEL_PATH /root/filename.txt</span><br><span class="line"></span><br><span class="line">set timeout -1</span><br><span class="line">#打开$DEL_PATH文件赋值给NAME</span><br><span class="line">set NAME [open $&#123;DEL_PATH&#125; r]</span><br><span class="line"></span><br><span class="line">spawn sftp $&#123;FE_USER&#125;@$&#123;FE_IPADD&#125;</span><br><span class="line">expect &#123;</span><br><span class="line">    &quot;yes/no&quot; &#123; send &quot;yes\r&quot;  &#125;</span><br><span class="line">    &quot;password:&quot; &#123; send &quot;$FE_PWD\r&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    #expect的while循环，get读取$NAME变量</span><br><span class="line">    while &#123;[gets $NAME line] &gt;= 0&#125;  &#123;</span><br><span class="line">    #set 赋值FE_FILE</span><br><span class="line">    #$line，while循环行，从第一行开始</span><br><span class="line">    #0代表第一列，1代表第二列。。。</span><br><span class="line">    set FE_FILE   [lindex $line 0]</span><br><span class="line">    expect &quot;sftp&gt;&quot; &#123; send &quot;rm $FE_FILE \n&quot;  &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">expect &quot;sftp&gt;&quot; &#123; send &quot;exit \n&quot;  &#125;</span><br><span class="line">close $NAME</span><br></pre></td></tr></table></figure><p>功能：从&#x2F;root&#x2F;filename.txt读取文件名，登录sftp后，使用expect的while循环进行逐一删除。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> expect </tag>
            
            <tag> while </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wget for windows实现bat脚本一键拉取安装</title>
      <link href="/posts/85df00fb.html"/>
      <url>/posts/85df00fb.html</url>
      
        <content type="html"><![CDATA[<p>wget玩linux的都不陌生，而windows图形化的下载工具，满天飞。</p><p>工作中有个项目需求很简单，就是要实现一键安装。</p><p>最简单的就是统一打包做个安装包，但这个问题就面临着安装包会随着打包程序的累加而变得越来越庞大，这就尴尬了</p><p>所以就想到api拉取（http协议）后自动安装，随就百度了一下，发现wget和bat两个程序（这里的bat是个二进制程序，不是bat脚本），wget和linux用法相同没什么区别，而我在github上看到了bat的二进制程序也可以实现相同功能，本着熟悉wget不易出现问题，就选择了wget。</p><p>wget for windows 下载地址：<a href="https://eternallybored.org/misc/wget/">https://eternallybored.org/misc/wget/</a></p><p>这个bat脚本，没有好好规划，写的有点随意，也懒得的去优化了，简单说思路：通过先通过注册表检测软件是否安装，然后wget下载缺失软件，下载后安装。</p><p>1.适配winxp、win7、及win10</p><p>2.根据系统检测缺失软件，并通过http协议下载安装（adober、net3.5及自的程序软件）</p><p>3.下载、安装状态判断</p><p>注：wget和这个脚本要放在同一个目录，且wget要适配xp要选择1.13版本</p><p>脚本如下，未做dos的完美优化，懒得折腾了，如有需要自行完善！！！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">::DOS标签</span><br><span class="line">title ffing一键安装</span><br><span class="line">::判断是否多个进程</span><br><span class="line">tasklist /v /fo csv  findstr /i &quot;ffing一键安装&quot; find /c /v &quot;&quot; &gt;%temp%\pidnum.txt</span><br><span class="line">set /p PIDNUM=&lt;%temp%\pidnum.txt</span><br><span class="line">if %PIDNUM%==1 (goto INIT ) else (goto EXIT1)</span><br><span class="line">:EXIT</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">:INIT</span><br><span class="line">::定义检测结果变量</span><br><span class="line">set FFING_CHECK=%temp%\FFING_SOFTCHECK.txt</span><br><span class="line">echo start&gt;%FFING_CHECK%</span><br><span class="line">::定义当前脚本环境变量</span><br><span class="line">set FFING_ONEKEY_DIR=C:\FFING_Onekey</span><br><span class="line">path %path%;%FFING_ONEKEY_DIR%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">::####################判断windows版本###########################</span><br><span class="line">ver find &quot; 5.1&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto WindowsXP </span><br><span class="line"></span><br><span class="line">ver find &quot; 6.0&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto WindowsVista</span><br><span class="line"></span><br><span class="line">ver find &quot; 6.1&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows7</span><br><span class="line"></span><br><span class="line">ver find &quot; 10.&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows10</span><br><span class="line">(echo 查询版本失败,NET环境请使用根据系统版本安装)</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:WindowsXP</span><br><span class="line">echo WIN版本：Windows XP</span><br><span class="line">echo WIN版本：Windows XP &gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line">:WindowsVista</span><br><span class="line">echo WIN版本：Windows Vista</span><br><span class="line">echo WIN版本：Windows Vista &gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line">:Windows7</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 7-X86) else (goto 7-X64)</span><br><span class="line">:7-X86</span><br><span class="line">echo WIN版本：Windows7 X86</span><br><span class="line">echo WIN版本：Windows7 X86 %FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:7-X64</span><br><span class="line">echo WIN版本：Windows7 X64</span><br><span class="line">echo WIN版本：Windows7 X64 %FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Windows10</span><br><span class="line">verfind &quot; 10.0.10240&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows1507</span><br><span class="line">verfind &quot; 10.0.10586&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows1151</span><br><span class="line">verfind &quot; 10.0.14393&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows1607</span><br><span class="line">verfind &quot; 10.0.15063&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows1703</span><br><span class="line">verfind &quot; 10.0.16299&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows1709</span><br><span class="line">verfind &quot; 10.0.17134&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows1803</span><br><span class="line">verfind &quot; 10.0.17763&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows1809</span><br><span class="line">verfind &quot; 10.0.18362&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows1903</span><br><span class="line">verfind &quot; 10.0.18363&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows1909</span><br><span class="line">verfind &quot; 10.0.19041&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows2004</span><br><span class="line">verfind &quot; 10.0.19042&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows20H2</span><br><span class="line">verfind &quot; 10.0.19043&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows21H1</span><br><span class="line">verfind &quot; 10.0.19044&quot; &gt;nul</span><br><span class="line">if not errorlevel 1 goto Windows21H2</span><br><span class="line">(echo 查询版本失败,NET环境请使用根据系统版本安装)</span><br><span class="line"></span><br><span class="line">:Windows1507</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 1507-X86) else (goto 1507-X64)</span><br><span class="line">:1507-X86</span><br><span class="line">echo WIN版本：Windows10(1507) X86</span><br><span class="line">echo WIN版本：Windows10(1507) X86&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:1507-X64</span><br><span class="line">echo WIN版本：Windows10(1507) X64</span><br><span class="line">echo WIN版本：Windows10(1507) X64&gt;&gt;%FFINGCHECK% </span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Windows1511</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 1511-X86) else (goto 1511-XX64)</span><br><span class="line">:1511-XX86</span><br><span class="line">echo WIN版本：Windows10(1511) X86</span><br><span class="line">echo WIN版本：Windows10(1511) X86&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:1511-XX64</span><br><span class="line">echo WIN版本：Windows10(1511) X64</span><br><span class="line">echo WIN版本：Windows10(1511) X64&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Windows1607</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 1607-X86) else (goto 1607-X64)</span><br><span class="line">:1607-X86</span><br><span class="line">echo WIN版本：Windows10(1607) X86</span><br><span class="line">echo WIN版本：Windows10(1607) X86&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:1607-X64</span><br><span class="line">echo WIN版本：Windows10(1607) X64</span><br><span class="line">echo WIN版本：Windows10(1607) X64&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Windows1703</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 1703-X86) else (goto 1703-X64)</span><br><span class="line">:1703-X86</span><br><span class="line">echo WIN版本：Windows10(1703) X86</span><br><span class="line">echo WIN版本：Windows10(1703) X86&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:1703-X64</span><br><span class="line">echo WIN版本：Windows10(1703) X64</span><br><span class="line">echo WIN版本：Windows10(1703) X64&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Windows1709</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 1709-X86) else (goto 1709-X64)</span><br><span class="line">:1709-X86</span><br><span class="line">echo WIN版本：Windows10(1709) X86</span><br><span class="line">echo WIN版本：Windows10(1709) X86&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:1709-X64</span><br><span class="line">echo WIN版本：Windows10(1709) X64</span><br><span class="line">echo WIN版本：Windows10(1709) X64&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Windows1803</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 1803-X86) else (goto 1803-X64)</span><br><span class="line">:1803-X86</span><br><span class="line">echo WIN版本：Windows10(1803) X86</span><br><span class="line">echo WIN版本：Windows10(1803) X86&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:1803-X64</span><br><span class="line">echo WIN版本：Windows10(1803) X64</span><br><span class="line">echo WIN版本：Windows10(1803) X64&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Windows1809</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 1809-X86) else (goto 1809-X64)</span><br><span class="line">:1809-X86</span><br><span class="line">echo WIN版本：Windows10(1809) X86</span><br><span class="line">echo WIN版本：Windows10(1809) X86&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:1809-X64</span><br><span class="line">echo WIN版本：Windows10(1809) X64</span><br><span class="line">echo WIN版本：Windows10(1809) X64&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Windows1903</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 1903-X86) else (goto 1903-X64)</span><br><span class="line">:1903-X86</span><br><span class="line">echo WIN版本：Windows10(1903) X86</span><br><span class="line">echo WIN版本：Windows10(1903) X86&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:1903-X64</span><br><span class="line">echo WIN版本：Windows10(1903) X64</span><br><span class="line">echo WIN版本：Windows10(1903) X64&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Windows1909</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 1909-X86) else (goto 1909-X64)</span><br><span class="line">:1909-X86</span><br><span class="line">echo WIN版本：Windows10(1909) X86</span><br><span class="line">echo WIN版本：Windows10(1909) X86&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:1909-X64</span><br><span class="line">echo WIN版本：Windows10(1909) X64</span><br><span class="line">echo WIN版本：Windows10(1909) X64&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Windows2004</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 2004-X86) else (goto 2004-X64)</span><br><span class="line">:2004-X86</span><br><span class="line">echo WIN版本：Windows10(2004) X86</span><br><span class="line">echo WIN版本：Windows10(2004) X86&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:2004-X64</span><br><span class="line">echo WIN版本：Windows10(2004) X64</span><br><span class="line">echo WIN版本：Windows10(2004) X64&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Windows20H2</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 20H2-X86) else (goto 20H2-X64)</span><br><span class="line">:20H2-X86</span><br><span class="line">echo WIN版本：Windows10(20H2) X86</span><br><span class="line">echo WIN版本：Windows10(20H2) X86&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:20H2-X64</span><br><span class="line">echo WIN版本：Windows10(20H2) X64</span><br><span class="line">echo WIN版本：Windows10(20H2) X64&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Windows21H1</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 21H1-X86) else (goto 21H1-X64)</span><br><span class="line">:21H1-X86</span><br><span class="line">echo WIN版本：Windows10(21H1) X86</span><br><span class="line">echo WIN版本：Windows10(21H1) X86&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:21H1-X64</span><br><span class="line">echo WIN版本：Windows10(21H1) X64</span><br><span class="line">echo WIN版本：Windows10(21H1) X64&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Windows21H2</span><br><span class="line">if /i &quot;%PROCESSOR_IDENTIFIER:~0,3%&quot;==&quot;X86&quot; (goto 21H2-X86) else (goto 21H2-X64)</span><br><span class="line">:21H2-X86</span><br><span class="line">echo WIN版本：Windows10(21H2) X86</span><br><span class="line">echo WIN版本：Windows10(21H2) X86&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line">:21H2-X64</span><br><span class="line">echo WIN版本：Windows10(21H2) X64</span><br><span class="line">echo WIN版本：Windows10(21H2) X64&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto AU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:AU</span><br><span class="line">::################判断角色权限######################</span><br><span class="line">path %path%;%FFING_ONEKEY_DIR%</span><br><span class="line">::判断操作系统</span><br><span class="line">verfindstr XP &gt;/nul</span><br><span class="line">if %errorlevel%==0 (goto XP ) else (goto WIN )</span><br><span class="line"></span><br><span class="line">:WIN</span><br><span class="line">::获取管理员权限(仅适用win7/win10)</span><br><span class="line">%1 start &quot;&quot; mshta vbscript:CreateObject(&quot;Shell.Application&quot;).ShellExecute(&quot;cmd.exe&quot;,&quot;/c %~s0 ::&quot;,&quot;&quot;,&quot;runas&quot;,1)(window.close)&amp;&amp;exit</span><br><span class="line">goto CHECK</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:XP</span><br><span class="line">::获取管理员权限(仅适用xp)</span><br><span class="line">echo.</span><br><span class="line">goto CHECK</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:CHECK</span><br><span class="line">::IE一键设置 ###################################################################</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo --------------------------------------------------------------- </span><br><span class="line">echo启动IE自动设置</span><br><span class="line">echo ---------------------------------------------------------------</span><br><span class="line">start C:\FFING_Onekey\IE_auto.bat</span><br><span class="line"></span><br><span class="line">:PING-WAIT</span><br><span class="line">ping -n 2 127.0.0.1&gt;/nul</span><br><span class="line">tasklist /v /fo csv findstr &quot;IE_auto.bat&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0 goto PING-WAIT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo --------------------------------------------------------------- </span><br><span class="line">echoIE自动设置完成</span><br><span class="line">echo ---------------------------------------------------------------</span><br><span class="line">ECHO.</span><br><span class="line">ECHO.</span><br><span class="line">ECHO.</span><br><span class="line">ECHO.</span><br><span class="line">ECHO.</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">::title</span><br><span class="line">title ffing一键安装</span><br><span class="line">path %path%;%FFING_ONEKEY_DIR%</span><br><span class="line">::定义变量</span><br><span class="line">set REG000=&quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall&quot;</span><br><span class="line">set REGNET=&quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\NET Framework Setup\NDP&quot;</span><br><span class="line"></span><br><span class="line">echo 插件名称   检测结果</span><br><span class="line">echo ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">::监测adober是否安装</span><br><span class="line">reg query  %REG000%  /s find /i &quot;Adobe Reader&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0 ( goto YES1 ) else ( goto NO1 )</span><br><span class="line"></span><br><span class="line">:NO1</span><br><span class="line">if exist &quot;C:\Program Files (x86)\Adobe\Reader 9.0\Reader\AcroRd32.exe&quot; ( goto YES1 ) else ( goto NO11 )</span><br><span class="line"></span><br><span class="line">:YES1</span><br><span class="line">echoAdobeReade已安装</span><br><span class="line">echoAdobeReade已安装&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto NET3.5</span><br><span class="line">:NO11</span><br><span class="line">echoAdobeReade未安装</span><br><span class="line">echoAdobeReade未安装&gt;&gt;%FFINGCHECK%</span><br><span class="line">goto NET3.5</span><br><span class="line"></span><br><span class="line">:NET3.5</span><br><span class="line">::监测是否安装net3.5</span><br><span class="line">reg query  %REGNET%  /s find /i &quot;v3.5&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0 (</span><br><span class="line">echonet3.5环境已安装</span><br><span class="line">echonet3.5环境已安装&gt;&gt;%FFINGCHECK%</span><br><span class="line">) else (</span><br><span class="line">echonet3.5环境未安装</span><br><span class="line">echonet3.5环境未安装&gt;&gt;%FFINGCHECK%</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">::监测是否安装FFING</span><br><span class="line">reg query  %REG000%  /s find /i &quot;FFINGPlugin&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0 (</span><br><span class="line">echoffing插件已安装</span><br><span class="line">echoffing插件已安装&gt;&gt;%FFINGCHECK%</span><br><span class="line">) else (</span><br><span class="line">echoffing插件未安装</span><br><span class="line">echoffing插件未安装&gt;&gt;%FFINGCHECK%</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line">echo ---------------------------------------------------------------</span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">::判断现有状态是否全部都已经安装，如全部安装跳至结束</span><br><span class="line">type %FFINGCHECK%findstr &quot;已安装&quot;find /c /v &quot;&quot; &gt;%temp%\softnum.txt</span><br><span class="line">set /P SOFTNUM=&lt;%temp%\softnum.txt</span><br><span class="line">if %SOFTNUM%==3 goto OVER</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo 根据检测结果，开始自动下载安装所需软件</span><br><span class="line">echo 保存路径：C:\</span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">::################自动安装流程#######################################################################################################################################</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">::服务器地址</span><br><span class="line">SET IPADD=huawei.ffing.cn</span><br><span class="line">SET URL=http://%IPADD%:5244/d</span><br><span class="line">SET FFINGVER=社会渠道</span><br><span class="line">echo 当前版本：%FFINGVER%</span><br><span class="line">::判断网络是否畅通</span><br><span class="line">ping -n 2 %IPADD% &gt;&gt;%FFINGCHECK%</span><br><span class="line">type %FFINGCHECK%find /i &quot;TTL=&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0  goto NET-TRUE</span><br><span class="line">:NET-ERROR </span><br><span class="line">echo 网络异常，无法继续下载安装，请确认网络或渠道版本</span><br><span class="line">echo 按任意键退出</span><br><span class="line">ping -n 5 127.0.0.1 &gt;/nul</span><br><span class="line">pause &gt;/nul</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">:NET-TRUE</span><br><span class="line"></span><br><span class="line">::检测信息分配变量</span><br><span class="line">path %path%;%FFING_ONEKEY_DIR%</span><br><span class="line">(SET /P INFO=&amp;SET /P WINVER=&amp;SET /P ADOBER_INFO=&amp;SET /P NET3.5_INFO=&amp;SET /P FFING_INFO=)&lt;%FFINGCHECK%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">::安装唯一区别在于net3.5版本及位数</span><br><span class="line"></span><br><span class="line">SET APP1=adobeReader9.exe</span><br><span class="line">SET APP1_DOWN=%URL%/ClientUpgrade/downLoadFile/%APP1%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">::Net3.5名称</span><br><span class="line"></span><br><span class="line">::XP</span><br><span class="line">SET APP2-XP=XP-Net3.5_src.exe</span><br><span class="line">::</span><br><span class="line">SET APP2_DOWN-XP=%URL%/ClientUpgrade/downLoadFile/%APP2-XP%</span><br><span class="line"></span><br><span class="line">::WIN10名称范例：WIN10_1909_X86-Net3.5_src.exe</span><br><span class="line">type %FFINGCHECK%find  &quot;X86&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0 (set BIT=X86) else (set BIT=X64)</span><br><span class="line">SET APP2-WIN10=WIN10_%WINVER:~16,4%_%BIT%-Net3.5_src.exe</span><br><span class="line">::</span><br><span class="line">SET APP2_DOWN-WIN10=%URL%/ClientUpgrade/downLoadFile/%APP2-WIN10%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SET APP3=FFINGupgrade-now.exe</span><br><span class="line">::</span><br><span class="line">SET APP3_DOWN=%URL%/ClientUpgrade/downLoadFile/%APP3%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Download-APP1</span><br><span class="line">::判断APP1是否安装</span><br><span class="line">type %FFINGCHECK%find &quot;AdobeReade已安装&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0  goto Download-APP2</span><br><span class="line"></span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 开始下载:%APP1%【如下载长时间卡死，请按键盘Ctrl+C，可继续下载】</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 下载地址:%APP1_DOWN%</span><br><span class="line">wgetX86.exe   %APP1_DOWN%       -P C:\FFING_Onekey  -O --no-check-certificate</span><br><span class="line">if %errorlevel%==0 (goto TRUE1 ) else (goto FALSE1)</span><br><span class="line">:TRUE1</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 下载完成:%APP1%</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">goto Install-APP1</span><br><span class="line"></span><br><span class="line">:FALSE1</span><br><span class="line">echo.</span><br><span class="line">echo. </span><br><span class="line">echo. </span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo %APP1%下载失败，4秒后重试</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">ping 127.0.0.1 &gt;/nul</span><br><span class="line">goto Download-APP2</span><br><span class="line"></span><br><span class="line">:Install-APP1</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 正在安装:%APP1%</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">%APP1% /sPB /rs /l /msi&quot;/qb-! /norestart ALLUSERS=2 EULA_ACCEPT=YES SUPPRESS_APP_LAUNCH=YES&quot;</span><br><span class="line">:Install-APP1-WAIT</span><br><span class="line">ping -n 1 127.0.0.1 &gt;/nul</span><br><span class="line">tasklist findstr %APP1% &gt;/nul</span><br><span class="line">if %errorlevel%==0 goto Install-APP1-WAIT</span><br><span class="line">echo.</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo                                %APP1%安装完成</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo.</span><br><span class="line">echo.</span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Download-APP2</span><br><span class="line">::判断APP2是否安装</span><br><span class="line">type %FFINGCHECK%find &quot;net3.5环境已安装&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0 goto Download-APP3</span><br><span class="line"></span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 开始下载:%APP2%【如下载长时间卡死，请按键盘Ctrl+C，可继续下载】</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">::判断系统</span><br><span class="line">type %FFINGCHECK% findstr  &quot;XP&quot;  &gt;/nul</span><br><span class="line">if %errorlevel%==0  goto APP2_DOWN-XP</span><br><span class="line">type %FFINGCHECK% findstr  &quot;Vista&quot;  &gt;/nul</span><br><span class="line">if %errorlevel%==0  goto APP2_DOWN-XP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">type %FFINGCHECK% findstr  &quot;Windows10&quot;  &gt;/nul</span><br><span class="line">if %errorlevel%==0  goto APP2_DOWN-WIN10</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:APP2_DOWN-XP</span><br><span class="line">set APP2=%APP2-XP%</span><br><span class="line">goto APP2_DOWN</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:APP2_DOWN-WIN10</span><br><span class="line">set APP2=%APP2-WIN10%</span><br><span class="line">goto APP2_DOWN</span><br><span class="line"></span><br><span class="line">:APP2_DOWN</span><br><span class="line">echo 下载地址%URL%/ClientUpgrade/downLoadFile/%APP2%</span><br><span class="line">wgetX86.exe  %URL%/ClientUpgrade/downLoadFile/%APP2% -P C:\FFING_Onekey --no-check-certificate</span><br><span class="line">if %errorlevel%==0 (goto TRUE2 ) else (goto FALSE2)</span><br><span class="line"></span><br><span class="line">:TRUE2</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 下载完成:%APP2%</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">goto Install-APP2</span><br><span class="line"></span><br><span class="line">:FALSE2</span><br><span class="line">echo.</span><br><span class="line">echo. </span><br><span class="line">echo. </span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo %APP2%下载失败，网络异常，4秒后重新下载</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">ping 127.0.0.1 &gt;/nul</span><br><span class="line">goto Download-APP2</span><br><span class="line"></span><br><span class="line">:Install-APP2</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 正在安装:%APP2%</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">start %APP2%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Install-APP2-WAIT</span><br><span class="line">ping -n 1 127.0.0.1 &gt;/nul</span><br><span class="line">tasklist findstr %APP2% &gt;/nul</span><br><span class="line">if %errorlevel%==0 goto Install-APP2-WAIT</span><br><span class="line"></span><br><span class="line">:Net3.5-CMD_CHECK</span><br><span class="line">tasklist /v /fo csv  findstr /i &quot;Net3.5_src-install&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0 ( goto TRUE-WAIT ) else ( goto FALSE-GO)</span><br><span class="line">:TRUE-WAIT</span><br><span class="line">ping -n 1 127.0.0.1 &gt;/nul</span><br><span class="line">goto Net3.5-CMD_CHECK</span><br><span class="line">:FALSE-GO</span><br><span class="line">::判断Win10Net3.5安装状态</span><br><span class="line">type %FFINGCHECK%find &quot;Net3.5安装成功&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0  (</span><br><span class="line">echo.</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo                                %APP2%安装完成</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo.</span><br><span class="line">echo.</span><br><span class="line">echo.</span><br><span class="line">goto Download-APP3</span><br><span class="line"></span><br><span class="line">) else (</span><br><span class="line">echo.</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo!!! %APP2%安装失败，缺少依赖框架，无法正常使用ffing插件!!!</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 安装失败,请联系终端管理员手动修复Net3.5后，再执行本程序!!!</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 安装失败,请联系终端管理员手动修复Net3.5后，再执行本程序!!!</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 安装失败,请联系终端管理员手动修复Net3.5后，再执行本程序!!!</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo.</span><br><span class="line">echo.</span><br><span class="line">echo.</span><br><span class="line">echo 按任意键退出</span><br><span class="line">pause &gt;/nul</span><br><span class="line">exit</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Download-APP3</span><br><span class="line">::判断APP3是否安装</span><br><span class="line">type %FFINGCHECK%find &quot;ffing插件已安装&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0 goto OVER</span><br><span class="line"></span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 开始下载:%APP3%【如下载长时间卡死，请按键盘Ctrl+C，可继续下载】</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 下载地址:%APP3_DOWN%</span><br><span class="line">wgetX86.exe %APP3_DOWN% -P C:\FFING_Onekey --no-check-certificate</span><br><span class="line">if %errorlevel%==0 (goto TRUE3 ) else (goto FALSE3)</span><br><span class="line">:TRUE3</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 下载完成:%APP3%</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">goto Install-APP3</span><br><span class="line"></span><br><span class="line">:FALSE3</span><br><span class="line">echo.</span><br><span class="line">echo. </span><br><span class="line">echo. </span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo %APP3%下载失败，4秒后重试</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">ping 127.0.0.1 &gt;/nul</span><br><span class="line">goto Download-APP3</span><br><span class="line"></span><br><span class="line">:Install-APP3</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 正在安装:%APP3%</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">start %APP3%</span><br><span class="line"></span><br><span class="line">:WARN-FFING</span><br><span class="line">echo.</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo 请手动点击&quot;下一步&quot;安装FFING插件，待安装结束，自动刷新检测结果</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:Install-APP3-WAIT</span><br><span class="line">ping -n 1 127.0.0.1 &gt;/nul</span><br><span class="line">tasklist findstr %APP3% &gt;/nul</span><br><span class="line">if %errorlevel%==0 goto Install-APP3-WAIT</span><br><span class="line">goto OVER-CHECK</span><br><span class="line"></span><br><span class="line">:OVER</span><br><span class="line">echo.</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo                                ffing全部安装结束</span><br><span class="line">echo ----------------------------------------------------------------------------</span><br><span class="line">echo.</span><br><span class="line">echo 按任意键退出</span><br><span class="line">pause &gt;/nul</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:OVER-CHECK</span><br><span class="line">::检测FFING安装进程是否存在</span><br><span class="line">tasklist findstr  %APP3% &gt;/nul</span><br><span class="line">if %errorlevel%==0 goto WARN-FFING</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">::定义变量</span><br><span class="line">set REG000=&quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall&quot;</span><br><span class="line">set REGNET=&quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\NET Framework Setup\NDP&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo 插件名称   检测结果版本：%FFINGVER%</span><br><span class="line">echo ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">::监测adober是否安装</span><br><span class="line">reg query  %REG000%  /s find /i &quot;Adobe Reader&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0 ( goto YES1 ) else ( goto NO1 )</span><br><span class="line"></span><br><span class="line">:NO1</span><br><span class="line">if exist &quot;C:\Program Files (x86)\Adobe\Reader 9.0\Reader\AcroRd32.exe&quot; ( goto YES1 ) else ( goto NO11 )</span><br><span class="line"></span><br><span class="line">:YES1</span><br><span class="line">echoAdobeReade已安装</span><br><span class="line">goto NET3.5</span><br><span class="line">:NO11</span><br><span class="line">echoAdobeReade未安装</span><br><span class="line">goto NET3.5</span><br><span class="line"></span><br><span class="line">:NET3.5</span><br><span class="line">::监测是否安装net3.5</span><br><span class="line">reg query  %REGNET%  /s find /i &quot;v3.5&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0 (</span><br><span class="line">echonet3.5环境已安装</span><br><span class="line">) else (</span><br><span class="line">echonet3.5环境未安装</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">::监测是否安装FFING</span><br><span class="line">reg query  %REG000%  /s find /i &quot;FFINGPlugin&quot; &gt;/nul</span><br><span class="line">if %errorlevel%==0 (</span><br><span class="line">echoffing插件已安装</span><br><span class="line">) else (</span><br><span class="line">echoffing插件未安装</span><br><span class="line">)</span><br><span class="line">echo ---------------------------------------------------------------</span><br><span class="line">echo 已刷新检测结果，按任意键退出</span><br><span class="line">pause &gt;/nul</span><br><span class="line">exit</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拓展：</p><p>dos美化问题，可自行百度，或者直接dos转图形化</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bat </tag>
            
            <tag> api拉取安装 </tag>
            
            <tag> wget </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>亚马逊国外云桌面（免费撸）</title>
      <link href="/posts/34a2aa16.html"/>
      <url>/posts/34a2aa16.html</url>
      
        <content type="html"><![CDATA[<p>最近工作有点忙，写个亚马逊云桌面的免费资源教程。</p><p>云桌面，远程到国外的云桌面，随便你怎么搞，就如我之前写的<a href="https://blog.ffing.cn/linux/%e7%a7%91%e5%ad%a6%e4%b8%8a%e7%bd%91-%e5%85%8d%e8%b4%b9%e4%ba%9a%e9%a9%ac%e9%80%8a%e4%ba%91%e6%90%ad%e5%bb%bav2ray">科学上网-免费亚马逊云搭建v2ray</a>，无限注册、即可无限撸，随你懂得！</p><p>（亚马逊云活动还挺给力的，云服务器试用12个依然存在！亚马逊试用活动首页：<a href="https://aws.amazon.com/cn/free/?sc_channel=seo&campaign=backlink">https://aws.amazon.com/cn/free/</a>）</p><p>保姆级流程，“手拿把掐”</p><p><strong>注：</strong>亚马逊注册认证，个人认证需要提供双币信用卡，企业认证需要营业执照。且注册后，验证周期需要几个小时，建议先注册几个小时后，等待验证通过再去开通服务器！！！</p><h2 id="流程："><a href="#流程：" class="headerlink" title="流程："></a><strong>流程：</strong></h2><p>1.注册亚马逊账号（获取免费12个月云服务器及3个月免费云桌面）</p><p>2.开通云桌面服务</p><p>3.你想搞啥呢？</p><p>4.简述对比</p><h2 id="第一步，注册亚马逊账号"><a href="#第一步，注册亚马逊账号" class="headerlink" title="第一步，注册亚马逊账号"></a>第一步，注册亚马逊账号</h2><p>1.1)亚马逊官网注册，选择个人注册或者企业注册，根据个人情况！！！</p><p>亚马逊中国区官网：<a href="https://www.amazonaws.cn/?sc_channel=seo&campaign=backlink">https://www.amazonaws.cn</a>（国内亚马逊注册目前仅支持企业，需提供企业营业执照，进行认证）</p><p>亚马逊国际官网：<a href="https://aws.amazon.com/cn/free/?sc_channel=seo&campaign=backlink">https://aws.amazon.com</a>（国际亚马逊注册支持个人和海外企业，需双币信用卡，进行认证）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-1.png"></p><p>1.2）用户名、密码！！！建议记事本保存，避免我这种注册多的，忘记！！！</p><p>（如果已有账号，也推荐你去新注册一个，毕竟活动大部分都是针对新用户,当然活动期内无限注册，换句话就是无限续期）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-3.png"></p><p>1.3)完善资料，根据自己情况填写联系个人信息或企业信息，若是长期账号的建议认真填写！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-5.png"></p><p>1.4）认证</p><p>个人认证，需要双币信用卡进行认证；</p><p>企业认证，会有个亚马逊来电认证，需输入屏幕验证码</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-7.png"></p><p>1.5）支撑，免费的要啥自行车，走起！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-8.png"></p><p>到此注册结束。</p><p>等待亚马逊认证，周期一般几分钟，就可以收到注册成功的邮件信息，<strong>但部分服务则需要等待几个小时</strong>（如云服务器、云桌面等服务），官方邮件只写了24小时以内，呵呵呵。当然，也可以登录亚马逊官网查看状态！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-16.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-14.png"></p><p>看到上图就继续等待吧。</p><h2 id="第二步，开通云桌面服务"><a href="#第二步，开通云桌面服务" class="headerlink" title="第二步，开通云桌面服务"></a>第二步，开通云桌面服务</h2><p>2.1）点击登录，默认登录会显示你的登录ID，很重要！！！建议收藏一下（我曾经因为注册邮箱忘记、注册ID忘记、导致亚马逊云无法登陆。。。）也可以去你注册邮箱，也会收到亚马逊的注册ID邮件</p><p>注：如注册服务未完成，请等待一下，一般几个小时即可。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-9.png"></p><p>下图为亚马逊邮件提示ID</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-11.png"></p><p>2.2）登录，ID在你的注册邮件里，用户名和密码是1.2步骤让你保存的。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-12.png"></p><p>2.3）登录后，默认页面为控制台，从“服务”中选择“ Lightsail”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-18.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-19.png"></p><p>2.4）创建实例</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-20.png"></p><p>2.5）选择云桌面区域及系统</p><ol><li>虚拟桌面的地理位置；</li><li>操作系统平台（这里推荐初学者选择<code>Windows</code>，方便管理, 虚拟桌面系统版本没有特殊要求就选择最新版<code>windows</code>即可）;</li><li>配置和付费计划（<strong>目前免费试用的配置都可以体验3个月</strong>)；</li><li>选择好以后，点击创建实例。</li></ol><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-21.png"></p><p>2.6）等待桌面创建完成</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-22.png"></p><p>2.7）连接桌面（正在运行表示启完成），点击“小电脑”图标，即可远程连接桌面</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-24.png"></p><p>2.8）桌面来了，就像你自己的电脑一样，正常办公娱乐是没问题的，但部分牵涉底层开发类的不太实用，毕竟是虚拟机处理的桌面。换句话说，要啥自行车！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-25.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/09/image-26.png"></p><p>2.9）如果不想频繁登录亚马逊官网，可以开启这个云桌面的RDP、vnc远程（或者向日葵、Todesk类的远程工具），直接到本地连接，有兴趣的可以自己折腾。</p><h2 id="第三步，你想搞啥呢？"><a href="#第三步，你想搞啥呢？" class="headerlink" title="第三步，你想搞啥呢？"></a>第三步，你想搞啥呢？</h2><p>亚马逊的国外远端云桌面，就像你在家远程了一个国外的电脑，你可以明正言顺的使用这台云电脑科学上网。。。哈哈哈</p><p>要啥自行车、要啥socket代理、要啥ssr、要啥vmess、要啥v2ray</p><p>发散性思维，学以致用，误入歧途！！！</p><h2 id="简述总结："><a href="#简述总结：" class="headerlink" title="简述总结："></a>简述总结：</h2><p>对比国内的云桌面，优势就是在于国外的丰富的学习资源，可以让你科学上网，至于客户端连接及网速根据自己学习、办公场景，仁者见仁智者见智。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云服务 </tag>
            
            <tag> 云桌面 </tag>
            
            <tag> 亚马逊 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redhat6 添加开机启动项（tomcat）</title>
      <link href="/posts/ce39003.html"/>
      <url>/posts/ce39003.html</url>
      
        <content type="html"><![CDATA[<p>redhat6添加开机启动的方式有两种：</p><p>第一种，rc.local比较简单，仅可以实现开机启动，随用随加</p><p>第二种，添加到系统服务，需要配置文件稍微复杂，但可以通过系统命令启停及加载开机启动</p><p>背景：</p><p>redhat6用的比较少，原来测试开机启动脚本时候就直接加到&#x2F;etc&#x2F;rc.d&#x2F;rc.local即可，今天测试发现添加了tomcat后无法启动，</p><p>随百度了一下，发现rc.local中启动的脚本，如果依赖有环境变量，需要在rc.local加入环境变量才可以实现开机启动。</p><h2 id="第一种，rc-local"><a href="#第一种，rc-local" class="headerlink" title="第一种，rc.local"></a>第一种，rc.local</h2><p>rc.local内容如下：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/08/image-5.png"></p><h2 id="第二种，配置系统服务"><a href="#第二种，配置系统服务" class="headerlink" title="第二种，配置系统服务"></a>第二种，配置系统服务</h2><p>下面记录的时搭建及测试流程。</p><h2 id="环境如下："><a href="#环境如下：" class="headerlink" title="环境如下："></a>环境如下：</h2><p>redhat6地址：<a href="https://access.redhat.com/downloads/content/69/ver=/rhel---6/6.0/x86/_64/product-software">https://access.redhat.com/downloads/content/69/ver=/rhel---6/6.0/x86\_64/product-software</a></p><p>jdk1.7地址：<a href="https://www.oracle.com/java/technologies/javase/javase7-archive-downloads.html#jdk-7u80-oth-JPR">https://www.oracle.com/java/technologies/javase/javase7-archive-downloads.html#jdk-7u80-oth-JPR</a></p><p>tomcat6地址：<a href="https://archive.apache.org/dist/tomcat/">https://archive.apache.org/dist/tomcat/</a></p><h2 id="操作流程："><a href="#操作流程：" class="headerlink" title="操作流程："></a>操作流程：</h2><p>1.下载安装redhat系统</p><p>2.下载并解压jdk到&#x2F;usr&#x2F;local&#x2F;jdk1.7</p><p>3.下载解压tomcat6到&#x2F;usr&#x2F;local&#x2F;tomcat6</p><p>4.配置&#x2F;etc&#x2F;profile,添加jdk和tomcat环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#JAVA环境</span><br><span class="line">export JAVA_HOME=/usr/local/jdk1.7</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br><span class="line">#tomcat环境</span><br><span class="line">export TOMCAT_HOME=/usr/local/tomcat6</span><br><span class="line">export CATALINA_HOME=$TOMCAT_HOME</span><br><span class="line">export CATLINA_BASE=$TOMCAT_HOME</span><br></pre></td></tr></table></figure><p>5.测试java配置是否正确，测试tomcat是否正常启动</p><p>java测试：java -version</p><p>tomcat测试：ps进程及catalina.out日志查看亦或curl 127.0.0.1:8080</p><p>注：如果外网web测试，注意iptables关闭或放行端口</p><p>6.编辑&#x2F;etc&#x2F;rc.d&#x2F;rc.local，添加开机启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">#</span><br><span class="line"># This script will be executed *after* all the other init scripts.</span><br><span class="line"># You can put your own initialization stuff in here if you don&#x27;t</span><br><span class="line"># want to do the full Sys V style init stuff.</span><br><span class="line"></span><br><span class="line">touch /var/lock/subsys/local</span><br><span class="line">#全局java_home(根据自己的jdk路径进行更换)</span><br><span class="line">export JAVA_HOME=/usr/local/jdk1.7</span><br><span class="line">#tomcat启动路径(根据自己的tomcat路径进行更换)</span><br><span class="line">/usr/local/tomcat6/bin/startup.sh</span><br></pre></td></tr></table></figure><p>注：</p><p>1.redhat6自带jdk1.6，如果安装其他版本需要先卸载自带的jdk</p><p>2.部分jdk和tomcat包中的bin目录下二进制无执行权限，需增加执行权限</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redhat6 </tag>
            
            <tag> 开机启动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell 特殊字符转义方案</title>
      <link href="/posts/8b5a03bf.html"/>
      <url>/posts/8b5a03bf.html</url>
      
        <content type="html"><![CDATA[<p>当变量中有特殊字符，被引用时会被shell解释器直接解析，所以需要转义，如果是单个或临时使用时直接加\或单引号即刻，但被脚本引用时就很尴尬了</p><p>常见转移字符：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">\&#x27;</span><br><span class="line">\&quot;</span><br><span class="line">\*</span><br><span class="line">\?</span><br><span class="line">\\</span><br><span class="line">\~</span><br><span class="line">\`</span><br><span class="line">\!</span><br><span class="line">\#</span><br><span class="line">\$</span><br><span class="line">\&amp;</span><br><span class="line">\</span><br><span class="line">\&#123;</span><br><span class="line">\&#125;</span><br><span class="line">\;</span><br><span class="line">\&lt;</span><br><span class="line">\&gt;</span><br><span class="line">\^</span><br></pre></td></tr></table></figure><p>思路很简单，使用sed进行替换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#[] 为匹配中括号内任意字符</span><br><span class="line">#”’“ 使用双引号转义单引号</span><br><span class="line">#‘“’ 使用单引号转义双引号</span><br><span class="line">#‘’ 使用单引号转义管道符</span><br><span class="line">#以次类推自己发散思维</span><br><span class="line">sed &quot;s/[&quot;&#x27;&quot;&#x27;&quot;&#x27;*?\~&amp;&#123;&#125;;&lt;&gt;^&#x27;&#x27;]/\\\&amp;/g&quot;</span><br></pre></td></tr></table></figure><p>如8ik,*UJM，转义后结果为：8ik,*UJM</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@ffing ~]#echo 8ik,*UJM sed &quot;s/[&#x27;&quot;*?\~&#x27;s/[&#x27;&quot;*?\~&amp;&#123;&#125;;&lt;&gt;^]/\\\&amp;/g&quot;</span><br><span class="line"></span><br><span class="line">8ik,\*UJM</span><br><span class="line">#########################################################</span><br><span class="line">[root@ffing ~]# VAR=&quot;ffing&#x27;&quot;</span><br><span class="line">[root@ffing ~]# echo &quot;$VAR&quot;sed &quot;s/[&quot;&#x27;&quot;&#x27;&quot;&#x27;*?\~&amp;&#123;&#125;;&lt;&gt;^]/\\\&amp;/g&quot;</span><br><span class="line">ffing\&#x27;</span><br><span class="line"></span><br><span class="line">[root@ffing ~]# VAR=&#x27;ffing&quot;&#x27;</span><br><span class="line">[root@ffing ~]# echo &quot;$VAR&quot;sed &quot;s/[&quot;&#x27;&quot;&#x27;&quot;&#x27;*?\~&amp;&#123;&#125;;&lt;&gt;^&#x27;&#x27;]/\\\&amp;/g&quot;</span><br><span class="line">ffing\&quot;</span><br><span class="line"></span><br><span class="line">[root@ffing ~]# VAR=&quot;ffing&#x27;&quot;</span><br><span class="line">[root@ffing ~]# echo &quot;$VAR&quot;sed &quot;s/[&quot;&#x27;&quot;&#x27;&quot;&#x27;*?\~&amp;&#123;&#125;;&lt;&gt;^&#x27;&#x27;]/\\\&amp;/g&quot;</span><br><span class="line">ffing\&#x27;\</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux 通过进程查看脚本真实路径，记录一下proc目录</title>
      <link href="/posts/9d5bff23.html"/>
      <url>/posts/9d5bff23.html</url>
      
        <content type="html"><![CDATA[<p>本想百度一下关于通过进程号查找程序或脚本的真实路径，看了下不能直接解决问题，但还是可以曲线救国的，记录一下。后面学习慢慢补充</p><p>proc目录，内存中的进程全部在此目录，可进入 &#x2F;proc&#x2F;《进程ID》目录查看</p><p>cwd软连接：仅记录你启动程序或脚本时的目录（而非程序或脚本的绝对路径）</p><p>exe软连接：为程序或脚本调用的程序路径</p><p>以一个ping脚本，讲解：</p><p>这个脚本执行时，带上了路径，所以直接上可以通过ps，查看到脚本路径的</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/08/image-2.png"></p><p>再下来是3个ping脚本，执行时没有带脚本路径或是相对路径时，在进程中时无法区分的，但可以通过进入proc目录查看</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/08/image-3.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongodb副本集异常后，主从切换</title>
      <link href="/posts/f1e6cecb.html"/>
      <url>/posts/f1e6cecb.html</url>
      
        <content type="html"><![CDATA[<p>mongodb副本集异常，这里记录以下避免忘记。</p><p>副本集架构：1主、1从、1仲裁</p><p>故障描述：从节点和仲裁节点宕机，这时候主节点就会被降级为从节点（投票机制：必须大于半数才会成为主节点）</p><p>百度了一堆，发现都是需要主节点操作，后发现2种方法</p><p>第一种方法：更新副本集配置，仅保留当前存放的副本集节点</p><p>第二种方法：删除local库中副本集合(system.replset)，再重新创建副本集</p><p>两种方法，第一种更加方便快捷，推荐第一种方法。</p><p>(<strong>如果节点恢复，节点信息未变更，则只需重启mongodb；如果节点信息变更了，建议恢复后的节点将副本集删除后，重启mongodb服务后，从主节点重新添加，否则节点ID会有改变，且有可能添加后的节点状态不对！！！</strong>)</p><p>第一种方法操作如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#获取当前配置并赋值给变量cfg</span><br><span class="line">cfg=rs.config()</span><br><span class="line">#定义members节点（当前存活的节点ID）</span><br><span class="line">cfg.members=[cfg.members[《存活的节点ID》]]</span><br><span class="line">#重新配置，并引用cfg变量(强制生效force:true)</span><br><span class="line">rs.config(cfg,&#123;force:true&#125;)</span><br><span class="line">#查看集群状态</span><br><span class="line">rs.status()</span><br><span class="line">#也可切换local，查看system.replset集合信息</span><br><span class="line">use local</span><br><span class="line">db.system.replset.find()</span><br></pre></td></tr></table></figure><p>第二种方法操作如下：</p><p>1.先切换local库，删除副本集合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#切换local</span><br><span class="line">use local</span><br><span class="line">#查看集合，确认自己的副本集名称</span><br><span class="line">db.system.replset.find()</span><br><span class="line">#删除集合中对对应的副本集名称（如果你只有一个副本集，可以直接remove）</span><br><span class="line">db.system.replset.remove(&#123;&quot;_id&quot;:&quot;《副本集名称》&quot;&#125;);</span><br><span class="line">#再次查看，确认自己的副本集已经被删除</span><br><span class="line">db.system.replset.find()</span><br></pre></td></tr></table></figure><p>2.确认副本集被删除后，重启mongodb</p><p>3.初始化副本集即可</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本批量注释命令</title>
      <link href="/posts/4b6d2e45.html"/>
      <url>/posts/4b6d2e45.html</url>
      
        <content type="html"><![CDATA[<p>脚本测试执行时，有的时候需要批量注释某段代码或导出某段代码作为新的脚本时，可以使用:&lt;&lt;EOF 或 :&lt;&lt;! 去批量注释行</p><p>实现以:&lt;&lt;EOF 开始到EOF之间的代码不做执行！</p><p>&lt;&lt;EOF 等价 &lt;&lt;!</p><p>演示脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo aaaa</span><br><span class="line">echo bbbb</span><br><span class="line">:&lt;&lt;EOF</span><br><span class="line">echo cccc</span><br><span class="line">echo dddd</span><br><span class="line">EOF</span><br><span class="line">echo ffff</span><br></pre></td></tr></table></figure><p>执行如下：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/07/image-3.png"></p><p>&lt;&lt;!效果（推荐尽量使用EOF ，！号功能太过强大，避免眼神不好）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/07/image-4.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bash </tag>
            
            <tag> linux </tag>
            
            <tag> 批量注释 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux expect配合telnet批量测试远端端口</title>
      <link href="/posts/7a6e5349.html"/>
      <url>/posts/7a6e5349.html</url>
      
        <content type="html"><![CDATA[<p>while read读取host文件，使用expect自动处理telnet后grep</p><p>脚本并发，host地址不限数量，3秒结束！</p><p>host.txt文件如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#IPADD          PORT</span><br><span class="line">172.16.207.128  22</span><br><span class="line">172.16.207.129  22</span><br><span class="line">172.16.207.131  80</span><br><span class="line">172.16.207.132  22</span><br><span class="line">172.16.207.132  8080</span><br><span class="line">172.16.207.132  8005</span><br><span class="line">192.168.0.222   333</span><br></pre></td></tr></table></figure><p>测试端口脚本如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">HOST=/root/host.txt</span><br><span class="line">OUTPUT=/tmp/telnet_error.log</span><br><span class="line">###############以下内容无需修改##############</span><br><span class="line">echo starting</span><br><span class="line">echo &quot;telnet error!!!&quot;&gt; $OUTPUT</span><br><span class="line">while read ip</span><br><span class="line">do</span><br><span class="line">(</span><br><span class="line">echo $ipgrep  &quot;^[0-9]&quot; &gt;/dev/nullvi</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">                expect &lt;&lt;EOF  &gt; &quot;$ip&quot;</span><br><span class="line">                set timeout 3;</span><br><span class="line">                spawn telnet $ip</span><br><span class="line">                expect eof</span><br><span class="line">EOF</span><br><span class="line">                grep &quot;Escape character&quot; &quot;$ip&quot; &gt;/dev/null</span><br><span class="line">                if [ ! $? -eq 0 ];then</span><br><span class="line">                grep &#x27;spawn&#x27; &quot;$ip&quot; awk &#x27;$1=$2=&quot; &quot;&#123;print&#125;&#x27; &gt;&gt; $OUTPUT</span><br><span class="line">                fi</span><br><span class="line">                rm -rf &quot;$ip&quot;</span><br><span class="line">fi</span><br><span class="line">)&amp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">done&lt;$HOST</span><br><span class="line">wait</span><br><span class="line">echo &quot;Output:$OUTPUT&quot;</span><br><span class="line">cat $OUTPUT </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> expect </tag>
            
            <tag> telnet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux while/for 读取文件（以telnet批量测试端口）</title>
      <link href="/posts/ff87087.html"/>
      <url>/posts/ff87087.html</url>
      
        <content type="html"><![CDATA[<p>while读取文件时，可按<strong>行标</strong>分割赋值！！！</p><p>for读取文件时，默认按空格分割赋值！！！</p><p>使用while read来读取host.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@ffing ~]# cat host.txt </span><br><span class="line"></span><br><span class="line">172.16.207.128  22</span><br><span class="line">172.16.207.129  22</span><br><span class="line">172.16.207.131  80</span><br><span class="line">172.16.207.132  22</span><br><span class="line">172.16.207.132  8080</span><br><span class="line">172.16.207.132  8005</span><br><span class="line">192.168.0.222   333</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">[root@ffing ~]# cat while_read.sh</span><br><span class="line">#定义变量名为ip</span><br><span class="line">while read ip</span><br><span class="line">do</span><br><span class="line">echo &quot;IP：$ip&quot;</span><br><span class="line">done &lt;host.txt</span><br><span class="line">[root@ffing ~]# bash while_read.sh</span><br><span class="line">IP：</span><br><span class="line">IP：172.16.207.128      22</span><br><span class="line">IP：172.16.207.129      22</span><br><span class="line">IP：172.16.207.131      80</span><br><span class="line">IP：172.16.207.132      22</span><br><span class="line">IP：172.16.207.132      8080</span><br><span class="line">IP：172.16.207.132      8005</span><br><span class="line">IP：192.168.0.222       333</span><br></pre></td></tr></table></figure><p>while read也可使用EOF读取数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@ffing ~]# cat while.sh</span><br><span class="line">while read VAR</span><br><span class="line">do</span><br><span class="line">echo $VAR</span><br><span class="line">done &lt;&lt;EOF</span><br><span class="line">百度 www.baidu.com 80</span><br><span class="line">腾讯 www.qq.com    80</span><br><span class="line">新浪 www.sina.com  80</span><br><span class="line">EOF</span><br><span class="line">[root@ffing ~]# bash while.sh</span><br><span class="line">百度 www.baidu.com 80</span><br><span class="line">腾讯 www.qq.com 80</span><br><span class="line">新浪 www.sina.com 80</span><br></pre></td></tr></table></figure><p>for 利用` ` 或 $()执行命令来读取，但for默认以空格为分隔符！！！</p><p>注：` `等于$() ；cat host.txt等于 &lt;host.txt</p><p>因此：`cat host.txt`&#x3D;&#x3D;$(cat host.txt)&#x3D;&#x3D;`&lt; host.txt`&#x3D;&#x3D;$(&lt; host.txt)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@ffing ~]# cat host.txt </span><br><span class="line"></span><br><span class="line">172.16.207.128  22</span><br><span class="line">172.16.207.129  22</span><br><span class="line">172.16.207.131  80</span><br><span class="line">172.16.207.132  22</span><br><span class="line">172.16.207.132  8080</span><br><span class="line">172.16.207.132  8005</span><br><span class="line">192.168.0.222   333</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">[root@ffing ~]# cat for.sh</span><br><span class="line">for VAR in `&lt;host.txt` </span><br><span class="line">do</span><br><span class="line">echo $VAR</span><br><span class="line">done </span><br><span class="line">[root@ffing ~]# bash for.sh</span><br><span class="line">172.16.207.128</span><br><span class="line">22</span><br><span class="line">172.16.207.129</span><br><span class="line">22</span><br><span class="line">172.16.207.131</span><br><span class="line">80</span><br><span class="line">172.16.207.132</span><br><span class="line">22</span><br><span class="line">172.16.207.132</span><br><span class="line">8080</span><br><span class="line">172.16.207.132</span><br><span class="line">8005</span><br><span class="line">192.168.0.222</span><br><span class="line">333</span><br></pre></td></tr></table></figure><p>理解上面的读取文件，执行telnet就简单了</p><p>避免telnet端口不通，而导致超时时间过过长，加入timeout命令。（也可以使用expect命令配合timeout也可以）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#[root@ffing ~]# cat telnet-while_read.sh</span><br><span class="line">#`时间戳`</span><br><span class="line">DATE=`date +%F_%T`</span><br><span class="line">#定义变量名为ip</span><br><span class="line">while read ip</span><br><span class="line">do</span><br><span class="line">echo &quot;IP：$ip&quot;</span><br><span class="line"></span><br><span class="line">#使用timeout命令3秒后退出telnet，解决端口不通的等待延迟。(也可以配置timeout信号--signal=9 )</span><br><span class="line"></span><br><span class="line">( timeout 3 telnet $ip  &gt;/tmp/telnet.$DATE.&quot;$ip&quot;.tmp 2&gt;&amp;1 )&amp;  </span><br><span class="line"></span><br><span class="line">done &lt;host.txt</span><br><span class="line">wait</span><br><span class="line">echo ----------------------------------------------</span><br><span class="line">echo &quot;telnet 成功如下：&quot;</span><br><span class="line">cat /tmp/telnet.$DATE.* grep  -B1 &#x27;Escape character is&#x27;grep &quot;Connected to&quot;awk &#x27;&#123;print $NF&#125;&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> while </tag>
            
            <tag> for </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本并行多个循环</title>
      <link href="/posts/60d407e1.html"/>
      <url>/posts/60d407e1.html</url>
      
        <content type="html"><![CDATA[<p>因为最近在写脚本处理文件，当文件数小的时候，没有感觉太多，但当数量成几何增长，发现处理速度真的跟不上。</p><p>脚本执行过程都是串行，一个过程结束接下一个过程，但当一直重复同一个循环过程，是否可以并行循环？百度了一下果然大神多多，厉害了我的哥！因为当时手机浏览的，貌似是在知乎上看到的，这里记录一下。</p><p>2个核心点：</p><p>（cmd）&amp;：后台运行</p><p>wait：等待所有进程结束后再退出</p><p>直接贴个代码</p><p>脚本功能：ping局域网的存活主机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">for ip in 192.168.68.&#123;1..254&#125;</span><br><span class="line">do</span><br><span class="line">(</span><br><span class="line">ping  -c 4 $ip &gt;/dev/null </span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;$ip online&quot;</span><br><span class="line">fi</span><br><span class="line">)&amp;</span><br><span class="line">done</span><br><span class="line">wait</span><br></pre></td></tr></table></figure><p>下面这个稍微做了延伸，根据更加cpu内核数量来并发数量，因为有的时候处理的文件太过庞大，可以加以限制。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">FILEPATH=/tmp/1.txt</span><br><span class="line">echo 192.168.68.&#123;1..254&#125; xargs -n1 &gt; $FILEPATH</span><br><span class="line"></span><br><span class="line">LineNUM=`wc -l $FILEPATHawk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">CoreNUM=`lscpugrep &quot;^CPU(s&quot;awk &#x27;&#123;print $NF&#125;&#x27;`</span><br><span class="line">TaskNUM=$((LineNUM/CoreNUM+1))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NNN=1</span><br><span class="line">for i in `seq $CoreNUM`</span><br><span class="line">do</span><br><span class="line">sed -n &quot;$NNN,+$((TaskNUM-1))&quot;p  $FILEPATH &gt;$&#123;FILEPATH&#125;_$i</span><br><span class="line">NNN=$((TaskNUM+1)) </span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">for ip in `cat $&#123;FILEPATH&#125;_*`</span><br><span class="line">do</span><br><span class="line">(</span><br><span class="line"></span><br><span class="line">ping  -c 2 $ip &gt;/dev/null </span><br><span class="line"></span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;$ip online&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">)&amp;</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line">wait</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> liunx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bash 使用expect批量修改主机密码</title>
      <link href="/posts/84d10ff9.html"/>
      <url>/posts/84d10ff9.html</url>
      
        <content type="html"><![CDATA[<p>最近总是有点迷糊，贴个脚本，利用expect的自动应答实现修改密码</p><h2 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a><strong>第一种</strong></h2><p>根据反馈做出应答，这种模式需要匹配对应的字符串，</p><p>但：对于终端和服务器环境语言环境不一致时，要尤其注意！！！（尤其是中文和英文切换，可能脚本在服务器上可以正常使用，一旦你使用终端“中文环境”了，就无法使用了）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/05/image-1.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#实现：批量修改主机密码</span><br><span class="line">#注:需要expect</span><br><span class="line"></span><br><span class="line">#新密码</span><br><span class="line">NEWPWD=&#x27;8ik,*UJM&#x27;</span><br><span class="line"></span><br><span class="line">#主机信息</span><br><span class="line">echo &#x27;</span><br><span class="line">#IPADDUSERPWD</span><br><span class="line">192.168.68.243test1123456</span><br><span class="line">192.168.68.71test1123456</span><br><span class="line">192.168.68.182test1123456</span><br><span class="line"></span><br><span class="line">&#x27;&gt;/dev/null</span><br><span class="line"></span><br><span class="line">###############################################</span><br><span class="line">#以下无需修改！！！</span><br><span class="line">SHPATH=`readlink -f $0`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N=1</span><br><span class="line">for i in $(grep &quot;^[0-9]&quot; $SHPATH)</span><br><span class="line">do</span><br><span class="line">if [ $N -eq 1 ];then </span><br><span class="line">IPADD=$i</span><br><span class="line">elif [ $N -eq 2 ];then </span><br><span class="line">USER=$i</span><br><span class="line">elif [ $N -eq 3 ];then </span><br><span class="line">PWD=$i </span><br><span class="line">echo &quot;old:$IPADD   $USER   $PWD&quot;</span><br><span class="line">echo &quot;new:$IPADD   $USER   $NEWPWD&quot;</span><br><span class="line"></span><br><span class="line">#更新密码操作</span><br><span class="line">expect &lt;&lt;EOF grep success</span><br><span class="line">        set timeout -1;</span><br><span class="line">        spawn ssh $USER@$IPADD</span><br><span class="line">        expect  &#123;</span><br><span class="line">                &quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue &#125;</span><br><span class="line">                &quot;s password:&quot; &#123; send &quot;$PWD\n&quot; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        expect &quot;\n&quot; &#123; send &quot;passwd\n&quot; &#125;</span><br><span class="line">        expect  &#123;</span><br><span class="line">                &quot;(current) UNIX password&quot; &#123; send &quot;$PWD\n&quot;;exp_continue &#125;</span><br><span class="line">                &quot;New password&quot; &#123; send &quot;$NEWPWD\n&quot;;exp_continue &#125;</span><br><span class="line">                &quot;Retype new password&quot; &#123; send &quot;$NEWPWD\n&quot; &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        expect &quot;\n&quot; &#123; send &quot;exit\n&quot; &#125;</span><br><span class="line">        expect eof</span><br><span class="line">EOF</span><br><span class="line">echo &quot;======================================&quot;</span><br><span class="line">N=0</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">let N++</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h2><p>不区分语言环境！！！根据密码出现次数进行修改，我passwd后出现3次密码</p><p>第一次旧密码，第二次新密码，第三次确认新密码！</p><p>(echo 《旧密码》;sleep 1;echo 《新密码》;sleep 1;echo《确认新密码》 )passwd</p><p>注：这个是根据我的系统验证密码的次数做的排序，如果你次数不一样注意修改！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/05/image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#实现：批量修改主机密码</span><br><span class="line">#注:需要expect</span><br><span class="line"></span><br><span class="line">#新密码</span><br><span class="line">NEWPWD=&#x27;8ik,*UJM&#x27;</span><br><span class="line"></span><br><span class="line">#主机信息</span><br><span class="line">echo &#x27;</span><br><span class="line">#IPADDUSERPWD</span><br><span class="line">192.168.68.243test1123456</span><br><span class="line">192.168.68.71test1123456</span><br><span class="line">192.168.68.182test1123456</span><br><span class="line"></span><br><span class="line">&#x27;&gt;/dev/null</span><br><span class="line"></span><br><span class="line">###############################################</span><br><span class="line">SHPATH=`readlink -f $0`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N=1</span><br><span class="line">for i in $(grep &quot;^[0-9]&quot; $SHPATH)</span><br><span class="line">do</span><br><span class="line">if [ $N -eq 1 ];then </span><br><span class="line">IPADD=$i</span><br><span class="line">elif [ $N -eq 2 ];then </span><br><span class="line">USER=$i</span><br><span class="line">elif [ $N -eq 3 ];then </span><br><span class="line">PWD=$i </span><br><span class="line">echo &quot;old:$IPADD   $USER   $PWD&quot;</span><br><span class="line">echo &quot;new:$IPADD   $USER   $NEWPWD&quot;</span><br><span class="line"></span><br><span class="line">#更新密码操作</span><br><span class="line">expect &lt;&lt;EOF grep -E &quot;success成功&quot;</span><br><span class="line">        set timeout -1;</span><br><span class="line">        spawn ssh $USER@$IPADD &quot;(echo $PWD;sleep 1;echo $NEWPWD;sleep 1;echo $NEWPWD )passwd&quot;</span><br><span class="line">        expect  &#123;</span><br><span class="line">                &quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue &#125;</span><br><span class="line">                &quot;s password:&quot; &#123; send &quot;$PWD\n&quot; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        expect eof</span><br><span class="line">EOF</span><br><span class="line">echo &quot;======================================&quot;</span><br><span class="line">N=0</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">let N++</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux 获取字符所在列</title>
      <link href="/posts/a1a268ec.html"/>
      <url>/posts/a1a268ec.html</url>
      
        <content type="html"><![CDATA[<p>总是正向取值，这里来个反向取值。</p><p>因为不常用容易忘记，记录一下</p><p>使用awk命令，及内置for、if函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#定位时间所在列表</span><br><span class="line">[root@hecs-299586 ~]# date $dateawk &#x27;/[0-9]:[0-9][0-9]:[0-9][0-9]/ &#123;for (i=1;i&lt;=NF;i++) if($i ~/[0-9]:[0-9][0-9]:[0-9][0-9]/) print &quot;第&quot;i&quot;列&quot;&#125;&#x27;</span><br><span class="line">第5列</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/04/image-4.png"></p><p>也可以用来定位文件中需要查找的列并输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#config.xml文件内容如下 </span><br><span class="line">&lt;?xml version=&quot;1.0&quot; standalone=&quot;yes&quot; ?&gt;</span><br><span class="line">&lt;!-- Copyright (c) 1999, 2019, Oracle and/or its affiliates.</span><br><span class="line">All rights reserved. --&gt;</span><br><span class="line">&lt;!-- Do not modify the contents of this file by hand. --&gt;</span><br><span class="line">&lt;!-- Note: If there are any xml tools listed for suppression, the suppression shall be ignored and the xml tools shall be considered for execution during installation --&gt;</span><br><span class="line">&lt;CONFIG_LIST&gt;</span><br><span class="line">&lt;COMP NAME=&quot;oracle.server&quot; VER=&quot;19.0.0.0.0&quot; PLAT=&quot;Linux&quot;&gt;</span><br><span class="line">   &lt;CT NAME=&quot;configtool1&quot; NAME_ID=&quot;configtool1_ALL&quot; DESC_ID=&quot;configtool1_DESC_ALL&quot; LOC=&quot;&quot; AGGREGATE_NAME=&quot;oracle.server.19_0_0_0_0.xml&quot; CLS_NAME=&quot;&quot; PLAT=&quot;Linux&quot;/&gt;</span><br><span class="line">&lt;/COMP&gt;</span><br><span class="line">&lt;COMP NAME=&quot;oracle.ons.ic&quot; VER=&quot;19.0.0.0.0&quot; PLAT=&quot;Linux&quot;&gt;</span><br><span class="line">   &lt;CT NAME=&quot;configtool1&quot; NAME_ID=&quot;configtool1_ALL&quot; DESC_ID=&quot;configtool1_DESC_ALL&quot; LOC=&quot;&quot; AGGREGATE_NAME=&quot;oracle.ons.ic.19_0_0_0_0.xml&quot; CLS_NAME=&quot;&quot; PLAT=&quot;Linux&quot;/&gt;</span><br><span class="line">&lt;/COMP&gt;</span><br><span class="line">&lt;COMP NAME=&quot;oracle.has.common&quot; VER=&quot;19.0.0.0.0&quot; PLAT=&quot;Linux&quot;&gt;</span><br><span class="line">   &lt;CT NAME=&quot;configtool1&quot; NAME_ID=&quot;configtool1_ALL&quot; DESC_ID=&quot;configtool1_DESC_ALL&quot; LOC=&quot;&quot; AGGREGATE_NAME=&quot;oracle.has.common.19_0_0_0_0.xml&quot; CLS_NAME=&quot;&quot; PLAT=&quot;Linux&quot;/&gt;</span><br><span class="line">&lt;/COMP&gt;</span><br><span class="line">&lt;COMP NAME=&quot;oracle.assistants.netca.client&quot; VER=&quot;19.0.0.0.0&quot; PLAT=&quot;Linux&quot;&gt;</span><br><span class="line">   &lt;CT NAME=&quot;configtool1&quot; NAME_ID=&quot;configtool1_ALL&quot; DESC_ID=&quot;configtool1_DESC_ALL&quot; LOC=&quot;&quot; AGGREGATE_NAME=&quot;oracle.assistants.netca.client.19_0_0_0_0.xml&quot; CLS_NAME=&quot;&quot; PLAT=&quot;Linux&quot;/&gt;</span><br><span class="line">&lt;/COMP&gt;</span><br><span class="line">&lt;/CONFIG_LIST&gt;</span><br><span class="line"></span><br><span class="line">#从/home/oracle/oracle-install安装文件中查找出配置文件，并输出版本号</span><br><span class="line">[root@ffing ~]# find /home/oracle/oracle-install -type f -name config.xml xargs grep -i &quot;oracle.server.*ver&quot;awk &#x27;&#123;for(i=1;i&lt;=NF;i++) if($i ~ /[0-9].[0-9].[0-9].[0-9]/) print $i&#125;&#x27;awk -F&quot;\&quot;&quot; &#x27;&#123;print $2&#125;&#x27;</span><br><span class="line">19.0.0.0.0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> awk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell 判断变量值是否包含字母、数字、特殊符号等</title>
      <link href="/posts/61aec7cf.html"/>
      <url>/posts/61aec7cf.html</url>
      
        <content type="html"><![CDATA[<p>变量判断是否包含需求的类型:</p><p>[:alnum:] 所有的字母和数字<br>[:alpha:] 所有字母<br>[:digit:] 所有的数字<br>[:lower:] 所有的小写字符<br>[:upper:] 所有大写字母<br>[:blank:] 水平制表符，空白等<br>[:cntrl:] 所有控制字符<br>[:graph:] 所有可打印字符，不包括空格<br>[:print:] 所有可打印字符，包括空格<br>[:punct:] 所有的标点字符<br>[:space:] 所有的横向或纵向的空白 </p><p>例：利用case进行判断，这个比较简单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line"></span><br><span class="line">read -p &quot;请输入一个字符:&quot; VAR</span><br><span class="line">      case &quot;$VAR&quot; in</span><br><span class="line">               [:alpha:]) </span><br><span class="line">echo &#x27;[:alpha:]字母&#x27;</span><br><span class="line">;;      </span><br><span class="line">                #[a-z][A-Z]) ，与[:alpha:]一样效果</span><br><span class="line">#echo &#x27;[a-z][A-Z]字母&#x27;</span><br><span class="line">#;;</span><br><span class="line">               [0-9]) </span><br><span class="line">      echo &#x27;数字&#x27;</span><br><span class="line">      ;;</span><br><span class="line">               &quot;+&quot;) </span><br><span class="line">      echo &#x27;+号&#x27;</span><br><span class="line">      ;;</span><br><span class="line">               &quot;=&quot;)</span><br><span class="line">                echo &#x27;=号&#x27;  </span><br><span class="line">      ;;</span><br><span class="line"></span><br><span class="line">               #....//其它字符，自行添加</span><br><span class="line">               *)</span><br><span class="line">                   echo &quot;检测到不合法字符，结束程序&quot;</span><br><span class="line"></span><br><span class="line">                   exit 0;;</span><br><span class="line">      esac</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>例:判断用户名是否合法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#用户名不能包含特殊字符，仅允许大小写字母、数字</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line"></span><br><span class="line">echo &quot;用户名仅支持大小写字母、数字，且不能超过10个字符！&quot;</span><br><span class="line">echo &quot;注：只能以字母开头且不支持标点符号&quot;</span><br><span class="line">read -p &quot;请输入：&quot; NAME</span><br><span class="line">if [[ &quot;$NAME&quot; =~ ^[[:alpha:]].* &amp;&amp; ! `echo $NAMEgrep [[:punct:]]`  &amp;&amp; $&#123;#NAME&#125; -le 10 ]];then</span><br><span class="line">echo &quot;您输入的用户名为：$NAME&quot;</span><br><span class="line">echo &quot;合法！&quot;</span><br><span class="line">echo</span><br><span class="line">else</span><br><span class="line">echo &quot;您输入的用户名为：$NAME&quot;</span><br><span class="line">echo &quot;不合法，请重新输入！&quot;</span><br><span class="line">echo</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><strong>解析一下</strong>：</p><p>if中2个&amp;&amp;，表示3个条件是与但关系，必须同时成立（返回值都为0），则then，否则else</p><p><strong>第一个条件</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;$NAME&quot; =~ ^[[:alpha:]].*</span><br></pre></td></tr></table></figure><p>用来判断是否以字符开头，</p><p>=~，表示&#x3D;之后但正则</p><p>^,以某某开头</p><p>[[:alpha:]]，所以字母</p><p>.* ，通配符</p><p><strong>第二个条件</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">! `echo $NAMEgrep [[:punct:]]`</span><br><span class="line">#可拆分为两个：!和echo $NAMEgrep [[:punct:]]</span><br></pre></td></tr></table></figure><p>用来判断是否含有标点符号。</p><p>！，叹号取反</p><p>echo $NAMEgrep [[:punct:]]，过滤是否含义标点符号</p><p>当过滤出标点符号，返回值为0；未过滤出标点，返回是1；过滤返回结果刚好与我们所需相反，所以需要！取反。</p><p><strong>第三个条件：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;#NAME&#125; -le 10 </span><br></pre></td></tr></table></figure><p>$NAME的字符长度不能超过10个字节，也就是小于等于le</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> liunx </tag>
            
            <tag> 变量判断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 非交互式修改密码</title>
      <link href="/posts/18ecee15.html"/>
      <url>/posts/18ecee15.html</url>
      
        <content type="html"><![CDATA[<p>3种免交互修改密码</p><p>下面写三种，印象中还有第四种后期想起来再补充</p><h2 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h2><p>使用echo管道给passwd</p><p>两个echo进行传输，但由于echo速度太多，导致passwd没有反应时间，所以中间需要sleep等待1秒</p><p>语法：（echo 《新密码》; sleep 1; echo 《确认密码》）passwd 《用户名》</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#修改test用户密码为1234 </span><br><span class="line">(echo 123456;sleep 1;echo 123456 )passwd test</span><br></pre></td></tr></table></figure><h2 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h2><p>使用passwd –stdin参数，这个用的比较多，单独执行时，容易history泄露密码</p><p>语法：echo 《新密码》 passwd –stdin 《用户名》</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 123456passwd --stdin test</span><br></pre></td></tr></table></figure><h2 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h2><p>chpasswd命令，可用于单用户修改密码，也可以批量修改用户密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#单用户，修改用户test，密码为123</span><br><span class="line">echo &quot;test:123456&quot;chpasswd</span><br><span class="line">#批量修改，将用户密码文件导入到chpasswd</span><br><span class="line">chpasswd &lt; passwd.txt</span><br></pre></td></tr></table></figure><h2 id="拓展："><a href="#拓展：" class="headerlink" title="拓展："></a>拓展：</h2><p>expect自动化也可以实现，一般用于脚本</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 免交互 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 获取字符长度</title>
      <link href="/posts/24df268.html"/>
      <url>/posts/24df268.html</url>
      
        <content type="html"><![CDATA[<p>写脚本遇到获取变量或字符长度问题，如字符串长度、截取指定长度等。</p><p>获取字符操作常用两种${}和awk</p><p>${}：字节的起始位是0</p><p>awk：字节的起始位是1</p><p>如：获取字符串长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">AAA=ffing.cn</span><br><span class="line">###使用$&#123;&#125;</span><br><span class="line">[root@ffing ~]# echo $&#123;#AAA&#125;</span><br><span class="line">8</span><br><span class="line"></span><br><span class="line">###使用awk需配合length</span><br><span class="line">[root@ffing ~]# echo $AAAawk &#x27;&#123;print length&#125;&#x27;</span><br><span class="line">8</span><br></pre></td></tr></table></figure><p>如：截取字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">AAA=ffing.cn</span><br><span class="line">###使用$&#123;&#125;</span><br><span class="line">#截取前2个字节：0代表起始位置：2代表两个字节</span><br><span class="line">[root@ffing ~]# echo $&#123;AAA:0:2&#125;</span><br><span class="line">ff</span><br><span class="line">#截取第后2个字节，需要先获取总字节长度，$(())支持语法及运算</span><br><span class="line">[root@ffing ~]# NUM=$(($&#123;#AAA&#125;-2)) &amp;&amp;echo $NUM</span><br><span class="line">6</span><br><span class="line">#起始位是0，因此6其实是第7位字节！</span><br><span class="line">[root@ffing ~]# echo $&#123;AAA:NUM:2&#125;</span><br><span class="line">cn</span><br><span class="line"></span><br><span class="line">###awk需配合substr</span><br><span class="line">#截取前2个字节，1代表起始位置，2代表2个字节</span><br><span class="line">[root@ffing ~]# echo $AAAawk &#x27;&#123;print substr($1,1,2)&#125;&#x27;</span><br><span class="line">ff</span><br><span class="line">#截取最后2个字节，需利用length获取字符长度，为什么减1？因为awk起始位置是1</span><br><span class="line">#即：substr内为（$1,8-1,2）,从第7为取2个字节！</span><br><span class="line">[root@ffing ~]# echo $AAAawk &#x27;&#123;print substr($1, length($1)-1  ,2)&#125;&#x27;</span><br><span class="line">cn</span><br></pre></td></tr></table></figure><p>场景应用1：获取时间戳</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#时间戳获取：时分秒</span><br><span class="line">DATETIME=&#x27;**** 15/Mar/2022_15:13:09AM&#x27;</span><br><span class="line"></span><br><span class="line">#awk获取时间戳，以冒号分割</span><br><span class="line">#小时是倒数第三个字段$(NF-2),取最后2个字节:substr($(NF-2),length($(NF-2))-1,2)</span><br><span class="line">#分钟是倒数第二个字段$(NF-1)</span><br><span class="line">#秒就是最后一个字段$NF，取前2个字节了:substr( $NF,1,2 )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo $DATETIMEawk -F&quot;:&quot; &#x27;&#123;print substr($(NF-2),length($(NF-2))-1,2) &quot;:&quot; $(NF-1) &quot;:&quot; substr( $NF,1,2 )&#125;&#x27;</span><br><span class="line"></span><br><span class="line">#注：获取小时，需要先获取$(NF-2)的长度，因此length( $(NF-2) )</span><br></pre></td></tr></table></figure><p>场景应用2：获取文件名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#不推荐$0,因为$0其实是你执行脚本的路径</span><br><span class="line">#推荐readlink -f 《文件名》</span><br><span class="line">#</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> awk </tag>
            
            <tag> liunux </tag>
            
            <tag> ${} </tag>
            
            <tag> 字符串长度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux  浅谈base64加密、解密（文件转换）</title>
      <link href="/posts/6c9ce06c.html"/>
      <url>/posts/6c9ce06c.html</url>
      
        <content type="html"><![CDATA[<p>Base64是网络上最常见的用于传输8Bit字节码的编码方式之一，Base64就是一种基于64个可打印字符来表示二进制数据的方法。</p><p>可以将<strong>任意文件</strong>转为Base64编码进行存储，且支持管道输入。</p><p>因此，常说的base64加密其实应该理解为转码，解密应该是解码（因为在你解码的时候是不进行密码验证的）。</p><p>平时发的邮件，就是将邮件内容和附件通过Base64位进行存储传输的。</p><p>base64编码表64个，而百度还有人说：还有个“&#x3D;”号，学习中。。。</p><p>索引</p><p>对应字符</p><p>索引</p><p>对应字符</p><p>索引</p><p>对应字符</p><p>索引</p><p>对应字符</p><p>0</p><p>A</p><p>16</p><p>Q</p><p>32</p><p>g</p><p>48</p><p>w</p><p>1</p><p>B</p><p>17</p><p>R</p><p>33</p><p>h</p><p>49</p><p>x</p><p>2</p><p>C</p><p>18</p><p>S</p><p>34</p><p>i</p><p>50</p><p>y</p><p>3</p><p>D</p><p>19</p><p>T</p><p>35</p><p>j</p><p>51</p><p>z</p><p>4</p><p>E</p><p>20</p><p>U</p><p>36</p><p>k</p><p>52</p><p>0</p><p>5</p><p>F</p><p>21</p><p>V</p><p>37</p><p>l</p><p>53</p><p>1</p><p>6</p><p>G</p><p>22</p><p>W</p><p>38</p><p>m</p><p>54</p><p>2</p><p>7</p><p>H</p><p>23</p><p>X</p><p>39</p><p>n</p><p>55</p><p>3</p><p>8</p><p>I</p><p>24</p><p>Y</p><p>40</p><p>o</p><p>56</p><p>4</p><p>9</p><p>J</p><p>25</p><p>Z</p><p>41</p><p>p</p><p>57</p><p>5</p><p>10</p><p>K</p><p>26</p><p>a</p><p>42</p><p>q</p><p>58</p><p>6</p><p>11</p><p>L</p><p>27</p><p>b</p><p>43</p><p>r</p><p>59</p><p>7</p><p>12</p><p>M</p><p>28</p><p>c</p><p>44</p><p>s</p><p>60</p><p>8</p><p>13</p><p>N</p><p>29</p><p>d</p><p>45</p><p>t</p><p>61</p><p>9</p><p>14</p><p>O</p><p>30</p><p>e</p><p>46</p><p>u</p><p>62</p><ul><li></li></ul><p>15</p><p>P</p><p>31</p><p>f</p><p>47</p><p>v</p><p>63</p><p>&#x2F;</p><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#转码（加密）</span><br><span class="line">base64 《文件名》</span><br><span class="line">#解码（解密）</span><br><span class="line">base64 -d《文件名》</span><br></pre></td></tr></table></figure><p>测试环境centos7.9</p><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">###管道传递</span><br><span class="line">#字符串ffing，进行转码</span><br><span class="line">[root@ffing ~]# echo ffing base64</span><br><span class="line">ZmZpbmcK</span><br><span class="line">#解码（还原）</span><br><span class="line">[root@ffing ~]# echo ZmZpbmcKbase64 -d</span><br><span class="line">ffing</span><br><span class="line"></span><br><span class="line">###对文件转码</span><br><span class="line">#查看test.txt</span><br><span class="line">[root@ffing ~]# cat test.txt</span><br><span class="line">ffing.cn</span><br><span class="line">#转码后值</span><br><span class="line">[root@ffing ~]# base64 test.txt</span><br><span class="line">ZmZpbmcuY24K</span><br><span class="line">#将转码后文件导入到jm.txt</span><br><span class="line">[root@ffing ~]# base64 test.txt &gt;jm.txt</span><br><span class="line">#解码jm.txt</span><br><span class="line">[root@ffing ~]# base64 -d jm.txt</span><br><span class="line">ffing.cn </span><br></pre></td></tr></table></figure><p>base64可对任意文件进行二进制转码，因此如果跨平台传送数据，用base64真的很方便！</p><p>测试异常情况：当时在centos7.6，对文件zip、exe、dmg转码失败，不知道是不是本地语言环境问题，后来就没有测试了。</p><p>拓展：</p><p>gpg：文件加密工具，linux原生工具，可验证密码。</p>]]></content>
      
      
      <categories>
          
          <category> Me </category>
          
      </categories>
      
      
        <tags>
            
            <tag> base64 </tag>
            
            <tag> liunux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 日志时间区间过滤（非连续时间戳）</title>
      <link href="/posts/1c2aa917.html"/>
      <url>/posts/1c2aa917.html</url>
      
        <content type="html"><![CDATA[<p>sed过滤区间日志时，需要保障过滤的值必须存在，否则就会sed到日志结尾。</p><p>因此，当过滤时间区间日志是就需要去查找最近的时间戳。</p><p>我的这个脚本是针对一天的时间区间进行过滤（00:00:00-23:59:59），下面的脚本，是我从自己的脚本拆出来的，主要讲下思路，方便后期回忆。</p><p>下例：以过滤06:00至08:30之间的日志为例</p><p>范例：存在时间戳3:00:01、5:59:05、7:00:41、7:30:08、8:30:20、8:30:40</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">2022/03/01 03:00:01 [error] 1408#0: *54996 open() &quot;/usr/share/nginx/phpinfo/ftptest.cgi&quot; failed (2: No such file or directory), client: 23.95.100.141, server: , request: &quot;GET /ftptest.cgi HTTP/1.0&quot;</span><br><span class="line">2022/03/01 05:59:05 [alert] 1408#0: *55032 open socket #5 left in connection 21</span><br><span class="line">ffing cn</span><br><span class="line">2022/03/01 07:00:41 [alert] 1408#0: aborting ffing cn</span><br><span class="line">2022/03/01 07:30:08 [error] 1383#0: *14 open() &quot;/usr/share/nginx/phpinfo/ftptest.cgi&quot; failed (2: No such file or directory), client: 23.95.100.141, server: , request: &quot;GET /ftptest.cgi HTTP/1.0&quot;</span><br><span class="line">2022/03/01 08:30:20 [error] 1383#0: ffing cn*2361 directory index of &quot;/usr/share/nginx/yourls-ffing/&quot; is forbidden, client: 157.55.39.190, server: yourls.ffing.cn, request: &quot;GET / HTTP/1.1&quot;, host: &quot;yourls.ffing.cn&quot;</span><br><span class="line">2022/03/01 08:30:40 [error] 1383#0:  ffing cn *2693 open() &quot;/usr/share/nginx/phpinfo/manager/html&quot; failed (2: No such file or directory), client: 111.197.65.99, server: , request: &quot;GET /manager/html HTTP/1.1&quot;, host: &quot;49.233.25.243:81&quot;</span><br></pre></td></tr></table></figure><p>第一种：枚举时间戳</p><p>思路简单，使用date -d 参数里生成时间戳，去遍历日志中时间（可提前过滤出时间列）这种方法思路比较简单，但会遍历每一秒,需要消耗枚举时间，因此这种方法适合时间戳密集的日志，时间戳稀疏的不合适。</p><p>如果日志一个时间戳日志是“多行”或者时间戳日志出现“多个时间”，需要看我前面的分割日志的文章，需要对时间戳进行过滤修改，我的方法是对时间戳日志提前输出到一个临时文件，再追加一个标识符，方便识别</p><p>贴下脚本：</p><p>输入值，自行补充判断。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">read -p &quot;请输入日志路径：&quot; FILE</span><br><span class="line">read -p &quot;请输入两个时间段（空格分隔）：&quot; F1 F2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#获取起始时间FF1</span><br><span class="line">I=0</span><br><span class="line">while true</span><br><span class="line">do </span><br><span class="line">FF1=`date -d &quot;$(echo $F1sed &#x27;s/://&#x27;) +$I second&quot; +%H:%M:%S`</span><br><span class="line">#不能大于结束时间</span><br><span class="line">if [  $(date -d &quot;$FF1&quot; +%s) -lt $(date -d &quot;$F2&quot; +%s)  ];then</span><br><span class="line">grep &quot;$FF1&quot; $FILE &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;最近起始时间节点$FF1&quot;;</span><br><span class="line">break</span><br><span class="line">fi</span><br><span class="line">else</span><br><span class="line">FF1=&quot;&quot;</span><br><span class="line">echo &quot;未找到起始时间节点&quot;</span><br><span class="line">break </span><br><span class="line">fi</span><br><span class="line">let I++</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">#获取结束时间FF2</span><br><span class="line">I=0</span><br><span class="line">while true</span><br><span class="line">do </span><br><span class="line">FF2=`date -d &quot;$(echo $F2sed &#x27;s/://&#x27;) -$I second&quot; +%H:%M:%S`</span><br><span class="line">#不能大于结束时间</span><br><span class="line"></span><br><span class="line">if [  $(date -d &quot;$FF1&quot; +%s) -lt $(date -d &quot;$FF2&quot; +%s)  ];then</span><br><span class="line">grep $FF2 $FILE &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;最近结束时间节点$FF2&quot;;</span><br><span class="line">break</span><br><span class="line">fi</span><br><span class="line">else</span><br><span class="line">FF2=&quot;&quot;</span><br><span class="line">echo &quot;未找到结束时间节点&quot;</span><br><span class="line">break</span><br><span class="line">fi</span><br><span class="line">let I++</span><br><span class="line">done</span><br><span class="line">sed -n &quot;/$FF1/,/$FF2/&quot;p  $FILE</span><br></pre></td></tr></table></figure><p>第二种：时分秒对比</p><p>这个就稍微有一点绕，需要判断时分秒，起始时间很简单，顺序过滤即可。核心在于这个结束时间，需要倒序，且结束时间不存在时，就需要从59-00倒序循环。效率很高，推荐！</p><p>分析两种结束时间状态：</p><p>第一种，过滤06:00:00至08:30:30（理想状态）<br>最近的结束时间戳为：08:30:20<br>存在相同的“时”、“分”，而“秒”只需从30秒倒序到20。<br>即：输入“时”匹配，“分”匹配、秒从30–20（倒序）</p><p>第二种，过滤06:00:00至08:30:00<br>最近的结束时间戳为：7:30:08<br>简单当小于8:00:00秒的，肯定时、分、秒都是前位借1，也就“时”要-1，“分”要从59–00的倒序，秒也是59–00的倒序。</p><p>范例说明：需从上面的test.log中过滤6:00:30-8:30:00之间的日志</p><p>而日志中存在5个时间戳3:00:01、5:59:05、7:00:41、7:30:08、8:30:20、8:30:40</p><p>可以肉眼分别出符合这个时间段的：7:00:41、7:30:08</p><p>也就是要找：大于等于“起始时间”最近最相近时间戳和小于等于“结束时间”最相近时间戳</p><p>最近的起始时间戳：7:00:41</p><p>最近的结束时间戳：7:30:08</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">read -p &quot;请输入文件路径：&quot; FILE</span><br><span class="line">read -p &quot;请输入两个时间段（空格分隔）：&quot; F1 F2</span><br><span class="line">#获取日志中时间戳</span><br><span class="line">TMPHMS=`awk  /[0-9]:[0-9][0-9]:[0-9][0-9]/&#x27;&#123;print $2&#125;&#x27; $FILEsort -u`</span><br><span class="line">F1H=`echo $F1awk -F&quot;:&quot; &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">F1M=`echo $F1awk -F&quot;:&quot; &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">F1S=`echo $F1awk -F&quot;:&quot; &#x27;&#123;print $3&#125;&#x27;`</span><br><span class="line">#如果秒为空，则00</span><br><span class="line">if [ -z $F1S ];then F1S=00 ;fi</span><br><span class="line"></span><br><span class="line">F2H=`echo $F2awk -F&quot;:&quot; &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">F2M=`echo $F2awk -F&quot;:&quot; &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">F2S=`echo $F2awk -F&quot;:&quot; &#x27;&#123;print $3&#125;&#x27;`</span><br><span class="line">#如果秒为空，则00</span><br><span class="line">if [ -z $F2S ];then F2S=00 ;fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#获取开始时间段</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">#获取小时</span><br><span class="line">for H in `seq $F1H $F2H`</span><br><span class="line">do</span><br><span class="line">echo $TMPHMSgrep $H:..:..  &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#获取分钟</span><br><span class="line">for M in `seq -w $F1M 59`</span><br><span class="line">do</span><br><span class="line">echo $TMPHMSgrep $H:$M:..  &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line"></span><br><span class="line">#获取秒</span><br><span class="line">for S in `seq -w $F1S 59`</span><br><span class="line">do</span><br><span class="line">echo $TMPHMSgrep $H:$M:$S  &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">FF1=$H:$M:$S</span><br><span class="line">echo &quot;起始节点：$FF1&quot;</span><br><span class="line">break 4</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo &quot;日志中未找到起始时间段&quot;</span><br><span class="line">exit</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#获取结束时间段</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">#获取小时</span><br><span class="line">for HH in `seq $F1H $F2Htac`</span><br><span class="line">do</span><br><span class="line">echo $TMPHMSgrep $HH:..:..  &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line"></span><br><span class="line">#当“时”不等输入值，则分=59，从59倒序</span><br><span class="line">if [ ! $HH -eq $F2H ];then F2M=59;fi</span><br><span class="line">#获取分钟</span><br><span class="line">for MM in `seq -w 00 $F2Mtac `</span><br><span class="line">do</span><br><span class="line"></span><br><span class="line">echo $TMPHMSgrep $HH:$MM:..  &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line"></span><br><span class="line">#当“时”或“分”任意一个不等于输入值时，则秒=59，从59倒序</span><br><span class="line">if [ ! $HH -eq $F2H -o  ! $MM -eq $F2M ];then F2S=59;fi</span><br><span class="line">#获取秒</span><br><span class="line">for SS in `seq -w 00 $F2Stac`</span><br><span class="line">do</span><br><span class="line">echo $TMPHMSgrep $HH:$MM:$SS  &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">FF2=$HH:$MM:$SS</span><br><span class="line">echo &quot;结束节点：$FF2&quot;</span><br><span class="line">break 4</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo &quot;日志中未找到结束时间段&quot;</span><br><span class="line">exit</span><br><span class="line">done</span><br><span class="line">sed -n &quot;/$FF1/,/$FF2/&quot;p  $FILE</span><br></pre></td></tr></table></figure><p>上贴脚本是从我的日志分析脚本中截取出来的，稍微做了修改，主要讲思路，勿忘。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 日志过滤 </tag>
            
            <tag> 非连续时间戳日志过滤 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell 日志字段过滤脚本</title>
      <link href="/posts/c8cb7d41.html"/>
      <url>/posts/c8cb7d41.html</url>
      
        <content type="html"><![CDATA[<p>头有点大，这段时间一直在思考日志过滤问题，问题是实际生产环境中，开发者不同，且没有统一日志输出标准，导致日志输出格式不同（文件备份名不同、日期格式不同，输出格式不同，这都不是事，让我真正懵逼的是竟然把多个日志输出到一个文件中，估计是开发自己都没注意日志叠加输出了，哎，叠加输出时间戳就没办法搞了，我就真懵逼了。。。而且tail -f时出现文件被应用mv了o(╥﹏╥)o）</p><p>贴一个前段时间写的日志过滤脚本，实现效果，时间节点为单位，呈现时间节点的日志中字段出现位置及次数，并最终统计，因为错误大同小异，为了节省时间，做了每个时间点截取输出；如果把整个字段全部导出，再过滤会有消耗一定时间，但可以做时间节点标记，有兴趣的可以跟着思路再走一个脚本（字段忽略大小写）</p><p>我的思路：</p><p>获取字段出现的行，并向上、向下获取时间节点 h:mm:ss段（为什么不是hh，因为有个别日志是上午、下午 ），并截取这个时间节点内容到临时文件。</p><p>以我测试服务器做的范例效果如下：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-27.png"></p><p>脚本如下（几乎都做了注释，方便理解）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#ffing.cn</span><br><span class="line">read -p &quot;请输文件路径(仅绝对路径或当前路径)：&quot; LOG</span><br><span class="line">if [ ! -f &quot;$LOG&quot; ];then echo &quot;路径不存在，请核实！&quot;;exit;fi</span><br><span class="line">LOGPATH=$(readlink -f &quot;$LOG&quot;)</span><br><span class="line">read -p &quot;请输过滤字段(可支持字符串中间空格)：&quot; VAR</span><br><span class="line">if [ -z &quot;$VAR&quot; ];then echo &quot;字段不能为空，请核实！&quot;;exit;fi</span><br><span class="line">#字段出现总次数</span><br><span class="line">COUNT=`grep -io &quot;$&#123;VAR&#125;&quot; &quot;$LOGPATH&quot;  wc -l`</span><br><span class="line">if [ $COUNT -eq 0 ];then &quot;未从$LOGPATH过滤出字段$VAR&quot;;exit;fi</span><br><span class="line">#信息展示</span><br><span class="line">echo &quot;字段出现次数：$COUNT&quot;</span><br><span class="line">echo &quot;文件路径：$LOGPATH&quot;</span><br><span class="line"></span><br><span class="line">#获取所有出现的行号</span><br><span class="line">ALLLINE=`grep -nio &quot;$&#123;VAR&#125;&quot; $LOGPATHcut -d&quot;:&quot; -f1`</span><br><span class="line"></span><br><span class="line">#初始值</span><br><span class="line">#初始打印次数</span><br><span class="line">PNUM=1</span><br><span class="line">#初始字段列</span><br><span class="line">FNUM=1</span><br><span class="line">#临时文件路径</span><br><span class="line">TMPLOG=/tmp/templogdisplay</span><br><span class="line"></span><br><span class="line">#是否打印字段</span><br><span class="line">echo &quot;是否打印字段日志（过滤日志，需要等待一定时间:与文件大小、字段出现频率有关）&quot;</span><br><span class="line">read -p &quot;请输入（回车或任意键回车，继续；ESC回车，退出）：&quot; KEY</span><br><span class="line">case $KEY in</span><br><span class="line">$&#x27;\E&#x27;)</span><br><span class="line"> echo &quot;未进行字段过滤，直接退出&quot;</span><br><span class="line"> exit</span><br><span class="line"> ;;</span><br><span class="line"> *)</span><br><span class="line"> ;;</span><br><span class="line">esac </span><br><span class="line">#WHILE</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line"></span><br><span class="line">###获取字段所在行号</span><br><span class="line">FLINE=`echo $ALLLINEawk -v NNN=$FNUM &#x27;&#123;print $NNN&#125;&#x27;`</span><br><span class="line">##################获取字段所在时间段内日志（若无时间节点则向上1000行）</span><br><span class="line"></span><br><span class="line">##########打印起始位置到字段出现行号的日志到临时文件</span><br><span class="line">##获取时间节点起始位置</span><br><span class="line">#字段所在行是否有时间节点</span><br><span class="line">sed -n &quot;$FLINE&quot;p $LOGPATHgrep &quot;[0-9]:[0-9][0-9]:[0-9][0-9]&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then </span><br><span class="line">STARTLINE=$FLINE</span><br><span class="line">else</span><br><span class="line">STARTLINE=$((FLINE-1000))</span><br><span class="line">                #判断起始行是否小于1，小于则改为1,保障起始行为正数</span><br><span class="line">                if [ $STARTLINE -lt 1 ];then </span><br><span class="line">                STARTLINE=1</span><br><span class="line">                fi</span><br><span class="line">fi</span><br><span class="line">#将起始行到字段行,内容导入到临时文件TMPLOG</span><br><span class="line">sed -n &quot;$STARTLINE,$FLINE&quot;p $LOGPATH &gt;$TMPLOG</span><br><span class="line">#########对临时文件处理，删除字段所在时间节点之前的日志</span><br><span class="line">#处理多余时间节点日志</span><br><span class="line">#获取时间节点数量</span><br><span class="line">TIMENUM=`grep &quot;[0-9]:[0-9][0-9]:[0-9][0-9]&quot; $TMPLOGwc -l` </span><br><span class="line">#时间节点数量大于等于2，证明多个时间节点，需删除多余的时间节点</span><br><span class="line">if [ $TIMENUM -ge 2 ];then</span><br><span class="line">#获取最后一个时间节点行号</span><br><span class="line">ENDLINE=`grep -n &quot;[0-9]:[0-9][0-9]:[0-9][0-9]&quot; $TMPLOGtail -n1cut -d&quot;:&quot; -f1`</span><br><span class="line">#删除多余的时间节日志，从第一行到最后一个时间节点的上一行</span><br><span class="line">sed -i &quot;1,$((ENDLINE-1))&quot;d $TMPLOG</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">##########打印字段出现行号到+1000行的日志到临时文件</span><br><span class="line">sed -n &quot;$((FLINE+1)),+1000&quot;p $LOGPATH&gt;&gt;$TMPLOG</span><br><span class="line">##########对临时文件处理，删除字段所在时间点之后的日志</span><br><span class="line">        #处理多余时间节点日志</span><br><span class="line">        #获取时间节点数量</span><br><span class="line">        TIMENUM=`grep &quot;[0-9]:[0-9][0-9]:[0-9][0-9]&quot; $TMPLOGwc -l`</span><br><span class="line">        #时间节点数量大于等于2，证明多个时间节点，需删除多余的时间节点</span><br><span class="line">        if [ $TIMENUM -ge 2 ];then</span><br><span class="line">#获取第二个时间节点行号</span><br><span class="line">ENDLINE=`grep -n &quot;[0-9]:[0-9][0-9]:[0-9][0-9]&quot; $TMPLOGawk &#x27;NR==2&#x27;cut -d&quot;:&quot; -f1`</span><br><span class="line">        #删除多余的时间节点日志，从第二个时间节点到文件结尾行</span><br><span class="line">        sed -i &quot;$ENDLINE,$&quot;d $TMPLOG</span><br><span class="line">        fi</span><br><span class="line">##########现在TMPLOG中保留的是第一个时间节点中出现的字段（字段可能是一个、也可能是多个）</span><br><span class="line">#统计TMPLOG中出现的字段数量</span><br><span class="line">TMPCOUNT=`grep -io &quot;$VAR&quot; $TMPLOGwc -l`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#########打印日志内容</span><br><span class="line">echo </span><br><span class="line">echo &quot;第$PNUM个时间节点，当前时间节点出现&lt;&lt;&lt; $VAR &gt;&gt;&gt;字段为$TMPCOUNT处&quot;</span><br><span class="line">echo &quot;=======================过滤字符串将以&lt;&lt;&lt; &gt;&gt;&gt;标识=======================&quot;</span><br><span class="line">cat $TMPLOG sed &quot;s/$VAR/&lt;&lt;&lt;&amp;/ig;s/$VAR/&amp;&gt;&gt;&gt;/ig&quot;</span><br><span class="line">echo &quot;=======================================================================&quot;</span><br><span class="line">#下次打印字段位于第几处</span><br><span class="line">FNUM=$((TMPCOUNT+FNUM))</span><br><span class="line">##剩余字段数量</span><br><span class="line">RCOUNT=$((COUNT-FNUM+1))</span><br><span class="line">#是否继续打印</span><br><span class="line">#判断是否打印完成所有字段</span><br><span class="line">if [ $FNUM -gt $COUNT ];then</span><br><span class="line">echo &quot;#################所有字段印完成！##################&quot;</span><br><span class="line">echo &quot;文件$LOGPATH&quot;</span><br><span class="line">echo &quot;字段$VAR：共出现在$PNUM个时间节点，共出现$COUNT处。&quot;</span><br><span class="line">exit</span><br><span class="line">else</span><br><span class="line">echo &quot;字段$VAR，总计$COUNT处，剩余$RCOUNT处，是否继续打印第$FNUM 处&quot;</span><br><span class="line">read -p &quot;请输入（回车或任意键回车，继续；ESC回车，退出）：&quot; KEY</span><br><span class="line">case $KEY in</span><br><span class="line">$&#x27;\E&#x27;)</span><br><span class="line">            echo &quot;还有$RCOUNT 处未打印，提前退出&quot;</span><br><span class="line">            exit</span><br><span class="line">            ;;</span><br><span class="line">            *)</span><br><span class="line">            ;;</span><br><span class="line">esac </span><br><span class="line"></span><br><span class="line">fi</span><br><span class="line">let PNUM++</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志过滤 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 日志过滤常用sed、awk、grep、xargs等操作</title>
      <link href="/posts/bba4e09.html"/>
      <url>/posts/bba4e09.html</url>
      
        <content type="html"><![CDATA[<p>因为最近一直在写过滤日志的脚本，写一下日志中的常用的相关操作命令。</p><h2 id="xargs命令"><a href="#xargs命令" class="headerlink" title="xargs命令"></a>xargs命令</h2><p>很方便的工具，支持管道或标准输入，尝尝find配合使用，当然也可以对ls配合，通常用于批量文件操作。也可以将单行或多行文本输入转换为其他格式，例如多行变单行，单行变多行。</p><p>（<strong>xargs 默认的命令是 echo「默认空格定界符，-d 自定义定界符」，因此通过xargs 的处理，换行和空白将被空格取代，变成一行数据！！！</strong>它能够捕获一个命令的输出，然后传递给另外一个命令）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / *[0-9].log ls -l       #这个命令是错误的</span><br><span class="line">find / *[0-9].log xargs ls -lh   #查找以“数字.log”结尾的文件并现在文件详细信息</span><br><span class="line">ls *[1-9].xml xargs cp &#123;&#125; /tmp   #查找以“数字.xml”结尾的文件并cp到/tmp</span><br></pre></td></tr></table></figure><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">somecommand xargs -【参数选项】  command</span><br></pre></td></tr></table></figure><p>参数：</p><ul><li>-a file 从文件中读入作为 stdin</li><li>-d 自定义定界符</li><li>-e flag ，注意有的时候可能会是-E，flag必须是一个以空格分隔的标志，当xargs分析到含有flag这个标志的时候就停止。</li><li>-p 当每次执行一个命令时询问一次用户。</li><li>-n num 后面加次数，表示命令在执行的时候一次用的argument的个数，默认是用所有的。</li><li>-t 表示先打印命令，然后再执行。</li><li>-i 或者是-I，这得看linux支持了，将xargs的每项名称，一般是一行一行赋值给 {}，可以用 {} 代替。</li><li>-r no-run-if-empty 当xargs的输入为空的时候则停止xargs，不用再去执行了。</li><li>-s num 命令行的最大字符数，指的是 xargs 后面那个命令的最大命令行字符数。</li><li>-L num 从标准输入一次读取 num 行送给 command 命令。</li><li>-l 同 -L。</li><li>-d delim 分隔符，默认的xargs分隔符是回车，argument的分隔符是空格，这里修改的是xargs的分隔符。</li><li>-x exit的意思，主要是配合-s使用。。</li><li>-P 修改最大的进程数，默认是1，为0时候为as many as it can ，这个例子我没有想到，应该平时都用不到的吧。</li></ul><p>例：xargs将管道传递数据变为一行数据</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-20.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#创建测试文件</span><br><span class="line">[root@ffing test]# touch test.&#123;1..3&#125;.log test.&#123;1..3&#125;.txt test.&#123;1..3&#125;.xml</span><br><span class="line">[root@ffing test]# ll</span><br><span class="line">总用量 0</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.1.log</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.1.txt</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.1.xml</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.2.log</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.2.txt</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.2.xml</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.3.log</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.3.txt</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.3.xml</span><br><span class="line">#利用xargs将管道传递内容变转换为一行</span><br><span class="line">[root@ffing test]# ll xargs </span><br><span class="line">总用量 0 -rw-r--r--. 1 root root 0 2月 18 21:19 test.1.log -rw-r--r--. 1 root root 0 2月 18 21:19 test.1.txt -rw-r--r--. 1 root root 0 2月 18 21:19 test.1.xml -rw-r--r--. 1 root root 0 2月 18 21:19 test.2.log -rw-r--r--. 1 root root 0 2月 18 21:19 test.2.txt -rw-r--r--. 1 root root 0 2月 18 21:19 test.2.xml -rw-r--r--. 1 root root 0 2月 18 21:19 test.3.log -rw-r--r--. 1 root root 0 2月 18 21:19 test.3.txt -rw-r--r--. 1 root root 0 2月 18 21:19 test.3.xml</span><br></pre></td></tr></table></figure><p>=&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>例：xargs，定义分隔符，定义一行输出几个（默认为空格）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-25.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@ffing test]# cat test.log</span><br><span class="line">2022-02-18 info test.log testlog</span><br><span class="line">2022-02-18 error.log testlog</span><br><span class="line">[root@ffing test]# cat test.logxargs -d &#x27;&#x27; -n1</span><br><span class="line">2022-02-18 info test.log </span><br><span class="line">test</span><br><span class="line">log</span><br><span class="line">2022-02-18 error.log </span><br><span class="line">test</span><br><span class="line">log</span><br><span class="line"></span><br><span class="line">[root@ffing test]# cat test.logsed &#x27;s//\n/g&#x27;</span><br><span class="line">2022-02-18 info test.log </span><br><span class="line">test</span><br><span class="line">log</span><br><span class="line">2022-02-18 error.log </span><br><span class="line">test</span><br><span class="line">log</span><br></pre></td></tr></table></figure><p>=&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>例：find文件后，进行操作（ll、cp、mv等）</p><p>#ll查看文件详细信息（ll是ls -l的别名！）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-21.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#find文件名包含test.3*的文件</span><br><span class="line">[root@ffing test]# find / -type f -name  &quot;test.3*&quot;</span><br><span class="line">/root/test/test.3.log</span><br><span class="line">/root/test/test.3.txt</span><br><span class="line">/root/test/test.3.xml</span><br><span class="line">#将find到的文件，使用xargs查看文件详细信息</span><br><span class="line">[root@ffing test]# find / -type f -name  &quot;test.3*&quot;xargs ls -lh</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 /root/test/test.3.log</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 /root/test/test.3.txt</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 /root/test/test.3.xml</span><br></pre></td></tr></table></figure><p>#cp复制到指定目录</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-23.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@ffing test]# find / -type f -name  &quot;test.3*&quot;</span><br><span class="line">/root/test/test.3.log</span><br><span class="line">/root/test/test.3.txt</span><br><span class="line">/root/test/test.3.xml</span><br><span class="line">#将find到的文件，cp到/tmp目录下</span><br><span class="line">[root@ffing test]# find / -type f -name  &quot;test.3*&quot;xargs -i cp &#123;&#125; /tmp</span><br><span class="line">[root@ffing test]# ll /tmp</span><br><span class="line">总用量 4</span><br><span class="line">-rwx------. 1 root root 836 3月   2 2022 ks-script-XJEr39</span><br><span class="line">-rw-r--r--. 1 root root   0 2月  18 21:28 test.3.log</span><br><span class="line">-rw-r--r--. 1 root root   0 2月  18 21:28 test.3.txt</span><br><span class="line">-rw-r--r--. 1 root root   0 2月  18 21:28 test.3.xml</span><br><span class="line">drwx------. 2 root root   6 3月   2 2022 vmware-root</span><br><span class="line">-rw-------. 1 root root   0 3月   2 2022 yum.log</span><br></pre></td></tr></table></figure><p>#mv移动</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-24.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@ffing test]# ll</span><br><span class="line">总用量 0</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.1.log</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.1.txt</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.1.xml</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.2.log</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.2.txt</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.2.xml</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.3.log</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.3.txt</span><br><span class="line">-rw-r--r--. 1 root root 0 2月  18 21:19 test.3.xml</span><br><span class="line">[root@ffing test]# find / -type f -name  &quot;test.[0-9].xml&quot;</span><br><span class="line">/root/test/test.3.xml</span><br><span class="line">/root/test/test.1.xml</span><br><span class="line">/root/test/test.2.xml</span><br><span class="line">[root@ffing test]# find / -type f -name  &quot;test.[0-9].xml&quot;xargs -i mv &#123;&#125; /tmp</span><br><span class="line">[root@ffing test]# ll /tmp</span><br><span class="line">总用量 4</span><br><span class="line">-rwx------. 1 root root 836 3月   2 2022 ks-script-XJEr39</span><br><span class="line">-rw-r--r--. 1 root root   0 2月  18 21:19 test.1.xml</span><br><span class="line">-rw-r--r--. 1 root root   0 2月  18 21:19 test.2.xml</span><br><span class="line">-rw-r--r--. 1 root root   0 2月  18 21:28 test.3.log</span><br><span class="line">-rw-r--r--. 1 root root   0 2月  18 21:28 test.3.txt</span><br><span class="line">-rw-r--r--. 1 root root   0 2月  18 21:19 test.3.xml</span><br><span class="line">drwx------. 2 root root   6 3月   2 2022 vmware-root</span><br><span class="line">-rw-------. 1 root root   0 3月   2 2022 yum.log</span><br></pre></td></tr></table></figure><p>#mv修改扩展名</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/04/image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@ffing test]# ll</span><br><span class="line">总用量 0</span><br><span class="line">-rw-r--r--. 1 root root 0 4月  10 16:56 test1.txt</span><br><span class="line">-rw-r--r--. 1 root root 0 4月  10 16:56 test2.txt</span><br><span class="line">-rw-r--r--. 1 root root 0 4月  10 16:56 test3.txt</span><br><span class="line">-rw-r--r--. 1 root root 0 4月  10 16:56 test4.txt</span><br><span class="line">-rw-r--r--. 1 root root 0 4月  10 16:56 test5.txt</span><br><span class="line">[root@ffing test]# find ./ -type f -name &quot;*.txt&quot;xargs -i mv &#123;&#125; &#123;&#125;.xml</span><br><span class="line">[root@ffing test]# ll</span><br><span class="line">总用量 0</span><br><span class="line">-rw-r--r--. 1 root root 0 4月  10 16:56 test1.txt.xml</span><br><span class="line">-rw-r--r--. 1 root root 0 4月  10 16:56 test2.txt.xml</span><br><span class="line">-rw-r--r--. 1 root root 0 4月  10 16:56 test3.txt.xml</span><br><span class="line">-rw-r--r--. 1 root root 0 4月  10 16:56 test4.txt.xml</span><br><span class="line">-rw-r--r--. 1 root root 0 4月  10 16:56 test5.txt.xml</span><br></pre></td></tr></table></figure><h2 id="sed命令"><a href="#sed命令" class="headerlink" title="sed命令"></a>sed命令</h2><p>sed命令,我前面文章写的有，这里只写关于日志过滤中常用到的命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">#查看test.log内容</span><br><span class="line">[root@ffing test]# cat test.log</span><br><span class="line">a=</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e=</span><br><span class="line"></span><br><span class="line">#删除第一行</span><br><span class="line">[root@ffing test]# sed &#x27;1&#x27;d test.log</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e=</span><br><span class="line"></span><br><span class="line">#删除最后一行</span><br><span class="line">[root@ffing test]# sed &#x27;$&#x27;d test.log</span><br><span class="line">a=</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line"></span><br><span class="line">#查看第一行到第三行</span><br><span class="line">[root@ffing test]# sed -n &#x27;1,3&#x27;p test.log</span><br><span class="line">a=</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line"></span><br><span class="line">#查看第三行到最后一行</span><br><span class="line">[root@ffing test]# sed -n &#x27;3,$&#x27;p test.log</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e=</span><br><span class="line"></span><br><span class="line">#第一种方法：替换包含=号的行 【.* 代表任意一个字符】</span><br><span class="line">[root@ffing test]# sed &#x27;s/.*=.*/=======/&#x27; test.log</span><br><span class="line">=======</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">=======</span><br><span class="line"></span><br><span class="line">#第二种方法：替换包含=号的行 【利用行标c】</span><br><span class="line">[root@ffing test]# sed  &#x27;/=/c #####&#x27; test.log</span><br><span class="line">#####</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">#####</span><br><span class="line"></span><br><span class="line">#将第一行替换为ffing</span><br><span class="line">[root@ffing test]# sed &#x27;1c ffing&#x27; test.log</span><br><span class="line">ffing</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e=</span><br><span class="line"></span><br><span class="line">#将第一行和第二行替换为ffing</span><br><span class="line">[root@ffing test]# sed &#x27;1,2c ffing&#x27; test.log</span><br><span class="line">ffing</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e=</span><br><span class="line"></span><br><span class="line">#同时替换多个字符串</span><br><span class="line">#将b字符替换为数字2，将c字符串替换为数字3</span><br><span class="line">[root@ffing test]# sed &#x27;s/b/2/;s/c/3/&#x27; test.log</span><br><span class="line">a=</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">d</span><br><span class="line">e=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">####统计单词出现次数####</span><br><span class="line">[root@ffing_cn ~]# cat words.txt</span><br><span class="line">the day is sunny the the</span><br><span class="line">the sunny is is</span><br><span class="line">[root@ffing_cn ~]# cat words.txtsed &#x27;s/ /\n/g&#x27;</span><br><span class="line">the</span><br><span class="line">day</span><br><span class="line">is</span><br><span class="line">sunny</span><br><span class="line">the</span><br><span class="line">the</span><br><span class="line">the</span><br><span class="line">sunny</span><br><span class="line">is</span><br><span class="line">is</span><br><span class="line">[root@ffing_cn ~]# cat words.txtsed &#x27;s/ /\n/g&#x27;sortuniq -c</span><br><span class="line">      1 day</span><br><span class="line">      3 is</span><br><span class="line">      2 sunny</span><br><span class="line">      4 the</span><br><span class="line">[root@ffing_cn ~]# cat words.txtsed &#x27;s/ /\n/g&#x27;sortuniq -cawk &#x27;&#123;print $2 &quot; &quot; $1&#125;&#x27;</span><br><span class="line">day 1</span><br><span class="line">is 3</span><br><span class="line">sunny 2</span><br><span class="line">the 4</span><br><span class="line">[root@ffing_cn ~]# cat words.txtsed &#x27;s/ /\n/g&#x27;sortuniq -cawk &#x27;&#123;print $2 &quot;\t&quot; $1&#125;&#x27;</span><br><span class="line">day     1</span><br><span class="line">is      3</span><br><span class="line">sunny   2</span><br><span class="line">the     4</span><br></pre></td></tr></table></figure><h2 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h2><p>grep用的太多，这里不详细描述了。</p><p>-n 过滤的字符串，并带行号</p><p>-i 忽略大小写</p><p>-E 正则</p><p>-v 排除</p><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#过滤带时间戳的行</span><br><span class="line">[root@ffing test]# cat test1.log</span><br><span class="line">2022-02-18 9:00:00   asedfsadf:aaa</span><br><span class="line">fEROOOR：aaaaa</span><br><span class="line">2022-02-18 21:10:12   berer:bbb</span><br><span class="line">ferror：bbbbbbbbbb</span><br><span class="line">2022-02-18 10:00:23  cdfdf:ccc</span><br><span class="line">i:cccccccccc</span><br><span class="line">2022-02-19 13:00:45  der23:ccc</span><br><span class="line">n:xxxdfd</span><br><span class="line">2022-02-19 14:00:58  timeout</span><br><span class="line">g:timeout</span><br><span class="line">[root@ffing test]# grep [0-9]:[0-9][0-9]:[0-9] test1.log</span><br><span class="line">2022-02-18 9:00:00   asedfsadf:aaa</span><br><span class="line">2022-02-18 21:10:12   berer:bbb</span><br><span class="line">2022-02-18 10:00:23  cdfdf:ccc</span><br><span class="line">2022-02-19 13:00:45  der23:ccc</span><br><span class="line">2022-02-19 14:00:58  timeout</span><br></pre></td></tr></table></figure><p>=&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;grep正则摘自网络，未做完整验证&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><ul><li><strong>grep , egrep 正则表达式特点：</strong></li></ul><blockquote><p>1）grep 支持：BREs、EREs、PREs 正则表达式</p><p>grep 指令后不跟任何参数，则表示要使用 ”BREs“ </p><p>grep 指令后跟 ”-E” 参数，则表示要使用 “EREs“</p><p>grep 指令后跟 “-P” 参数，则表示要使用 “PREs”</p><p>2）egrep 支持：EREs、PREs 正则表达式</p><p>egrep 指令后不跟任何参数，则表示要使用 “EREs”</p><p>egrep 指令后跟 “-P” 参数，则表示要使用 “PREs”</p><p>3）grep 与 egrep 正则匹配文件，处理文件方法</p><p>a. grep 与 egrep 的处理对象：文本文件</p><p>b. grep 与 egrep 的处理过程：查找文本文件中是否含要查找的 “关键字”（关键字可以是正则表达式） ，如果含有要查找的 ”关健字“，那么默认返回该文本文件中包含该”关健字“的该行的内容，并在标准输出中显示出来，除非使用了“&gt;” 重定向符号,</p><p>c. grep 与 egrep 在处理文本文件时，是按行处理的</p></blockquote><ul><li><strong>sed 正则表达式特点</strong></li></ul><blockquote><p>1）sed 文本工具支持：BREs、EREs</p><p>sed 指令默认是使用”BREs”</p><p>sed 命令参数 “-r ” ，则表示要使用“EREs”</p><p>2）sed 功能与作用</p><p>a. sed 处理的对象：文本文件</p><p>b. sed 处理操作：对文本文件的内容进行 — 查找、替换、删除、增加等操作</p><p>c. sed 在处理文本文件的时候，也是按行处理的</p></blockquote><ul><li><strong>Awk（gawk）正则表达式特点</strong></li></ul><blockquote><p>1）Awk 文本工具支持：EREs</p><p>awk 指令默认是使用 “EREs”</p><p>2）Awk 文本工具处理文本的特点</p><p>a. awk 处理的对象：文本文件</p><p>b. awk 处理操作：主要是对列进行操作</p></blockquote><p><strong>三、常见3中类型正则表达式比较</strong></p><p>字符</p><p>说明</p><p>Basic RegEx</p><p>Extended RegEx</p><p>python RegEx</p><p>Perl regEx</p><p>转义</p><p> </p><p>\</p><p>\</p><p>\</p><p>\</p><p>^</p><p>匹配行首，例如’^dog’匹配以字符串dog开头的行（注意：awk 指令中，’^’则是匹配字符串的开始）</p><p>^</p><p>^</p><p>^</p><p>^</p><p>$</p><p>匹配行尾，例如：’^、dog$’匹配以字符串 dog 为结尾的行（注意：awk 指令中，’$’则是匹配字符串的结尾）</p><p>$</p><p>$</p><p>$</p><p>$</p><p>^$</p><p>匹配空行</p><p>^$</p><p>^$</p><p>^$</p><p>^$</p><p>^string$</p><p>匹配行，例如：’^dog$’匹配只含一个字符串 dog 的行</p><p>^string$</p><p>^string$</p><p>^string$</p><p>^string$</p><p>\&lt;</p><p>匹配单词，例如：’\&lt;frog’ （等价于’\bfrog’），匹配以 frog 开头的单词</p><p>\&lt;</p><p>\&lt;</p><p><strong>不支持</strong></p><p><strong>不支持</strong>（但可以使用\b来匹配单词，例如：’\bfrog’）</p><p>\&gt;</p><p>匹配单词，例如：’frog\&gt;’（等价于’frog\b ‘），匹配以 frog 结尾的单词</p><p>\&gt;</p><p>\&gt;</p><p><strong>不支持</strong></p><p><strong>不支持</strong>（但可以使用\b来匹配单词，例如：’frog\b’）</p><p>\&lt;x\&gt;</p><p>匹配一个单词或者一个特定字符，例如：’\&lt;frog\&gt;’（等价于’\bfrog\b’）、’\&lt;G\&gt;’</p><p>\&lt;x\&gt;</p><p>\&lt;x\&gt;</p><p><strong>不支持</strong></p><p><strong>不支持</strong>（但可以使用\b来匹配单词，例如：’\bfrog\b’</p><p>()</p><p>匹配表达式，例如：不支持’（frog）’</p><p><strong>不支持</strong>（但可以使用，如：dogdog</p><p>()</p><p>()</p><p>()</p><p>匹配表达式，例如：不支持’（frog）’</p><p><strong>不支持</strong>（同())</p><p><strong>不支持</strong>（同())</p><p><strong>不支持</strong>（同())</p><p>？</p><p>匹配前面的子表达式 0 次或 1 次（等价于{0,1}），例如：where(is)?能匹配”where” 以及”whereis”</p><p><strong>不支持</strong>（同\?)</p><p>？</p><p>？</p><p>？</p><p>\?</p><p>匹配前面的子表达式 0 次或 1 次（等价于’\{0,1\}’），例如：’whereisis\? ‘能匹配 “where”以及”whereis”</p><p>\?</p><p><strong>不支持</strong>（同?)</p><p><strong>不支持</strong>（同?)</p><p><strong>不支持</strong>（同?)</p><p>?</p><p>当该字符紧跟在任何一个其他限制符（*, +, ?, {n},{n,}, {n,m}） 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 “oooo”，’o+?’ 将匹配单个”o”，而 ‘o+’ 将匹配所有 ‘o’</p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p>.</p><p>匹配除换行符（’\n’）之外的任意单个字符（注意：awk 指令中的句点能匹配换行符）</p><p>.</p><p>.（如果要匹配包括“\n”在内的任何一个字符，请使用：’(^$)（.）</p><p>.</p><p>.（如果要匹配包括“\n”在内的任何一个字符，请使用：’ [.\n] ‘</p><p>*</p><p>匹配前面的子表达式 0 次或多次（等价于{0, }），例如：zo* 能匹配 “z”以及 “zoo”</p><p>*</p><p>*</p><p>*</p><p>*</p><p>\+</p><p>匹配前面的子表达式 1 次或多次（等价于’\{1, \}’），例如：’whereisis\+ ‘能匹配 “whereis”以及”whereisis”</p><p>\+</p><p><strong>不支持</strong>（同+)</p><p><strong>不支持</strong>（同+)</p><p><strong>不支持</strong>（同+)</p><ul><li></li></ul><p>匹配前面的子表达式 1 次或多次（等价于{1, }），例如：zo+能匹配 “zo”以及 “zoo”，但不能匹配 “z”</p><p><strong>不支持</strong>（同\+)</p><ul><li></li><li></li><li></li></ul><p>{n}</p><p>n 必须是一个 0 或者正整数，匹配子表达式 n 次，例如：zo{2}能匹配</p><p><strong>不支持</strong>（同\{n\})</p><p>{n}</p><p>{n}</p><p>{n}</p><p>{n,}</p><p>“zooz”，但不能匹配 “Bob”n 必须是一个 0 或者正整数，匹配子表达式大于等于 n次，例如：go{2,}</p><p><strong>不支持</strong>（同\{n,\})</p><p>{n,}</p><p>{n,}</p><p>{n,}</p><p>{n,m}</p><p>能匹配 “good”，但不能匹配 godm 和 n 均为非负整数，其中 n &lt;&#x3D; m，最少匹配 n 次且最多匹配 m 次 ，例如：o{1,3}将配”fooooood” 中的前三个 o（请注意在逗号和两个数之间不能有空格）</p><p><strong>不支持</strong>（同\{n,m\})</p><p>{n,m}</p><p>{n,m}</p><p>{n,m}</p><p>xy</p><p>匹配 x 或 y，例如： 不支持’z（food）’ 能匹配 “z” 或”food”；’（zf）ood’ 则匹配”zood” 或 “food”</p><p><strong>不支持</strong>（同x\y)</p><p>xy</p><p>xy</p><p>xy</p><p>[0-9]</p><p>匹配从 0 到 9 中的任意一个数字字符（注意：要写成递增）</p><p>[0-9]</p><p>[0-9]</p><p>[0-9]</p><p>[0-9]</p><p>[xyz]</p><p>字符集合，匹配所包含的任意一个字符，例如：’[abc]‘可以匹配”lay” 中的 ‘a’（注意：如果元字符，例如：. *等，它们被放在[ ]中，那么它们将变成一个普通字符）</p><p>[xyz]</p><p>[xyz]</p><p>[xyz]</p><p>[xyz]</p><p>[^xyz]</p><p>负值字符集合，匹配未包含的任意一个字符（注意：不包括换行符），例如：’[^abc]‘ 可以匹配 “Lay” 中的’L’（注意：[^xyz]在awk 指令中则是匹配未包含的任意一个字符+换行符）</p><p>[^xyz]</p><p>[^xyz]</p><p>[^xyz]</p><p>[^xyz]</p><p>[A-Za-z]</p><p>匹配大写字母或者小写字母中的任意一个字符（注意：要写成递增）</p><p>[A-Za-z]</p><p>[A-Za-z]</p><p>[A-Za-z]</p><p>[A-Za-z]</p><p>[^A-Za-z]</p><p>匹配除了大写与小写字母之外的任意一个字符（注意：写成递增）</p><p>[^A-Za-z]</p><p>[^A-Za-z]</p><p>[^A-Za-z]</p><p>[^A-Za-z]</p><p><strong>\d</strong></p><p>匹配从 0 到 9 中的任意一个数字字符（等价于 [0-9]）</p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p>\d</p><p>\d</p><p><strong>\D</strong></p><p>匹配非数字字符（等价于 [^0-9]）</p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p>\D</p><p>\D</p><p>\S</p><p>匹配任何非空白字符（等价于[^\f\n\r\t\v]）</p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p>\S</p><p>\S</p><p>\s</p><p>匹配任何空白字符，包括空格、制表符、换页符等等（等价于[ \f\n\r\t\v]）</p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p>\s</p><p>\s</p><p>\W</p><p>匹配任何非单词字符 (等价于[^A-Za-z0-9_])</p><p>\W</p><p>\W</p><p>\W</p><p>\W</p><p>\w</p><p>匹配包括下划线的任何单词字符（等价于[A-Za-z0-9_]）</p><p>\w</p><p>\w</p><p>\w</p><p>\w</p><p>\B</p><p>匹配非单词边界，例如：’er\B’ 能匹配 “verb” 中的’er’，但不能匹配”never” 中的’er’</p><p>\B</p><p>\B</p><p>\B</p><p>\B</p><p>\b</p><p>匹配一个单词边界，也就是指单词和空格间的位置，例如： ‘er\b’ 可以匹配”never” 中的 ‘er’，但不能匹配 “verb” 中的’er’</p><p>\b</p><p>\b</p><p>\b</p><p>\b</p><p>\t</p><p>匹配一个横向制表符（等价于 \x09和 \cI）</p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p>\t</p><p>\t</p><p>\v</p><p>匹配一个垂直制表符（等价于 \x0b和 \cK）</p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p>\v</p><p>\v</p><p>\n</p><p>匹配一个换行符（等价于 \x0a 和\cJ）</p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p>\n</p><p>\n</p><p>\f</p><p>匹配一个换页符（等价于\x0c 和\cL）</p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p>\f</p><p>\f</p><p>\r</p><p>匹配一个回车符（等价于 \x0d 和\cM）</p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p>\r</p><p>\r</p><p>\\</p><p>匹配转义字符本身”\“</p><p>\\</p><p>\\</p><p>\\</p><p>\\</p><p>\cx</p><p>匹配由 x 指明的控制字符，例如：\cM匹配一个Control-M 或回车符，x 的值必须为A-Z 或 a-z 之一，否则，将 c 视为一个原义的 ‘c’ 字符</p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p> </p><p>\cx</p><p>\xn</p><p>匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长，例如：’\x41’ 匹配 “A”。’\x041’ 则等价于’\x04’ &amp; “1”。正则表达式中可以使用 ASCII 编码</p><p><strong>不支持</strong></p><p><strong>不支持</strong></p><p> </p><p>\xn</p><p>\num</p><p>匹配 num，其中 num是一个正整数。表示对所获取的匹配的引用</p><p><strong>不支持</strong></p><p>\num</p><p>\num</p><p> </p><p>[:alnum:]</p><p>匹配任何一个字母或数字（[A-Za-z0-9]），例如：’[[:alnum:]] ‘</p><p>[:alnum:]</p><p>[:alnum:]</p><p>[:alnum:]</p><p>[:alnum:]</p><p>[:alpha:]</p><p>匹配任何一个字母（[A－Za－z]）， 例如：’ [[:alpha:]] ‘</p><p>[:alpha:]</p><p>[:alpha:]</p><p>[:alpha:]</p><p>[:alpha:]</p><p>[:digit:]</p><p>匹配任何一个数字（[0-9]），例如：’[[:digit:]] ‘</p><p>[:digit:]</p><p>[:digit:]</p><p>[:digit:]</p><p>[:digit:]</p><p>[:lower:]</p><p>匹配任何一个小写字母（[a-z]）， 例如：’ [[:lower:]] ‘</p><p>[:lower:]</p><p>[:lower:]</p><p>[:lower:]</p><p>[:lower:]</p><p>[:upper:]</p><p>匹配任何一个大写字母（[A-Z]）</p><p>[:upper:]</p><p>[:upper:]</p><p>[:upper:]</p><p>[:upper:]</p><p>[:space:]</p><p>任何一个空白字符： 支持制表符、空格，例如：’ [[:space:]] ‘</p><p>[:space:]</p><p>[:space:]</p><p>[:space:]</p><p>[:space:]</p><p>[:blank:]</p><p>空格和制表符（横向和纵向），例如：’[[:blank:]]‘ó’[\s\t\v]‘</p><p>[:blank:]</p><p>[:blank:]</p><p>[:blank:]</p><p>[:blank:]</p><p>[:graph:]</p><p>任何一个可以看得见的且可以打印的字符（注意：不包括空格和换行符等），例如：’[[:graph:]] ‘</p><p>[:graph:]</p><p>[:graph:]</p><p>[:graph:]</p><p>[:graph:]</p><p>[:print:]</p><p>任何一个可以打印的字符（注意：不包括：[:cntrl:]、字符串结束符’\0’、EOF 文件结束符（-1）， 但包括空格符号），例如：’[[:print:]] ‘</p><p>[:print:]</p><p>[:print:]</p><p>[:print:]</p><p>[:print:]</p><p>[:cntrl:]</p><p>任何一个控制字符（ASCII 字符集中的前 32 个字符，即：用十进制表示为从 0 到31，例如：换行符、制表符等等），例如：’ [[:cntrl:]]‘</p><p>[:cntrl:]</p><p>[:cntrl:]</p><p>[:cntrl:]</p><p>[:cntrl:]</p><p>[:punct:]</p><p>任何一个标点符号（不包括：[:alnum:]、[:cntrl:]、[:space:]这些字符集）</p><p>[:punct:]</p><p>[:punct:]</p><p>[:punct:]</p><p>[:punct:]</p><p>[:xdigit:]</p><p>任何一个十六进制数（即：0-9，a-f，A-F）</p><p>[:xdigit:]</p><p>[:xdigit:]</p><p>[:xdigit:]</p><p>[:xdigit:]</p><h2 id="awk命令"><a href="#awk命令" class="headerlink" title="awk命令"></a>awk命令</h2><p>awk支持运算和截取，……………………….</p><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">#获取大于12点之后日志</span><br><span class="line">[root@ffing test]# cat test1.log</span><br><span class="line">2022-02-18 9:00:00   asedfsadf:aaa</span><br><span class="line">ferror：aaaaa</span><br><span class="line">2022-02-18 21:10:12   berer:bbb</span><br><span class="line">ferror：bbbbbbbbbb</span><br><span class="line">2022-02-18 10:00:23  cdfdf:ccc</span><br><span class="line">i:cccccccccc</span><br><span class="line">2022-02-19 13:00:45  der23:ccc</span><br><span class="line">n:xxxdfd</span><br><span class="line">2022-02-19 14:00:58  timeout</span><br><span class="line">g:timeout</span><br><span class="line">#awk以空格和：为分隔符，获取HH（小时）字段列，$2&gt;12</span><br><span class="line">[root@ffing test]# cat test1.log awk -F &quot; +:&quot; &#x27;$2&gt;12&#123;print&#125;&#x27;</span><br><span class="line">2022-02-18 21:10:12   berer:bbb</span><br><span class="line">i:cccccccccc</span><br><span class="line">2022-02-19 13:00:45  der23:ccc</span><br><span class="line">n:xxxdfd</span><br><span class="line">2022-02-19 14:00:58  timeout</span><br><span class="line">g:timeout</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#获取硬盘分区使用率大于50%的分区（awk支持运算比较）</span><br><span class="line">[root@ffing_cn ~]# df -m</span><br><span class="line">文件系统       1M-块  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs         908     0   908    0% /dev</span><br><span class="line">tmpfs            919     0   919    0% /dev/shm</span><br><span class="line">tmpfs            919     1   919    1% /run</span><br><span class="line">tmpfs            919     0   919    0% /sys/fs/cgroup</span><br><span class="line">/dev/vda1      50268 29062 19060   61% /</span><br><span class="line">tmpfs            184     0   184    0% /run/user/0</span><br><span class="line"></span><br><span class="line">#获取硬盘分区使用率大于50%的分区（awk支持运算比较）</span><br><span class="line">[root@ffing_cn ~]# df -m awk -F &quot; +%&quot; &#x27;$5&gt;5&#123;print&#125;&#x27;</span><br><span class="line">文件系统       1M-块  已用  可用 已用% 挂载点</span><br><span class="line">/dev/vda1      50268 29063 19060   61% /</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#不显示显示文件系统和挂载点(默认分隔符为空)$1=$NF=&quot;&quot;</span><br><span class="line">[root@ffing_cn ~]# df -mawk &#x27;&#123;print $1=$NF=&quot;&quot;,$0&#125;&#x27;</span><br><span class="line">  1M-块 已用 可用 已用% </span><br><span class="line">  908 0 908 0% </span><br><span class="line">  919 0 919 0% </span><br><span class="line">  919 1 919 1% </span><br><span class="line">  919 0 919 0% </span><br><span class="line">  50268 29063 19060 61% </span><br><span class="line">  184 0 184 0% </span><br><span class="line"></span><br><span class="line">#不显示显示文件系统和挂载点(更改分隔符为tab)</span><br><span class="line">[root@ffing_cn ~]# df -mawk &#x27;OFS=&quot;\t&quot;&#123;print $1=$NF=&quot;&quot;,$0&#125;&#x27;</span><br><span class="line">                1M-块   已用    可用    已用%   </span><br><span class="line">                908     0       908     0%      </span><br><span class="line">                919     0       919     0%      </span><br><span class="line">                919     1       919     1%      </span><br><span class="line">                919     0       919     0%      </span><br><span class="line">                50268   29063   19060   61%     </span><br><span class="line">                184     0       184     0%   </span><br><span class="line"></span><br><span class="line">#将%百分比放第一列</span><br><span class="line">[root@ffing_cn ~]# df -mawk &#x27;&#123;print $5 &quot;\t&quot; $0&#125;&#x27;</span><br><span class="line">已用%   文件系统       1M-块  已用  可用 已用% 挂载点</span><br><span class="line">0%      devtmpfs         908     0   908    0% /dev</span><br><span class="line">0%      tmpfs            919     0   919    0% /dev/shm</span><br><span class="line">1%      tmpfs            919     1   919    1% /run</span><br><span class="line">0%      tmpfs            919     0   919    0% /sys/fs/cgroup</span><br><span class="line">61%     /dev/vda1      50268 29063 19060   61% /</span><br><span class="line">0%      tmpfs            184     0   184    0% /run/user/0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#将第二列求和</span><br><span class="line">[root@ffing_cn ~]# df -mawk &#x27;&#123;sum+=$2&#125;;END&#123;print sum&#125;&#x27;</span><br><span class="line">54118</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#内存使用率：已使用内存/总内存</span><br><span class="line">[root@ffing_cn ~]# free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1837         601         487          37         749        1049</span><br><span class="line">Swap:          3999           0        3999</span><br><span class="line"></span><br><span class="line">#打印第二行</span><br><span class="line">[root@ffing_cn ~]# free -mawk &#x27;NR==2&#x27;</span><br><span class="line">Mem:           1837         609         473          38         754        1040</span><br><span class="line">#过滤包含Mem的行</span><br><span class="line">[root@ffing_cn ~]# free -mawk &#x27;/Mem/&#x27;</span><br><span class="line">Mem:           1837         614         468          38         755        1035</span><br><span class="line"></span><br><span class="line">#awk浮点运算</span><br><span class="line">[root@ffing_cn ~]# free -mawk &#x27;NR==2&#123;print $3/$2*100&#125;&#x27;</span><br><span class="line">32.4986</span><br><span class="line"></span><br><span class="line">#awk配合printf，保留两位小数（printf【%.2f保留2为小数】【%字符串】【\n换行】）</span><br><span class="line"></span><br><span class="line">[root@ffing_cn ~]# free -mawk &#x27;NR==2&#123;printf(&quot;%.2f %\n&quot;,$3/$2*100)&#125;&#x27;</span><br><span class="line">32.99%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">####文件转置（纵列变横行）####</span><br><span class="line"></span><br><span class="line">[root@ffing_cn ~]# cat test.txt</span><br><span class="line">1 a x</span><br><span class="line">2 b y</span><br><span class="line">3 c z</span><br><span class="line">#第一种使用awk + &amp;&amp; （当你知道列数，且较少时使用&amp;&amp;）</span><br><span class="line">[root@ffing_cn ~]# awk &#x27;&#123;print $1&#125;&#x27; test.txtxargs;awk &#x27;&#123;print $2&#125;&#x27; test.txtxargs;awk &#x27;&#123;print $3&#125;&#x27; test.txtxargs  </span><br><span class="line">1 2 3</span><br><span class="line">a b c</span><br><span class="line">x y z</span><br><span class="line"></span><br><span class="line">#第二种使用for+awk(awk -v 引用外部变量)</span><br><span class="line">[root@huaweiyun ~]# for i in `seq $(cat test.txtawk &#x27;&#123;print NF&#125;&#x27;sort nrhead -1)` ;do cat test.txtawk -v N=$i &#x27;&#123;print $N&#125;&#x27;xargs ;done</span><br><span class="line">1 2 3</span><br><span class="line">a b c</span><br><span class="line">x y z</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#awk配合substr取字节（$&#123;&#125;也可实现）</span><br><span class="line">#连续格式的时间戳，</span><br><span class="line">#取时间戳的&quot;秒&quot;数($NF最后一列，从1开始，2个字节)</span><br><span class="line">[root@huaweiyun ~]# echo &quot;01/Jan/2022_15:33:44AM&quot;awk -F &quot;:&quot; &#x27;&#123;print substr($NF,1,2)&#125;&#x27;</span><br><span class="line">44</span><br><span class="line"></span><br><span class="line">#取&quot;分钟&quot;数</span><br><span class="line">[root@huaweiyun ~]# echo &quot;01/Jan/2022:22:33:44AM&quot;awk -F &quot;:&quot; &#x27;&#123;print $(NF-1)&#125;&#x27;</span><br><span class="line">33</span><br><span class="line"></span><br><span class="line">#取“小时”数，这里使用length长度</span><br><span class="line">#“length($1)获取$1的字节长度，再“-1”，即是倒数第二位</span><br><span class="line">[root@huaweiyun ~]# echo &quot;01/Jan/2022_15:33:44AM&quot;awk -F &quot;:&quot; &#x27;&#123;print substr($1,length($1)-1)&#125;&#x27;</span><br><span class="line">15</span><br><span class="line"></span><br><span class="line">#合并，取出“时”：“分”：“秒”</span><br><span class="line">#第一种固定值</span><br><span class="line">[root@huaweiyun ~]# echo &quot;01/Jan/2022_15:33:44AM&quot;awk -F &quot;:&quot; &#x27;&#123;print substr($1,length($1)-1) &quot;:&quot; $2 &quot;:&quot; substr($NF,1,2)&#125;&#x27;</span><br><span class="line">15:33:44</span><br><span class="line">#第二种，通过NF匹配,这里注意length取值</span><br><span class="line">[root@huaweiyun ~]# echo &quot;01/Jan/2022_15:33:44AM&quot;awk -F &quot;:&quot; &#x27;&#123;print substr($(NF-2),length($(NF-2))-1) &quot;:&quot; $(NF-1) &quot;:&quot; substr($NF,1,2)&#125;&#x27;</span><br><span class="line">15:33:44</span><br><span class="line">#注：需要awk是取文件中的时间列，所以最后的通用取值命令就可以是“awk -F &quot;:&quot; &#x27;&#123;print substr($(NF-2),length($(NF-2))-1) &quot;:&quot; $(NF-1) &quot;:&quot; substr($NF,1,2)&#125;&#x27;</span><br><span class="line">”</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="tr命令"><a href="#tr命令" class="headerlink" title="tr命令"></a>tr命令</h2><p>[:alnum:] 所有的字母和数字<br>[:alpha:] 所有字母<br>[:digit:] 所有的数字<br>[:lower:] 所有的小写字符<br>[:upper:] 所有大写字母<br>[:blank:] 水平制表符，空白等<br>[:cntrl:] 所有控制字符<br>[:graph:] 所有可打印字符，不包括空格<br>[:print:] 所有可打印字符，包括空格<br>[:punct:] 所有的标点字符<br>[:space:] 所有的横向或纵向的空白<br>\\ 反斜杠 (第一个\转义)<br>\t Ctrl-I tab键<br>\n Ctrl-J 新行<br>\a Ctrl-G 铃声<br>\b Ctrl-H 退格符<br>\f Ctrl-L 走行换页<br>\r Ctrl-M 回车<br>\v Ctrl-X 水平制表符</p><p>删除所有大写字母：tr -d [A-Z] 或使用tr -d [:upper:]</p><p>删除所有字母和数字:tr -d [A-z0-9] 或使用tr -d [:alnum:]</p><p>tr -s 【字符串】：压缩重复字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#查看test2.log</span><br><span class="line">[root@ffing test]# cat test2.log</span><br><span class="line">!@#$%^&amp;*()_-=+~,./;&#x27;\&lt;&gt;?:&quot;[]&#123;&#125;</span><br><span class="line">1234567890</span><br><span class="line">abcdefghigklmn</span><br><span class="line">ABCDEFG</span><br><span class="line"></span><br><span class="line">#删除所有标点字符</span><br><span class="line">[root@ffing test]# cat test2.log tr -d [:punct:]</span><br><span class="line"></span><br><span class="line">1234567890</span><br><span class="line">abcdefghigklmn</span><br><span class="line">ABCDEFG</span><br><span class="line"></span><br><span class="line">#删除所有大写及标点符号</span><br><span class="line">[root@ffing test]# cat test2.log tr -d [A-Z][:punct:]</span><br><span class="line"></span><br><span class="line">1234567890</span><br><span class="line">abcdefghigklmn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#删除所有换行符</span><br><span class="line">[root@ffing test]# cat test2.log tr -d &quot;\n&quot;</span><br><span class="line">!@#$%^&amp;*()_-=+~,./;&#x27;\&lt;&gt;?:&quot;[]&#123;&#125;1234567890abcdefghigklmnABCDEFG[root@ffing test]# </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> awk </tag>
            
            <tag> sed </tag>
            
            <tag> grep </tag>
            
            <tag> xargs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux  定时任务at和crontab命令解析</title>
      <link href="/posts/177ad773.html"/>
      <url>/posts/177ad773.html</url>
      
        <content type="html"><![CDATA[<p>at命令，一次性任务（和win中的at命令有些差距）</p><p>crontab命令，循环任务</p><p>这两个命令都是分钟级别，如果需要定位到秒可以使用sleep进行秒级定位。</p><h2 id="crontab命令"><a href="#crontab命令" class="headerlink" title="crontab命令"></a>crontab命令</h2><p>crontab,默认存储文件：&#x2F;var&#x2F;spool&#x2F;cron&#x2F;用户名</p><p>(注:默认只有root用户可以查看定时任务，其他用户没有权限,即使你是文件所有者也不行，因为在上层目录cron目录中other组没有x权限，解决方法就是给cron目录other添加x权限)</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-4.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-2.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-3.png"></p><p>crontab的几种用法：</p><p>第1种：直接使用crontab，以ctrl+d结束（<strong>注：此方法会覆盖历史任务</strong>，根据环境使用）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-5.png"></p><p>第2种：crontab -e,是最常用的方法，其实就编辑&#x2F;var&#x2F;spool&#x2F;cron&#x2F;【你的用户名】文件，后保存。</p><p>第3种：使用EOF参数，常用用于脚本。</p><p>如下：</p><p>`crontab -l`,利用shell命令获取历史任务（shell命令通用的哦！管道符、grep、sed、awk等命令）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-6.png"></p><h2 id="at命令"><a href="#at命令" class="headerlink" title="at命令"></a>at命令</h2><p>at,默认存储文件：&#x2F;var&#x2F;spool&#x2F;at&#x2F;【id】（id格式：a000+”16进制at任务id”+“没研究透的序列”）</p><p>如下：任务id为102，转换16进制就是66</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-8.png"></p><p>第1种用法：at [选项] [时间] ，ctrl+d结束。</p><p>atq或at -l：查看at任务</p><p>at -c “任务id”：查看at定时执行的任务</p><p>第2种用法：EOF，和crontab类同</p><p>如下，添加任务：定时23:59:59 执行test.sh</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-9.png"></p><p>当需要执行的定时任务有for循环时，推荐使用at在脚本比较直接（当然你也使用crontab，但会导致crontab中的排版凌乱！）也可以at在脚本中，自启脚本实现循环。</p><p>最近没时间完善存稿都堆积了，惭愧，将就一下。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> crontab </tag>
            
            <tag> at </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一下redhat官网下载地址</title>
      <link href="/posts/61f6ceeb.html"/>
      <url>/posts/61f6ceeb.html</url>
      
        <content type="html"><![CDATA[<p>因测试需要redhat老版本，而网络地址满天飞。</p><p>附官网下载地址：</p><p><a href="https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.5/x86_64/product-software">https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.5/x86_64&#x2F;product-software</a></p><p>可根据自己需求自行选择版本！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image.png"></p><p>如果不知道自己需要的镜像名，笨方法，选择DVD，然后就是文件体积最大的，就是完整镜像！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/03/image-1.png"></p><p>当然，也可以存网盘，不过即便官网停止维护了，一般也会保留镜像，让你过渡维护期的，除非这个镜像真的过了NN久。。。（没用户量你何来维护？）</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redhat下载地址 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac 快速切换hosts工具SwitchHosts</title>
      <link href="/posts/157b7f5f.html"/>
      <url>/posts/157b7f5f.html</url>
      
        <content type="html"><![CDATA[<p>因为需要经常访问GitHub，而国内呵呵呵。。。</p><p>偶尔虚拟机测试时，也需要自定义域名解析，</p><p>原来写过一个win下的bat，本来想再mac下也写shell，发现每次都要下权限密码，又想着要来个自动输入密码验证，麻烦。。。</p><p>懒人，推荐个一直在用的mac工具SwitchHosts，从最初正着写的H，到现在想斜着的H，logo都变了，UI优化了，作者也一直在维护，推荐一下。</p><p>项目地址：<a href="https://github.com/oldj/SwitchHosts">https://github.com/oldj/SwitchHosts</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/02/image-8.png"></p>]]></content>
      
      
      <categories>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>shell 快速切换服务器</title>
      <link href="/posts/f517818d.html"/>
      <url>/posts/f517818d.html</url>
      
        <content type="html"><![CDATA[<p>因为维护工作，经常需要切换服务器，这里写个切换服务器脚本。</p><p>输入判断，可自行完成，我这里只是简版。</p><p>范例一，适合服务器较多时，使用行号进行快速连接</p><p>思路：通过行号定位行内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#host</span><br><span class="line">echo &quot;</span><br><span class="line">USERIPADD</span><br><span class="line">test11192.168.1.111</span><br><span class="line">test12192.168.1.112</span><br><span class="line"></span><br><span class="line">test21192.168.1.121</span><br><span class="line">test22192.168.1.122</span><br><span class="line"></span><br><span class="line">test31192.168.1.123</span><br><span class="line">test32192.168.1.124</span><br><span class="line">test33192.168.1.125</span><br><span class="line">&quot; grep -Ev &quot;^#^$^ &quot;&gt;/tmp/host</span><br><span class="line"></span><br><span class="line">cat -n /tmp/host</span><br><span class="line">read -p &quot;请输入编号：&quot; NUM</span><br><span class="line">USER=`sed -n &quot;$NUM&quot;p /tmp/hostawk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">IPADD=`sed -n &quot;$NUM&quot;p /tmp/hostawk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">ssh $USER@$IPADD</span><br></pre></td></tr></table></figure><p>范例二，适合服务器较少时，快速输入ip最后几位来识别，也可以输入完整ip地址</p><p>思路：通过输入的末尾值，对文件进行过滤出行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#host</span><br><span class="line">echo &quot;</span><br><span class="line">USERIPADD</span><br><span class="line">test11192.168.1.111</span><br><span class="line">test12192.168.1.112</span><br><span class="line"></span><br><span class="line">test21192.168.1.121</span><br><span class="line">test22192.168.1.122</span><br><span class="line"></span><br><span class="line">test31192.168.1.123</span><br><span class="line">test32192.168.1.124</span><br><span class="line">test33192.168.1.125</span><br><span class="line">&quot; grep -Ev &quot;^#^$^ &quot;&gt;/tmp/host</span><br><span class="line"></span><br><span class="line">cat -n /tmp/host</span><br><span class="line">read -p &quot;请输入IP地址：&quot; NUM</span><br><span class="line">USER=`grep &quot;$NUM$&quot; /tmp/hostawk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">IPADD=`grep &quot;$NUM$&quot; /tmp/hostawk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">ssh $USER@$IPADD</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> linux </tag>
            
            <tag> 快速切换服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac 安装python3</title>
      <link href="/posts/76a39ab8.html"/>
      <url>/posts/76a39ab8.html</url>
      
        <content type="html"><![CDATA[<p>最近在看python，记录一下mac安装python中遇到的问题</p><p>mac默认安装的python2.7、或2.6，现在在学习3，所以需要更新版本。</p><p>安装python可以通过官网下载安装，也可以通过mac的安装器brew进行安装。</p><h2 id="一，通过brew安装"><a href="#一，通过brew安装" class="headerlink" title="一，通过brew安装"></a>一，通过brew安装</h2><p>1.安装brew安装失败</p><p>官网：<a href="https://brew.sh/">https://brew.sh/</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/02/image-4.png"></p><p>但我安装提示连接拒绝，后百度找到解决办法，切换获取镜像源</p><p>中科大Homebrew镜像源：  <a href="https://links.jianshu.com/go?to=https://lug.ustc.edu.cn/wiki/mirrors/help/brew.git">https://lug.ustc.edu.cn/wiki/mirrors/help/brew.git</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install)&quot;</span><br></pre></td></tr></table></figure><p>2.安装brew中断,提示不能安装该软件！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/02/image-5.png"></p><p>需要去苹果的开发者网站，下载插件Command Line Tools，<br><a href="https://developer.apple.com/download/more/">https://developer.apple.com/download/more/</a></p><p>我的macOS是10.15.2，安装CCommand_Line_Tools_for_Xcode_11.4.dmg可用</p><p>brew用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 查询：</span><br><span class="line">brew search 软件名</span><br><span class="line"></span><br><span class="line">// 安装：</span><br><span class="line">brew install 软件名</span><br><span class="line"></span><br><span class="line">// 卸载：</span><br><span class="line">brew uninstall 软件名</span><br><span class="line"></span><br><span class="line">// 更新 Homebrew：</span><br><span class="line">brew update </span><br><span class="line"></span><br><span class="line">// 查看 Homebrew 配置信息：</span><br><span class="line">brew config </span><br></pre></td></tr></table></figure><h2 id="二，通过官网安装python"><a href="#二，通过官网安装python" class="headerlink" title="二，通过官网安装python"></a>二，通过官网安装python</h2><p>官方下载地址：<a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a></p><p>下载的是个pkg安装包，双击下一步即可。</p><p>安装时，如果没有安装CCommand_Line_Tools_for_Xcode，依然会提示不能安装，需提前安装</p><h2 id="三，开发环境推荐pycharm"><a href="#三，开发环境推荐pycharm" class="headerlink" title="三，开发环境推荐pycharm"></a>三，开发环境推荐pycharm</h2><p>社区版和专业版，个人学习阶段社区版可满足。</p>]]></content>
      
      
      <categories>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell 获取某自然月的天数或两个日期间隔的天数</title>
      <link href="/posts/c68765d0.html"/>
      <url>/posts/c68765d0.html</url>
      
        <content type="html"><![CDATA[<h2 id="获取自然月的天数"><a href="#获取自然月的天数" class="headerlink" title="获取自然月的天数"></a>获取自然月的天数</h2><p>思路：</p><p>通过输入的年月，来先增加一个月再减去一天，就得到输入月份的月底的日期，即天数！</p><p>脚本如下：（+1month -1day）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#使用date命令，获取出自然月的天数&quot;</span><br><span class="line">echo &quot;年月格式：2022年2月，则输入202202&quot;</span><br><span class="line">read -p &quot;请输入年月份：&quot; VAR</span><br><span class="line">DAY=` date  -d &quot;+1month -1day $&#123;VAR&#125;01&quot; +%d`</span><br><span class="line">echo &quot;$&#123;VAR:0:4&#125;年$&#123;VAR:5:6&#125;月 中有$DAY天&quot;</span><br></pre></td></tr></table></figure><p>完善脚本：增加输入的日期格式判断</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#使用date命令，获取出自然月的天数&quot;</span><br><span class="line">echo &quot;年月格式：2022年2月，则输入202202&quot;</span><br><span class="line">read -p &quot;请输入年月份：&quot; VAR</span><br><span class="line">date -d $&#123;VAR&#125;01 &gt;&gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">DAY=` date  -d &quot;+1month -1day $&#123;VAR&#125;01&quot; +%d`</span><br><span class="line">echo &quot;$&#123;VAR:0:4&#125;年$&#123;VAR:5:6&#125;月 中有$DAY天&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;日期格式错误，请重新输入！&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="获取两个日期间隔的天数"><a href="#获取两个日期间隔的天数" class="headerlink" title="获取两个日期间隔的天数"></a>获取两个日期间隔的天数</h2><p>通过date +%s获取距离1970年1月1日 00:00:00 的秒数</p><p>例：获取两个时间段之间的天数：20220103~20220203</p><p>为方便理解,我将脚本拆分后如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#获取20220103距离1970年1月1日00:00:00 的秒数</span><br><span class="line">start=$(date -d 20220103 +%s)</span><br><span class="line"></span><br><span class="line">#获取20220103距离1970年1月1日00:00:00 的秒数</span><br><span class="line">end=$(date -d 20220203 +%s)</span><br><span class="line"></span><br><span class="line">#时差（秒）=结束日期（秒数）-开始日期（秒数）</span><br><span class="line">diff=$((  $end -$start ))</span><br><span class="line"></span><br><span class="line">#相差天数= 时差（秒）/86400    (#1天=86400秒)</span><br><span class="line">diffDAY=$((  $diff/86400 ))</span><br><span class="line"></span><br><span class="line">echo 20220103~20220203,差距$diffDAY 天</span><br></pre></td></tr></table></figure><p>上面的脚本写到一行即：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">###最后写到一行</span><br><span class="line">diffDAY=$((  ( $(date -d 20220203 +%s) - $(date -d 20220103 +%s) )/86400 ))</span><br><span class="line">echo 20220103~20220203,差距$diffDAY 天</span><br></pre></td></tr></table></figure><h2 id="拓展！"><a href="#拓展！" class="headerlink" title="拓展！"></a>拓展！</h2><p>cal 命令，是linux自带的日历，也可以通过脚本获取自然月的天数！</p><p>cal “日 月 年</p><p>选项：<br>  -1, –one        只显示当前月份(默认)<br>  -3, –three      显示上个月、当月和下个月<br>  -s, –sunday     周日作为一周第一天<br>  -m, –monday     周一用为一周第一天<br>  -j, –julian     输出儒略日<br>  -y, –year       输出整年<br>  -V, –version    显示版本信息并退出<br>  -h, –help       显示此帮助并退出</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/02/image-3.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#使用cal命令，获取自然月的天数</span><br><span class="line">echo &quot;年月格式：2022年2月，则输入202202&quot;</span><br><span class="line">read -p &quot;请输入年月份：&quot; VAR</span><br><span class="line">DAY=`cal $&#123;VAR:5:6&#125; $&#123;VAR:0:4&#125;grep -v ^$awk &#x27;END&#123;print $NF&#125;&#x27;`</span><br><span class="line">echo &quot;$&#123;VAR:0:4&#125;年$&#123;VAR:5:6&#125;月 中有$DAY天&quot;</span><br><span class="line">#看我上面完善脚本：可自行增加输入的日期格式判断</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> cal </tag>
            
            <tag> date </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 文件合并</title>
      <link href="/posts/f2549954.html"/>
      <url>/posts/f2549954.html</url>
      
        <content type="html"><![CDATA[<p>多文件合并常用cat 和 paste两个命令。</p><p>cat合并，属于文件内容依次追加，用的较多。</p><p>paste合并，属于纵列合并。</p><p>注：paste在合并列数不同的文件时，会将行左推进，所以最后合并文件时，注意文件行数要相同。</p><p>直接图例：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/02/image-1.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> cat </tag>
            
            <tag> paste </tag>
            
            <tag> 文件合并 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redhat5 没有ip a 或 ifconfig?</title>
      <link href="/posts/caa4c113.html"/>
      <url>/posts/caa4c113.html</url>
      
        <content type="html"><![CDATA[<p>ifconfig命令依赖net-tools包，可以通过：yum provides ifconfig命令查询依赖的安装包</p><p>这几天写脚本，遇到老版本的redhat，发现普通用户执行ip a 或 ifconfig，直接提示没有此命令？？？懵逼了。</p><p>于是就which ifconfig ，whereis ifconfig，发现位于&#x2F;sbin目录下，顺带看了下&#x2F;sbin&#x2F;ifconfig权限755,更懵逼了,有执行权限啊！！！</p><p>尝试直接执行&#x2F;sbin&#x2F;ifconfig，成功返回IP信息！</p><p>思考！思考！思考！</p><p>问题表现：没有此命令！但通过绝对路径可以执行！</p><p>OK！得出答案：ifconfig命令没有环境变量！</p><p>答案有就，就简单了，只需在当前用户.bash_profile中，PATH中追加:&#x2F;sbin即可！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/02/image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ifconfig </tag>
            
            <tag> redhat5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell 将if、for、while写在一行</title>
      <link href="/posts/54999d63.html"/>
      <url>/posts/54999d63.html</url>
      
        <content type="html"><![CDATA[<p>日常写if、for、while时，换行方便排查，但如果expect远端执行命令写在一行时则很方便。</p><p>if格式：（ if;then [命令] ;else [命令] ;fi ）</p><p>for格式：（ for;do [命令] ;done ）</p><p>while： （ while;do [命令] ;done ）</p><p>在then、else、do区域中有多行命令是，也需要将换行替换为“；”</p><p>先贴个日常脚本范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#if范例</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then</span><br><span class="line">echo Ok </span><br><span class="line">else</span><br><span class="line">echo Bad</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#for范例</span><br><span class="line">for i in `seq 9 `</span><br><span class="line">do</span><br><span class="line">echo &quot;当前循环次数：&quot;</span><br><span class="line">echo $i </span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#while范例</span><br><span class="line">while true；</span><br><span class="line">do</span><br><span class="line">echo &quot;当前时间&quot;</span><br><span class="line">date +%T</span><br><span class="line">sleep 1</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>将上面脚本，换行符替换为“；”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#if范例（if;then;else;fi）</span><br><span class="line">if [ $? -eq 0 ];</span><br><span class="line"></span><br><span class="line">then echo Ok; </span><br><span class="line">else echo Bad;</span><br><span class="line"></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#for范例</span><br><span class="line">for i in `seq 9 `;</span><br><span class="line"></span><br><span class="line">do echo &quot;当前循环次数：&quot;; echo $i; </span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#while范例</span><br><span class="line">while true；</span><br><span class="line"></span><br><span class="line">do echo &quot;当前时间&quot;;date +%T;sleep 1;</span><br><span class="line"></span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>最终写在一行结果如下！</p><p>if范例写在一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if [ $? -eq 0 ];then echo ok;else echo Bad; fi</span><br></pre></td></tr></table></figure><p>for范例写在一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in `seq 9 `; do echo &quot;当前循环次数：&quot;; echo $i;done</span><br></pre></td></tr></table></figure><p>while范例写在一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">while true;do echo &quot;当前时间&quot;;date +%T;sleep 1;done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> while </tag>
            
            <tag> fo </tag>
            
            <tag> if </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux expect自动交互命令</title>
      <link href="/posts/828d6ae.html"/>
      <url>/posts/828d6ae.html</url>
      
        <content type="html"><![CDATA[<p>工作中遇到批量服务器无交互情况，但又不能使用秘钥免密，尴尬了。百度了一下无交互命令expect，做个笔记分享。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h6 id="yum方式安装"><a href="#yum方式安装" class="headerlink" title="yum方式安装"></a>yum方式安装</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y insatll</span><br></pre></td></tr></table></figure><h6 id="tar包方式安装"><a href="#tar包方式安装" class="headerlink" title="tar包方式安装"></a>tar包方式安装</h6><p>expect安装需要tcl依赖。</p><p>tcl源码包：<a href="https://sourceforge.net/projects/tcl/files/latest/download">https://sourceforge.net/projects/tcl/files/latest/download</a></p><p>expect源码包：<a href="https://sourceforge.net/projects/expect/files/latest/download">https://sourceforge.net/projects/expect/files/latest/download</a></p><h2 id="日常应用expect为两种方法"><a href="#日常应用expect为两种方法" class="headerlink" title="日常应用expect为两种方法:"></a>日常应用expect为两种方法:</h2><ul><li>1.独立expect脚本应用</li><li>2.shell嵌套expect命令</li></ul><h2 id="第一种应用：独立expect脚本"><a href="#第一种应用：独立expect脚本" class="headerlink" title="第一种应用：独立expect脚本"></a>第一种应用：独立expect脚本</h2><p>制作独立的expect脚本，一般以exp作为后缀名。</p><p> 1)定义脚本执行的shell：<br> #!&#x2F;usr&#x2F;bin&#x2F;expect<br> 2）set timeout（expect的内部命令）<br> 设置超时时间，单位是秒，值为-1时 永不超时（当远端命令执行时间较长时，需要注意此参数，譬如日志分割操作，会占用较长时间，可用到此参数）。<br> 如30秒：timeout 30<br> 3）spawn （expect的内部命令）<br> 功能：传递交互指令<br> 4）expect（expect的内部同名命令）<br> 主要功能：判断输出是否包含某项字符，没有立即返回（如果设置有timeout值，则等待timeout时间）<br> 5）send（expect的内部命令）<br> 功能：执行交互动作（就是远端要执行的命令！）<br> 命令字符串后面加“r”，表示换行，就如同我们敲完命令会有回车操作<br> 6）interact（expect的内部命令）<br> 执行完毕后保持交互状态，把控制权交给当前控制台。<br> 如果不加这一项，交互完成退出。<br> 7）exp_continue （expect的内部命令）<br> 继续接下来的交互操作<br> 8）$argv （expect的内部命令）<br> expect脚本接受从bash传递过滤的参数<br> 格式：[ llindex $argv n ] ，n从0开始，表示第一、二、三。。。个参数 </p><p>注：以上参数中expect（内置命令）</p><p>如果以{}方式交互，可以理解为组，但只打印第一个send结果</p><p>如果想实现每个expect交互命令都有打印结果需要expect独立send命令</p><p>范例一：实现获取远端主机名、日期等，然后返回源主机</p><p>创建 ssh1.exp，关注以下几点，</p><p>1.使用set配置固定值（密码明文，不够安全）</p><p>2.expect判断字符“]*”，中*是通配符</p><p>3.send命令中“\r”，r代表回车，换行。</p><p>4.$默认引用的当前脚本变量，如果牵涉远程命令需要\$转义！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/expect</span><br><span class="line">#定义变量</span><br><span class="line">set IPADD &quot;192.168.68.150&quot;</span><br><span class="line">set USER &quot;root&quot;</span><br><span class="line">set PWD &quot;123456789&quot;</span><br><span class="line">set timeout -1</span><br><span class="line">#spawn传递交互命令</span><br><span class="line">spawn ssh $USER@$IPADD</span><br><span class="line">#</span><br><span class="line">expect &#123;</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\r&quot;  &#125;</span><br><span class="line">&quot;password:&quot; &#123; send &quot;$PWD\r&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#expect判断包含&quot;]*&quot;就触发send交互动作，*为通配符！</span><br><span class="line">#获取远端主机名</span><br><span class="line">expect &quot;]*&quot; &#123;send &quot;hostname\r&quot;&#125;</span><br><span class="line">#获取远端主机IP($1中$需要转义，否则会被认为是变量！！！)</span><br><span class="line">expect &quot;]*&quot; &#123;send &quot;hostname -Iawk &#x27;&#123;print \$1&#125;&#x27;\r&quot;&#125;</span><br><span class="line">#获取远端主机时间</span><br><span class="line">expect &quot;]*&quot; &#123;send &quot;date +%F_%T\r&quot;&#125;</span><br><span class="line"></span><br><span class="line">#退出远端主机</span><br><span class="line">expect &quot;]*&quot; &#123; send &quot;exit\r&quot; &#125;</span><br></pre></td></tr></table></figure><p>测试结果：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-35.png"></p><p>范例二：与范例一获取信息一样，不同点在于变量值在控制台输入！</p><p>使用$avgr调用追加变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/expect</span><br><span class="line">set IPADD [ lindex $argv 0 ]</span><br><span class="line">set USER [ lindex $argv 1 ]</span><br><span class="line">set PWD [ lindex $argv 2 ]</span><br><span class="line">set timeout 30</span><br><span class="line">spawn ssh $USER@$IPADD</span><br><span class="line">expect &#123;</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\r&quot;  &#125;</span><br><span class="line">&quot;password:&quot; &#123; send &quot;$PWD\r&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line">#保持交互，留着当前控制台</span><br><span class="line">interact</span><br></pre></td></tr></table></figure><p>测试结果：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-36.png"></p><h2 id="第二种应用：shell脚本中使用expect"><a href="#第二种应用：shell脚本中使用expect" class="headerlink" title="第二种应用：shell脚本中使用expect"></a>第二种应用：shell脚本中使用expect</h2><p>在shell脚本中，expect使用EOF执行</p><p>如下脚本：用于服务器批量spc文件到远端家目录</p><p>（如暴露主机信息，可使用gpg进行脚本加密，或者将主机信息移到单独文件进行gpg，我这里只是为了演示写在一个脚本里了）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#实现批量服务器scp传输文件到远端家目录</span><br><span class="line">#只需更新SCPFILE文件路径及主机信息</span><br><span class="line"></span><br><span class="line">#要传送的文件</span><br><span class="line">SCPFILE=~/check.sh</span><br><span class="line"></span><br><span class="line">#主机信息</span><br><span class="line">echo &quot;</span><br><span class="line">#IPADD              USER                PWD</span><br><span class="line">192.168.68.100      root                123456789</span><br><span class="line">192.168.68.150      root                123456789</span><br><span class="line"></span><br><span class="line">&quot; grep -Ev &quot;^#^$&quot; &gt;/tmp/host.txt</span><br><span class="line">########################################################</span><br><span class="line"></span><br><span class="line">SUM=`cat /tmp/host.txt wc -l`</span><br><span class="line">for i in `seq $SUM`</span><br><span class="line">do</span><br><span class="line"></span><br><span class="line">IPADD=`sed -n &quot;$i&quot;p /tmp/host.txtawk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">USER=`sed -n &quot;$i&quot;p /tmp/host.txt awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">PWD=`sed -n &quot;$i&quot;p /tmp/host.txt  awk &#x27;&#123;print $3&#125;&#x27;`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#scp传送巡检脚本</span><br><span class="line">expect &lt;&lt;EOF</span><br><span class="line">         set timeout -1;</span><br><span class="line">         spawn  scp $SCPFILE  $USER@$IPADD:</span><br><span class="line">         expect &#123;</span><br><span class="line">                 &quot;yes/no&quot; &#123; send &quot;yes\n&quot; ; exp_continue &#125;</span><br><span class="line">                 &quot;password:&quot; &#123; send &quot;$PWD\n&quot; &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         expect eof</span><br><span class="line">EOF</span><br><span class="line">echo &quot;=========$IPADD SCP完成 =================&quot;</span><br><span class="line">done</span><br><span class="line">rm -f /tmp/host*</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-37.png"></p><p>-——————————————————————————-</p><p>在shell脚本中，使用expect -c “ “</p><p>使用-c双引号代替EOF，但因为是双引号做标识符，使在引号内的特殊符号都需要使用\反斜杠对特殊符号进行转义，不是很方便，不喜欢。。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo start</span><br><span class="line"></span><br><span class="line">expect -c &quot;</span><br><span class="line">spawn ssh root@$192.168.68.100</span><br><span class="line">expect \&quot;password:\&quot; &#123; send \&quot;123456789\r\&quot;   &#125;</span><br><span class="line">interact</span><br><span class="line">&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> expect </tag>
            
            <tag> scp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本中使用ESC/回车做判断</title>
      <link href="/posts/2c17b229.html"/>
      <url>/posts/2c17b229.html</url>
      
        <content type="html"><![CDATA[<p>没时间写东西，来点旧货。</p><p>写shell脚本，遇到菜单时，使用键位做判断操作，我习惯使用回车返回上级（也就是退出当前循环），ESC退出即表示中断shell（但是懒人习惯Ctrl+c）</p><p>回车键：就判断变量是否空值</p><p>ESC键：<code>$</code>‘\E’ ，键盘检测键位</p><p>贴脚本，一下就看懂了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">while true</span><br><span class="line">do</span><br><span class="line">echo &quot;1.XXX&quot;</span><br><span class="line">echo &quot;2.xxx&quot;</span><br><span class="line">echo &quot;回车键 返回上级&quot;</span><br><span class="line">echo &quot;ESC键 退出&quot;</span><br><span class="line">    while true</span><br><span class="line">    do</span><br><span class="line">    echo &quot;--------------------------&quot;</span><br><span class="line">    read  -n1  -p &quot;请输入：&quot; key</span><br><span class="line">    if [ -n $key ];then</span><br><span class="line">    break</span><br><span class="line">    else</span><br><span class="line">       case $key in</span><br><span class="line">         $&#x27;\E&#x27;)</span><br><span class="line">            echo &quot;退出&quot;</span><br><span class="line">            exit</span><br><span class="line">            ;;</span><br><span class="line">            1)</span><br><span class="line">            echo</span><br><span class="line">            echo &quot;当前输入值为：1&quot;</span><br><span class="line">            ;;</span><br><span class="line">            2)</span><br><span class="line">            echo</span><br><span class="line">            echo &quot;当前输入值为：2&quot;</span><br><span class="line">            ;;</span><br><span class="line">            *)</span><br><span class="line">            echo</span><br><span class="line">            echo &quot;输入错误！&quot;</span><br><span class="line">            ;;</span><br><span class="line">       esac</span><br><span class="line">    fi</span><br><span class="line">    done</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>——————————————————————————</p><p>上下左右键，暂时为验证，后期补充！<br>上键：<code>$</code>’\E’[A<br>下键：<code>$</code>’\E’[B<br>左键：<code>$</code>’\E’[D<br>右键：<code>$</code>’\E’[C</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> esc键 </tag>
            
            <tag> 回车键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell 让yum、wget、git、rpm安装等待提示</title>
      <link href="/posts/15fa3441.html"/>
      <url>/posts/15fa3441.html</url>
      
        <content type="html"><![CDATA[<p>无论是yum、wget、git、rpm在安装过程中都有出现安装过程，容易打乱安装提示，原来我看过有wget的下载进度条，但不用应用到其他安装过程，有兴趣的可以去看看，不是很实用。</p><p>讲下我的思路，无论在yum、wget、git、rpm过程中都会有对应的进程，所以我就来个while循环检测它们的进程，做个小提示“安装中。。。”，当然你也可以用其他符合代替</p><p>是不是很简单，如果是一个shell脚本，需要将yum、wget、git、rpm后台一个新的shell执行。</p><p>贴个我的脚本实例：(以yum为例，其他都是类似)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#3个函数</span><br><span class="line">#安装RPM=samba</span><br><span class="line"></span><br><span class="line">#检测rpm</span><br><span class="line">FUNCHECKRPM()&#123;</span><br><span class="line">RPM=samba</span><br><span class="line">echo &quot;正在检测 $RPM 安装包&quot;</span><br><span class="line">yum provides $RPM &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ ! $? -eq 0 ];then</span><br><span class="line">echo -e &quot;\e[31m 错误！yum源中未能找到 $RPM 安装包，请检测yum源或网络连接！ \e[0m&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#安装rpm</span><br><span class="line">FUNYUMRPM()&#123;</span><br><span class="line">echo &quot;yum -y install $RPM&quot; &gt;/tmp/yuminstall</span><br><span class="line">nohup bash /tmp/yuminstall  &gt;/tmp/test 2&gt;&amp;1 &amp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#安装检测</span><br><span class="line">FUNCHECKYUM()&#123;</span><br><span class="line">while  [ $? -eq 0 ]</span><br><span class="line">do</span><br><span class="line">echo &quot;$RPM 安装中，请等待 。。。 &quot;</span><br><span class="line">sleep 3</span><br><span class="line">ps -ef grep -v grepgrep &quot;yum.*install.*$RPM.*&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">done</span><br><span class="line">echo &quot;$RPM 安装完成&quot;</span><br><span class="line">&#125;        </span><br><span class="line"></span><br><span class="line">FUNCHECKRPM</span><br><span class="line">FUNYUMRPM</span><br><span class="line">FUNCHECKYUM</span><br></pre></td></tr></table></figure><p>只是个安装提示，如果有兴趣的可以研究一下怎么打印一个进度条。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> linux </tag>
            
            <tag> 等待提示 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux  对比文件差异</title>
      <link href="/posts/38946473.html"/>
      <url>/posts/38946473.html</url>
      
        <content type="html"><![CDATA[<p>linux中有好几个文件对比命令有好几个，我今天介绍2个命令：comm、diff</p><h2 id="comm命令"><a href="#comm命令" class="headerlink" title="comm命令"></a>comm命令</h2><p>这个对比有个很大的缺陷，需要排序，有的时候哪怕你排序了，碰到行数不同的更是头疼，不是很好用，–help 可以查看帮助文档。</p><p>comm语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">comm [option] file1 file2</span><br></pre></td></tr></table></figure><ul><li>参数：</li><li>-1   不显示只在第1个文件里出现过的列。</li><li>-2   不显示只在第2个文件里出现过的列。</li><li>-3   不显示只在第1和第2个文件里出现过的列。（只2个文件差异内容)</li><li>-12 只显示两个文件相同部分</li><li>-13 只显示在第2个文件中出现（而未在第1个文件中出现的行）</li><li>-23 只显示在第1个文件中出现（而未在第2个文件中出现的行）</li></ul><p>例：比较2个文件，并打打印相同部分（排序、去除，否则会出现comm错误告警）</p><p>[root@ffing ~]# cat 1.txt<br> a1<br> b12<br> b123<br> d1234<br> [root@ffing ~]# cat 2.txt<br> ab<br> abb<br> a2<br> acc<br> a1<br> a12<br> b12<br> b12<br> d1234<br> [root@ffing ~]# cat 1.txt sortuniq &gt; 1.txt.bak<br> [root@ffing ~]# cat 2.txt sortuniq &gt; 2.txt.bak<br> [root@ffing ~]# comm -12 1.txt.bak 2.txt.bak<br> a1<br> b12<br> d1234</p><h2 id="diff命令"><a href="#diff命令" class="headerlink" title="diff命令"></a>diff命令</h2><p>diff 功能比较强大，可以比较文件也可以比较目录，且可以直接输出比较结果，而不显示比较内容。</p><p>我使用diff常用环境</p><ul><li>1.直接对比文件是否有差异，无需加参数</li><li>2.-c，文件相同不输出结果，文件不同时，标记输出差异结果</li><li>3.-q, 不输出差异信息，只输出结果，shell中用的比较多</li></ul><p>diff语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diff [-abBcdefHilnNpPqrstTuvwy][-][-C ][-D ][-I ][-S ][-W ][-x ][-X ][--help][--left-column][--suppress-common-line][文件或目录1][文件或目录2</span><br></pre></td></tr></table></figure><p>参数：</p><ul><li>- 　指定要显示多少行的文本。此参数必须与-c或-u参数一并使用。</li><li>-a或–text 　diff预设只会逐行比较文本文件。</li><li>-b或–ignore-space-change 　不检查空格字符的不同。</li><li>-B或–ignore-blank-lines 　不检查空白行。</li><li>-c 　显示全部内文，并标出不同之处。</li><li>-C或–context 　与执行”-c-“指令相同。</li><li>-d或–minimal 　使用不同的演算法，以较小的单位来做比较。</li><li>-D或ifdef 　此参数的输出格式可用于前置处理器巨集。</li><li>-e或–ed 　此参数的输出格式可用于ed的script文件。</li><li>-f或-forward-ed 　输出的格式类似ed的script文件，但按照原来文件的顺序来显示不同处。</li><li>-H或–speed-large-files 　比较大文件时，可加快速度。</li><li>-l或–ignore-matching-lines 　若两个文件在某几行有所不同，而这几行同时都包含了选项中指定的字符或字符串，则不显示这两个文件的差异。</li><li>-i或–ignore-case 　不检查大小写的不同。</li><li>-l或–paginate 　将结果交由pr程序来分页。</li><li>-n或–rcs 　将比较结果以RCS的格式来显示。</li><li>-N或–new-file 　在比较目录时，若文件A仅出现在某个目录中，预设会显示：</li><li>Only in目录：文件A若使用-N参数，则diff会将文件A与一个空白的文件比较。</li><li>-p 　若比较的文件为C语言的程序码文件时，显示差异所在的函数名称。</li><li>-P或–unidirectional-new-file 　与-N类似，但只有当第二个目录包含了一个第一个目录所没有的文件时，才会将这个文件与空白的文件做比较。</li><li>-q或–brief 　仅显示有无差异，不显示详细的信息。</li><li>-r或–recursive 　比较子目录中的文件。</li><li>-s或–report-identical-files 　若没有发现任何差异，仍然显示信息。</li><li>-S或–starting-file 　在比较目录时，从指定的文件开始比较。</li><li>-t或–expand-tabs 　在输出时，将tab字符展开。</li><li>-T或–initial-tab 　在每行前面加上tab字符以便对齐。</li><li>-u,-U或–unified&#x3D; 　以合并的方式来显示文件内容的不同。</li><li>-v或–version 　显示版本信息。</li><li>-w或–ignore-all-space 　忽略全部的空格字符。</li><li>-W或–width 　在使用-y参数时，指定栏宽。</li><li>-x或–exclude 　不比较选项中所指定的文件或目录。</li><li>-X或–exclude-from 　您可以将文件或目录类型存成文本文件，然后在&#x3D;中指定此文本文件。</li><li>-y或–side-by-side 　以并列的方式显示文件的异同之处。</li><li>--help 　显示帮助。</li><li>--left-column 　在使用-y参数时，若两个文件某一行内容相同，则仅在左侧的栏位显示该行内容。</li><li>--suppress-common-lines 　在使用-y参数时，仅显示不同之处。</li></ul><p>diff比较两个文件，2个文件的差异都会标记处理，未标记的行是相同内容，如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@bogon ~]# diff -c 1.txt 2.txt</span><br><span class="line">*** 1.txt       2022-01-23 22:14:57.748722522 +0800</span><br><span class="line">--- 2.txt       2022-01-23 22:18:20.048981200 +0800</span><br><span class="line">***************</span><br><span class="line">*** 1,5 ****</span><br><span class="line">  a1</span><br><span class="line">  b12</span><br><span class="line">- b123</span><br><span class="line">  d1234</span><br><span class="line">- </span><br><span class="line">--- 1,9 ----</span><br><span class="line">+ ab</span><br><span class="line">+ abb</span><br><span class="line">+ a2</span><br><span class="line">+ acc</span><br><span class="line">  a1</span><br><span class="line">+ a12</span><br><span class="line">+ b12</span><br><span class="line">  b12</span><br><span class="line">  d1234</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> comm </tag>
            
            <tag> diff </tag>
            
            <tag> 对比文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 获取组用户</title>
      <link href="/posts/29fe958d.html"/>
      <url>/posts/29fe958d.html</url>
      
        <content type="html"><![CDATA[<p>今天写测试脚本，临时要获取某个组内的所有用户成员，贴个脚本。</p><p>&#x2F;etc&#x2F;passwd 中用户+主组</p><p>&#x2F;etc&#x2F;group 中组+从用户</p><p>讲下思路：</p><p>第一种：以组名为基数，for循环用户过滤包含组名的用户</p><p>第二种：以GID为基数，过滤&#x2F;etc&#x2F;passwd的主用户及&#x2F;etc&#x2F;group中的从用户。</p><p><strong>不要问我为什么不用id命令，id命令在确定值时很好用，如果套用脚本，输入值为纯数字时，id命令会认为是userid或gid，不能进行判断！</strong></p><p>第一种方法：组名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#ffing组中包含哪些用户</span><br><span class="line">GROUP=ffing</span><br><span class="line">echo &gt; /tmp/groupuser</span><br><span class="line">for USERNAME in `cat /etc/passwd cut -d&quot;:&quot; -f1`</span><br><span class="line">do</span><br><span class="line">id $USERNAME awk -F&quot;=&quot; &#x27;&#123;print $4&#125;&#x27;tr &quot;,&quot; &quot;\n&quot;cut -d &quot;(&quot; -f2cut -d &quot;)&quot; -f1 grep &quot;^$GROUP$&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [  $? -eq 0 ];then</span><br><span class="line">echo &quot;$USERNAME&quot; &gt;&gt; /tmp/groupuser</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">echo &quot;$GROUP 组中有以下用户：&quot;</span><br><span class="line">echo &quot;----------------------------&quot;</span><br><span class="line">cat /tmp/groupuser grep -v &quot;^$&quot;</span><br><span class="line">echo &quot;----------------------------&quot;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-32.png"></p><p>第二种方法：GID</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GROUP=ffing</span><br><span class="line">#获取组ID</span><br><span class="line">GROUPID=` cat /etc/group awk -F &quot;:&quot; &#x27;&#123;print $1 &quot; &quot; $3&#125;&#x27;grep &quot;^$GROUP &quot; awk &#x27;&#123;print $2&#125;&#x27; `</span><br><span class="line">#获取组用户</span><br><span class="line">cat /etc/passwdawk -F&quot;:&quot; &#x27;&#123;print $1 &quot; &quot; $4&#125;&#x27;grep &quot; $GROUPID&quot;awk &#x27;&#123;print $1&#125;&#x27; &gt;/tmp/groupuser</span><br><span class="line">cat /etc/groupawk -F&quot;:&quot; &#x27;&#123;print $3 &quot; &quot; $4&#125;&#x27;grep &quot;^$GROUPID &quot;awk &#x27;&#123;print $2&#125;&#x27; &gt;&gt;/tmp/groupuser</span><br><span class="line"></span><br><span class="line">echo  &quot; $GROUP 中有以下用户： &quot;</span><br><span class="line">echo &quot;--------------------------&quot;</span><br><span class="line">cat /tmp/groupuser</span><br><span class="line">echo &quot;--------------------------&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bash </tag>
            
            <tag> 组id </tag>
            
            <tag> 获取组用户 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 打印匹配内容前、后行</title>
      <link href="/posts/75ce9e40.html"/>
      <url>/posts/75ce9e40.html</url>
      
        <content type="html"><![CDATA[<p>样例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat test.txt</span><br><span class="line">aaaa</span><br><span class="line">bbbb</span><br><span class="line">cccc</span><br><span class="line">dddd</span><br><span class="line">eeee</span><br><span class="line">ffff</span><br><span class="line">gggg</span><br><span class="line">hhhh</span><br><span class="line">iiii</span><br></pre></td></tr></table></figure><h2 id="使用sed"><a href="#使用sed" class="headerlink" title="使用sed"></a>使用sed</h2><p>使用sed过滤指定行！（以过滤eeee为例）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#匹配eeee所在行，并打印eeee后3行</span><br><span class="line">sed -n &#x27;/eeee/,+3p&#x27; test.txt</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-26.png"></p><p>打印匹配行的上一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#x交换空间，p打印，h当前模式空间中内容覆盖至缓存区</span><br><span class="line">#sed命令参数太过复杂，暂时记录这这里</span><br><span class="line">sed -n &#x27;/eeee/&#123;x;p&#125;;h&#x27; test.txt</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-27.png"></p><h2 id="使用grep"><a href="#使用grep" class="headerlink" title="使用grep"></a>使用grep</h2><p>使用grep先确定匹配行号，再对行号前后增加！（以过滤eeee为例）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#获取eeee行号</span><br><span class="line">cat test.txt grep -nE &quot;^eeee$&quot;awk -F&quot;:&quot; &#x27;&#123;print $1&#125;&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-28.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#获取eeee所在行号</span><br><span class="line">NUM=`cat test.txt grep -nE &quot;^eeee$&quot;awk -F&quot;:&quot; &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">#eeee所在行号的上一行</span><br><span class="line">NUM_1=`echo &quot;$NUM-1&quot;bc`</span><br><span class="line">#eeee所在行号的下一行</span><br><span class="line">NUM1=`echo &quot;$NUM+1&quot;bc`</span><br><span class="line"></span><br><span class="line"> sed -n &quot;$NUM_1&quot;p test.txt</span><br><span class="line"> sed -n &quot;$NUM&quot;p test.txt</span><br><span class="line"> sed -n &quot;$NUM1&quot;p test.txt</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-29.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sed </tag>
            
            <tag> linux </tag>
            
            <tag> grep </tag>
            
            <tag> 前、后行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux tr命令</title>
      <link href="/posts/b9f7955d.html"/>
      <url>/posts/b9f7955d.html</url>
      
        <content type="html"><![CDATA[<p>tr只支持标准输入！！！</p><p>tr的命令都是全局的，譬如删除123，在标准输入中会认为1、2、3这3个字符，而不是“123”一个字符！</p><p>tr参数</p><ul><li>-t str1替换str2（默认，可以省略不写）</li><li>-d 删除</li><li>-s 合并重复</li><li>-c 反向替换，srt1以外的全部替换为str2</li></ul><p>因-t属于默认参数，所以可以只记住3个参数-d、-s、-c，且-c区分也很少用到，其实经常用的是-s和默认-t（-t可以省略）。</p><p>tr比较简单，直接截图说明</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-23.png"></p><p>-c,排除！将数字以外的全部替换为空格（换行符也替换为空格符）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-24.png"></p><p>-d,删除指定字符</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-25.png"></p><p>在实际使用中，用的最多的还是换行符或者tab</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-33.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> tr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 标准输入到文件（echo、cat）</title>
      <link href="/posts/7103f6e6.html"/>
      <url>/posts/7103f6e6.html</url>
      
        <content type="html"><![CDATA[<p>存稿发一发，呵呵呵，原来还想补充一下，就这样吧。</p><p>在写脚本时，总有需要生成的配置文件，为了方便就直接写在一个脚本，执行时导出生成，我这里写下日常使用的cat和echo用法。</p><h2 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h2><p>对固定值时，且是多行一般使用cat配合EOF，将EOF内容追加或覆盖到配置文件</p><p>#例：如下将两行内容覆盖到~&#x2F;test.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;~/test.conf</span><br><span class="line">hostname=ffing.cn</span><br><span class="line">date=2022-01-03</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-18.png"></p><h2 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h2><p>echo一般处理单行或者变量时使用。</p><p>当使用单引号时，就是固定值，和cat功能类似</p><p>当使用双引号是，取变量值，环境变量或脚本变量都可。</p><p>注：echo时，换行符也会被插入</p><p>#例，当有换行符时，换行符也会被插入到文件中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;</span><br><span class="line">$HOSTNAME</span><br><span class="line">`date +%F`</span><br><span class="line">&quot; &gt; ~/test.conf</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-17.png"></p><p>如果不想要两个空格行，就需要把脚本中换行符替换掉！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;$HOSTNAME</span><br><span class="line">`date +%F`&quot; &gt; ~/test.conf</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-19.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> cat </tag>
            
            <tag> echo </tag>
            
            <tag> 标准输入到文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 文件传输（lrzsz、scp、sftp）</title>
      <link href="/posts/3c818fa4.html"/>
      <url>/posts/3c818fa4.html</url>
      
        <content type="html"><![CDATA[<p>因为最近一直在看mongodb，真没时间写些东西，今天补充下日常命令，每天进步一点点。</p><h2 id="lrzsz"><a href="#lrzsz" class="headerlink" title="lrzsz"></a>lrzsz</h2><p>非集成工具，需yum -y insatll lrzsz</p><p>lrzsz是SecureCRT、putty时用的比较多的，到后期的xshell、finalshell、Mobaxterm等等终端一般都集成了ftp工具，所以用的就越来越少了。</p><p>lrzsz命令以服务器为主体，所以有相对性。</p><p>rz：服务器接受文件，也就是本地上传到服务器（用于服务器上传文件使用）</p><p>sz：服务器发送文件，也就是将服务器文件发送本地（用于服务器下载文件使用）</p><p>rz&#x2F;sz【选项】<br>-+, –append:将文件内容追加到已存在的同名文件<br>-a,–ascii:以文本方式传输<br>-b, –binary:以二进制方式传输，推荐使用<br>–delay-startup N:等待N秒<br>-e, –escape:对所有控制字符转义，建议使用<br>-E, –rename:已存在同名文件则重命名新上传的文件，以点和数字作为后缀<br>-p, –protect:对ZMODEM协议有效，如果目标文件已存在则跳过 -<br>q, –quiet:安静执行，不输出提示信息<br>-v, –verbose:输出传输过程中的提示信息<br>-y, –overwrite:存在同名文件则替换<br>-X, –xmodem:使用XMODEM协议<br>–ymodem:使用YMODEM协议<br>-Z, –zmodem:使用ZMODEM协议<br>–version：显示版本信息<br>–h, –help：显示帮助信息</p><p>注：操作很简单，但客户端语言环境和服务器语言环境不一致时会出现中文乱码！</p><h2 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h2><p>系统集成工具，基于ssh协议，是ssh的一个子系统。</p><p>我前面文章页有讲过这个命令，多用于多台服务器直接进行文件传送，而且是输入密码后直接传送，多个是单文件或目录这一个命令搞得，一般配合脚本进行文件传输很方便（scp一般要配合秘钥免密，脚本才流畅，否则每次都要输入密码！）</p><p>scp语法：（复制目录时需加-r）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#本地传送远端</span><br><span class="line">scp [文件路径] [远端地址：路径]</span><br><span class="line">#远端下载到本地</span><br><span class="line">scp [远端地址：路径] [本地路径]</span><br></pre></td></tr></table></figure><p>#例：将本地test.txt上传到远端abc用户家目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /tmp/test.txt abc@ffing.cn:</span><br></pre></td></tr></table></figure><p>#例：将远端tpm.txt 下载到本地家目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp abc@ffing.cn:/tmp/tmp.txt ~/</span><br></pre></td></tr></table></figure><p>注：远端路径必须有“：”，否则传输失败！若只跟“：”表示远端家目录</p><h2 id="sftp"><a href="#sftp" class="headerlink" title="sftp"></a>sftp</h2><p>sftp同样是系统集成工具，走的也是ssh协议，我用的比较少，scp用的比较多，相对sftp就用的很少了。</p><p>sftp和scp的语法一样，区别2点:</p><p>1.sftp使用前必须先登录，登录后可执行远程操作，直至退出。</p><p>2.sftp比scp多了命令执行权限，可直接执行远端命令对远程服务器操作，如若加l(local)就可以对本地进行操作。</p><p>核心命令：</p><p>get：拉取（将远端数据下载到本地）</p><p>put：上传（将本地数据上传到远程服务器）</p><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#sftp登录远程服务器</span><br><span class="line">sftp root@ffing.cn</span><br><span class="line">****密码****</span><br><span class="line">#将本地/tmp/tmp.txt上传到远端root家目录（登录的就是root，可置空）</span><br><span class="line">put /tmp/tmp.txt</span><br><span class="line">#将本地/test目录上传到远端/opt目录下</span><br><span class="line">put -r /test /opt</span><br><span class="line">#下载文件到家目录（默认可以置空，我加个~/方便讲解识别）</span><br><span class="line">get /opt ~/</span><br></pre></td></tr></table></figure><h2 id="scp和sftp比较"><a href="#scp和sftp比较" class="headerlink" title="scp和sftp比较"></a>scp和sftp比较</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#最大区别可操作性！</span><br><span class="line">可操作性：scp传送文件或目录，每执行一次就是一次交互，就需要输入一次密码，所以如果是一次性操作，推荐scp。而sftp需先sftp到远端服务器，只需一次输入密码，可以进行多项操作，而直至退出。根据业务操作性进行选择！</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">速度：在传输文件时，scp通常比sftp快得多，尤其是在网络延迟很高的情况下。这是因为scp实现了更高效的传输算法，不需要等待数据包确认。此时应该使用哪种协议？</span><br><span class="line"></span><br><span class="line">安全性：由于两种协议都都基于SSH，可以认为都是ssh的子系统，因此它们都提供相同的安全功能，包括密码和数据加密以及公钥验证。</span><br><span class="line"></span><br><span class="line">功能/可用性：scp提供的功能不同于其名称所暗示的那样：安全地复制文件（Secure copy）。如果您或您的用户将管理文件（包括查看/搜索目录，创建文件夹和组织文件，删除或重命名文件等），sftp是优秀的协议。此外，sftp还支持断点续传，这在网络连接不佳的环境中将大有帮助。</span><br><span class="line"></span><br><span class="line">传输文件大小：scp和sftp都没有文件大小限制。但是，根据文件的大小，scp的文件传输速度可能会有所帮助。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 文件传输 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运维程序员写作工具推荐</title>
      <link href="/posts/e447a47b.html"/>
      <url>/posts/e447a47b.html</url>
      
        <content type="html"><![CDATA[<p>呵呵呵呵。。。</p><p>这几天没时间写东西，老套路推荐自用的2个工具，填充一下。</p><ul><li>Sublime Text </li><li>Typora</li></ul><h2 id="Sublime-Text"><a href="#Sublime-Text" class="headerlink" title="Sublime Text"></a>Sublime Text</h2><p>哈哈哈，这个大家应该特别熟悉了，我就懒得介绍了，多种语法，语法自动填充，我写shell就喜欢用这个，配合Sublime Merge推送git也很方便。</p><p>语法丰富，香香香，可惜现在我只用bash、偶尔静态html</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-13.png"></p><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><p>做技术文档，运维笔记都很方便。</p><p>支持代码！！！且有图片、而且快捷键大纲。香香香！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-14.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-15.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Windows </category>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell 关于路径记忆的问题($0、pwd、dirname、readlink)</title>
      <link href="/posts/f9bdc106.html"/>
      <url>/posts/f9bdc106.html</url>
      
        <content type="html"><![CDATA[<p>路径记忆，就是shell运行时，read前，先获取上次的路径。</p><p>我的方法很简单，就是将shell名和路径名保存到家目录隐藏文件中。（以shell名做基数）</p><p>原来写shell也没注意多，都是随写随用，而且shell都是自己负责，按照自己模式管理的。</p><p>前段时间又写了个路径记忆，发现冲突了？？？后来发现。。。呵呵呵，原来是shell名没改只是换了个目录，导致了历史路径。</p><p>这里我想了两个解决方法：</p><p>第一种：在家目录创建隐藏文件中保存：shell路径和需要记忆的路径</p><p>第二种：在shell脚本所在目录，创建隐藏文件，保存shell名和需要记忆路径</p><p>=&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>在获取路径时，请看下我做的测试，有助于获取路径：</p><p>注意事项：（官方这4个命令定义不够严谨，请看分析结果！）</p><ul><li>$0:获取当前shell名称</li><li>pwd：获取当前路径</li><li>dirname：获取路径目录</li><li>readlink：获取真实路径</li></ul><p>例：</p><p>&#x2F;opt&#x2F;shell下编辑脚名为test.sh，并创建软连接到&#x2F;root下命名为ltest.sh。</p><p>脚本内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo $0</span><br><span class="line">pwd</span><br><span class="line">dirname $0</span><br><span class="line">readlink -f $0</span><br><span class="line">dirname `readlink -f $0`</span><br></pre></td></tr></table></figure><p>在&#x2F;opt&#x2F;shell下执行test.sh</p><p>在&#x2F;opt&#x2F;shell下执行【带绝对路径】test.sh</p><p>在&#x2F;root下执行软连接ltest.sh</p><p>在&#x2F;root下执行【带绝对路径】软连接ltest.sh</p><p>4种执行结果如下：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-11.png"></p><p>4次执行，其实执行的都是&#x2F;opt&#x2F;shell&#x2F;test.sh</p><p>从执行结果分析：</p><ul><li>$0:获取shell执行时的路径+shell名！<ul><li>shell执行没有路径，$0&#x3D;空路径+shell名&#x3D;shell名</li><li>shell执行带有路径，$0&#x3D;带的路径+shell名&#x3D;路径&#x2F;shell名</li></ul></li><li>dirname：获取shell执行时的目录！<ul><li>shell执行没有路径，dirname&#x3D;空（.当前目录）</li><li>shell执行带有路径，dirname&#x3D;带的路径</li></ul></li><li>pwd:获取当前路径！</li><li>readlink：因为加了-f 参数，只会寻找最终路径，所以readlink没有改变</li></ul><p>总结：</p><p>获取路径还是要依赖readlink -f，获取绝对路径后，再dirname获取目录、获取shell名！</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> $0 </tag>
            
            <tag> dirname </tag>
            
            <tag> pwd </tag>
            
            <tag> readlink </tag>
            
            <tag> shell路径记忆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本-nginx日志分割备份</title>
      <link href="/posts/3b835008.html"/>
      <url>/posts/3b835008.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-7.png"></p><p>脚本如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">#专用access分割日志</span><br><span class="line">echo &quot;为 nginx 的access按天分割备份脚本！&quot;</span><br><span class="line">echo &quot;一次性分割所有日期日志，支持、年、月、日定时！&quot;</span><br><span class="line">echo &quot;未做路径判断！未做路径记忆！&quot;</span><br><span class="line">echo &quot;read交互不便时，请自行赋值&quot;</span><br><span class="line">#access日志路径</span><br><span class="line">read -p &quot;请输入access所在路径（绝对路径）：&quot; LOG</span><br><span class="line">#LOG=/home/NGO/nginx-1.20/log/access.log</span><br><span class="line"></span><br><span class="line">#输出目录</span><br><span class="line">read -p &quot;请输入分割后文件导出目录（绝对路径）：&quot; OUTDIR</span><br><span class="line">#OUTDIR=/home/NGO/BAK/access</span><br><span class="line"></span><br><span class="line">#Nginx程序所在路径!!!请核实路径</span><br><span class="line">echo &quot;需要nginx -s reopen 重新生成access日志使用&quot;</span><br><span class="line">read -p &quot;请输入nginx程序所在路径（绝对路径）：&quot; NGINXPATH</span><br><span class="line">#NGINXPATH=&quot;/home/NGO/nginx-1.20/sbin/nginx&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#######################   日期在第4列  （则无需修改） #######################</span><br><span class="line">#10.96.20.252 - - [20/Nov/2021:00:01:41 +0800] &quot;POST /ClientUpgrade/clientmgt/B</span><br><span class="line">#日期所在列数（以空格分割，第4列就写$4,请注意是单引号）</span><br><span class="line">DATEF=&#x27;$4&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">######以下无需修改</span><br><span class="line">echo &quot;请等待，正则进行日志分割……&quot;</span><br><span class="line"></span><br><span class="line">#原有log移动到LOGPATH</span><br><span class="line">LOGPATH=/tmp/tmplog</span><br><span class="line">mv $LOG $LOGPATH</span><br><span class="line">#移动完成，重新生成日志文件</span><br><span class="line">$NGINXPATH -s reopen</span><br><span class="line"></span><br><span class="line">#获取日志名称</span><br><span class="line">FILENAME=`echo $LOGPATHawk -F &quot;/&quot; &#x27;&#123;print $NF&#125;&#x27;`</span><br><span class="line">#log分离</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#当前时间</span><br><span class="line">NOWDATE=`date +%F_%T`</span><br><span class="line">#获取日志中的日期，临时存放</span><br><span class="line">TMPDATE=/tmp/tmpdate</span><br><span class="line">#日期所在第4列（以空格分割）</span><br><span class="line">cat $LOGPATH  grep &quot;^[0-9]&quot; awk &#x27;&#123;print &#x27;$DATEF&#x27;&#125;&#x27;awk -F &quot;[&quot; &#x27;&#123;print $2&#125;&#x27;awk -F &quot;:&quot; &#x27;&#123;print $1&#125;&#x27;sort -u &gt;  $TMPDATE</span><br><span class="line">#分割线</span><br><span class="line">LINE=&#x27;-&#x27;</span><br><span class="line">#创建输出目录</span><br><span class="line">mkdir -p $OUTDIR</span><br><span class="line">#获取日志名称</span><br><span class="line">FILENAME=`echo $LOGawk -F &quot;/&quot; &#x27;&#123;print $NF&#125;&#x27;`</span><br><span class="line">#for循环分割</span><br><span class="line">for i in `cat $TMPDATE`</span><br><span class="line">do</span><br><span class="line">cd $OUTDIR</span><br><span class="line">echo &quot;正在分割 $i&quot;</span><br><span class="line">#删除日期中&#x27;/&#x27;</span><br><span class="line">echo $ised &#x27;s#/##g&#x27; &gt; /tmp/DMY</span><br><span class="line">DDATE=`cat /tmp/DMY`</span><br><span class="line"></span><br><span class="line">#分割</span><br><span class="line">cat $LOGPATH grep &quot;$i&quot; &gt; $FILENAME$LINE$DDATE</span><br><span class="line">#tar打包压缩</span><br><span class="line">TAREX=.tar.gz</span><br><span class="line"></span><br><span class="line">tar -zcf $FILENAME$LINE$DDATE$TAREX  $FILENAME$LINE$DDATE</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line">echo &quot;分割完成：输出目录：$OUTDIR&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> nginx日志分割备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sed 过滤指定时间段日志</title>
      <link href="/posts/7f6bfd9c.html"/>
      <url>/posts/7f6bfd9c.html</url>
      
        <content type="html"><![CDATA[<p>sed 过滤日志：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n &#x27;/开始日期/,/结束日期/p&#x27;</span><br></pre></td></tr></table></figure><p>贴个日志做参考：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">51.222.253.12 - - [08/Jan/2022:02:53:30 +0800] &quot;GET /robots.txt HTTP/1.1&quot; 301 169 &quot;-&quot; &quot;Mozilla/5.0 (compatible; AhrefsBot/7.0; +http://ahrefs.com/robot/)&quot; &quot;-&quot;</span><br><span class="line">51.222.253.12 - - [08/Jan/2022:02:53:31 +0800] &quot;GET /robots.txt HTTP/1.1&quot; 404 153 &quot;-&quot; &quot;Mozilla/5.0 (compatible; AhrefsBot/7.0; +http://ahrefs.com/robot/)&quot; &quot;-&quot;</span><br><span class="line">51.222.253.16 - - [08/Jan/2022:02:53:33 +0800] &quot;GET / HTTP/1.1&quot; 301 169 &quot;-&quot; &quot;Mozilla/5.0 (compatible; AhrefsBot/7.0; +http://ahrefs.com/robot/)&quot; &quot;-&quot;</span><br><span class="line">54.36.148.148 - - [08/Jan/2022:02:57:02 +0800] &quot;GET / HTTP/1.1&quot; 302 35 &quot;-&quot; &quot;Mozilla/5.0 (compatible; AhrefsBot/7.0; +http://ahrefs.com/robot/)&quot; &quot;-&quot;</span><br></pre></td></tr></table></figure><p>注意事项：</p><p>1.转义，当变量中日期需求转义，直接赋值无效</p><p>错误范例：STARTDAY&#x3D;`echo $STARTsed ‘s#&#x2F;#\\&#x2F;#g’`</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">START=&quot;08/Jan/2022&quot;</span><br><span class="line">END=&quot;08/Jan/2022&quot;</span><br><span class="line">#我是方法是导出到文件，再赋值</span><br><span class="line">echo $STARTsed &#x27;s#/#\\/#g&#x27; &gt; /tmp/name</span><br><span class="line">STARTDAY=`cat /tmp/name`</span><br><span class="line">echo $END  sed &#x27;s#/#\\/#g&#x27; &gt; /tmp/name</span><br><span class="line">ENDDAY=`cat /tmp/name`</span><br></pre></td></tr></table></figure><p>2.sed引用变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#第一种：单引号变双引号</span><br><span class="line">sed -n &quot;/$START/,/$END/p&quot;</span><br><span class="line">#第二种：将变量使用单引号包含双引号</span><br><span class="line">sed -n &#x27;/&#x27;&quot;$START&quot;&#x27;/,/$END/p&#x27;</span><br></pre></td></tr></table></figure><p>3.sed 过滤日期，如果精确到时、分、秒！所以过滤时分时请再三确认！！！</p><p>开始日期日志中没有，则否则过滤失败！！！</p><p>结束日期日志中没有，则直接过滤到日志最后！！！</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志过滤 </tag>
            
            <tag> sed过滤日期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx 响应码解析</title>
      <link href="/posts/a8d0c1f.html"/>
      <url>/posts/a8d0c1f.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">200 （成功） 服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。 </span><br><span class="line">201 （已创建） 请求成功并且服务器创建了新的资源。 </span><br><span class="line">202 （已接受） 服务器已接受请求，但尚未处理。 </span><br><span class="line">203 （非授权信息） 服务器已成功处理了请求，但返回的信息可能来自另一来源。 </span><br><span class="line">204 （无内容） 服务器成功处理了请求，但没有返回任何内容。 </span><br><span class="line">205 （重置内容） 服务器成功处理了请求，但没有返回任何内容。</span><br><span class="line">206 （部分内容） 服务器成功处理了部分 GET 请求。 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">300 （多种选择） 针对请求，服务器可执行多种操作。 服务器可根据请求者 (user agent) 选择一项操作，或提供操作列表供请求者选择。 </span><br><span class="line">301 （永久移动） 请求的网页已永久移动到新位置。 服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。</span><br><span class="line">302 （临时移动） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</span><br><span class="line">303 （查看其他位置） 请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码。</span><br><span class="line">304 （未修改） 自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。 </span><br><span class="line">305 （使用代理） 请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理。 </span><br><span class="line">307 （临时重定向） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">400 （错误请求） 服务器不理解请求的语法。 </span><br><span class="line">401 （未授权） 请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。 </span><br><span class="line">403 （禁止） 服务器拒绝请求。</span><br><span class="line">404 （未找到） 服务器找不到请求的网页。</span><br><span class="line">405 （方法禁用） 禁用请求中指定的方法。 </span><br><span class="line">406 （不接受） 无法使用请求的内容特性响应请求的网页。 </span><br><span class="line">407 （需要代理授权） 此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。</span><br><span class="line">408 （请求超时） 服务器等候请求时发生超时。 </span><br><span class="line">409 （冲突） 服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。 </span><br><span class="line">410 （已删除） 如果请求的资源已永久删除，服务器就会返回此响应。 </span><br><span class="line">411 （需要有效长度） 服务器不接受不含有效内容长度标头字段的请求。 </span><br><span class="line">412 （未满足前提条件） 服务器未满足请求者在请求中设置的其中一个前提条件。 </span><br><span class="line">413 （请求实体过大） 服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。 </span><br><span class="line">414 （请求的 URI 过长） 请求的 URI（通常为网址）过长，服务器无法处理。 </span><br><span class="line">415 （不支持的媒体类型） 请求的格式不受请求页面的支持。 </span><br><span class="line">416 （请求范围不符合要求） 如果页面无法提供请求的范围，则服务器会返回此状态代码。 </span><br><span class="line">417 （未满足期望值） 服务器未满足&quot;期望&quot;请求标头字段的要求。 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">500 （服务器内部错误） 服务器遇到错误，无法完成请求。 </span><br><span class="line">501 （尚未实施） 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。 </span><br><span class="line">502 （错误网关） 服务器作为网关或代理，从上游服务器收到无效响应。 </span><br><span class="line">503 （服务不可用） 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。 </span><br><span class="line">504 （网关超时） 服务器作为网关或代理，但是没有及时从上游服务器收到请求。 </span><br><span class="line">505 （HTTP 版本不受支持） 服务器不支持请求中所用的 HTTP 协议版本。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> nginx响应码 </tag>
            
            <tag> nignx返回码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本，利用for循环轮训IP</title>
      <link href="/posts/51975957.html"/>
      <url>/posts/51975957.html</url>
      
        <content type="html"><![CDATA[<p>当有N台服务器，需要互相登录或者scp（sftp）、ssh 一些操作，可以利用for循环对ip文件，进行逐行ip操作。</p><p>注：<strong>后期完善问题!如果需要文件路径变量或者是脚本路径变量，可直接到.bash_profile中，利用if判断对文件为位置或其他变量进行变更！！！</strong></p><p>下面以秘钥进行轮训操作：</p><p>ssh-copy-id</p><p>流程：</p><ul><li>生产秘钥对</li><li>脚本推送公钥</li></ul><p>第一步，生成秘钥对</p><p>百度，或者我前面的文章</p><p>ssh-keygen -t rsa</p><p>第二步，IP地址文件：ip.txt</p><p>注：担心密码泄露可以使用gpg进行加密！！！脚本自行解密，执行完脚本再执行删除操作！！！（gpg加密特性，加密用户可直接解密，其他用户解密需输入密码）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#演示文件</span><br><span class="line">#IP地址         用户名     密码</span><br><span class="line">192.168.68.137  root      123456789</span><br><span class="line">192.168.1.102   test2     123456</span><br><span class="line">192.168.1.103   test3     123456</span><br><span class="line">#192.168.1.104  test4     123456</span><br></pre></td></tr></table></figure><p>第三步，脚本</p><p>注：传送秘钥依然要输入密码，文本添加密码是方便你复制粘贴</p><p>注：脚本会自动过滤ip.txt中#开头的行,如果不想传输某个ip可以#直接注释！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">read -p &quot;输入IP文件路径：&quot; IPFILE</span><br><span class="line">LOGPATH=~/rsa.log</span><br><span class="line">echo &quot;$IPFILE&quot;</span><br><span class="line">#统计ip.txt行数</span><br><span class="line">IPSUM=`cat $IPFILE wc -l`</span><br><span class="line">IPSUM1=`cat $IPFILEgrep -v &quot;^#&quot;wc -l`</span><br><span class="line">echo &quot;共计IP个数为：$IPSUM1 &quot;</span><br><span class="line">LINE=@</span><br><span class="line">for i in `seq  $IPSUM`</span><br><span class="line">do</span><br><span class="line">sed -n &quot;$i&quot;p $IPFILE grep &quot;^#&quot; &gt;/dev/null</span><br><span class="line">if [ ! $? -eq 0 ];then</span><br><span class="line">IPADD=`sed -n $&#123;i&#125;p $IPFILE awk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">IPUSER=`sed -n $&#123;i&#125;p $IPFILE awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">IPPWD=`sed -n $&#123;i&#125;p $IPFILE awk &#x27;&#123;print $3&#125;&#x27;`</span><br><span class="line"></span><br><span class="line">echo -e &quot;\e[33m 主机地址：$IPADD     主机用户名：$IPUSER      主机密码：$IPPWD \e[0m&quot;</span><br><span class="line">#查看主机是否存活</span><br><span class="line">ping -c 1 $IPADD &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">  if [ $? -eq 0  ];then</span><br><span class="line">#存活传送秘钥</span><br><span class="line">  ssh-copy-id -i /root/.ssh/id_rsa.pub $IPUSER$LINE$IPADD</span><br><span class="line">        if [ $? -eq 0 ];then</span><br><span class="line">        echo &quot;秘钥传送成功！&quot;</span><br><span class="line">        echo &quot;!!!秘钥传送成功：$IPADD&quot; &gt;&gt; $LOGPATH</span><br><span class="line">        else</span><br><span class="line">        echo &quot;秘钥传送失败！&quot;</span><br><span class="line">        echo &quot;秘钥传送失败：$IPADD&quot; &gt;&gt; $LOGPATH</span><br><span class="line">        fi</span><br><span class="line">  else</span><br><span class="line">  echo &quot;主机未存活：$IPADD&quot;</span><br><span class="line">  echo &quot;主机未存活：$IPADD&quot;  &gt;&gt; $LOGPATH</span><br><span class="line">  fi</span><br><span class="line">echo &quot;------------------------------------------------------------------------------------&quot;</span><br><span class="line">fi</span><br><span class="line">let i++</span><br><span class="line">done</span><br><span class="line">echo -e &quot;\e[33m 日志路径：$LOGPATH \e[0m&quot;</span><br></pre></td></tr></table></figure><p>图例有错误，后面的“主机用户”实际是“主机密码”，懒得截图了。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-6.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 批量传送秘钥 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAC平台 git可视化工具</title>
      <link href="/posts/ed5fffc4.html"/>
      <url>/posts/ed5fffc4.html</url>
      
        <content type="html"><![CDATA[<p>推荐2款自用的git可视化工具，最近没有上传脚本，忘记</p><ul><li>Sublime Mergt</li><li>Sourcetree</li></ul><h2 id="Sublime-Mergt"><a href="#Sublime-Mergt" class="headerlink" title="Sublime Mergt"></a>Sublime Mergt</h2><p>Sublime Merge for mac下载地址：<a href="https://xclient.info/s/sublime-merge.html">https://xclient.info/s/sublime-merge.html</a></p><p>Sublime不陌生吧，Sublime text文件编辑工具支持多种语法，很犀利，mac平台必备！</p><p>Sublime Merge工具很强大，可以实现推送、拉库，最最最喜欢的是直接编辑（需要安装Sublime text）编辑后保存，注释推送，就ok了。</p><p>Sublime Merge 汉化问题：网上找了下没找到相关的插件，看到有个博主写到在github有汉化，不是很全面，能满足日常。</p><p>github地址：（<a href="https://github.com/sublime-china/sublime-merge-chinese%EF%BC%89%E9%A1%B9%E7%9B%AE%E4%BD%9C%E8%80%85%E5%B7%B2%E7%BB%8F%E6%9C%89%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E%E3%80%82">https://github.com/sublime-china/sublime-merge-chinese）项目作者已经有使用说明。</a></p><p>我这里做个图解：</p><p>1.打开安装的Sublime Merge.app–&gt;左上角–&gt;Preferences(偏好)–&gt;Browse Packages(浏览插件包)</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image.png"></p><p>2.在弹出的目录中，新建目录命名为：Default</p><p>然后下载的汉化包解压，放入Default目录即可</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-1.png"></p><p>#懒人也可以直接打开全路径，放入解压的汉化文件。（全路径：&#x2F;Users&#x2F;你的用户名&#x2F;Library&#x2F;Application Support&#x2F;Sublime Merge&#x2F;Packages&#x2F;Default）</p><p>3.放置完汉化补丁，退出再重新登录，可以happy了。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-2.png"></p><h2 id="Sourcetree"><a href="#Sourcetree" class="headerlink" title="Sourcetree"></a>Sourcetree</h2><p>Sourcetree是我最早用github时候用的，支持github账号很方便，主要还是国内动不动就解析不了github，干脆直连gitee使用了。</p><p>支持中文，使用很简单，百度一下就OK，直连就gitee选择“从url克隆”，主要还是图形化操作，比命令行方便很多，仓库文件更新，就点下推送就OK，比敲命令效率高了很多。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-3.png"></p>]]></content>
      
      
      <categories>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> git可视化工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell 获取log中指定日期的日志并做导出</title>
      <link href="/posts/2fed36f1.html"/>
      <url>/posts/2fed36f1.html</url>
      
        <content type="html"><![CDATA[<p>先穿插一下日期的类型！！！</p><p>时间方面：<br>% : 印出 %<br>%n : 下一行<br>%t : 跳格<br>%H : 小时(00..23)<br>%I : 小时(01..12)<br>%k : 小时(0..23)<br>%l : 小时(1..12)<br>%M : 分钟(00..59)<br>%p : 显示本地 AM 或 PM<br>%r : 直接显示时间 (12 小时制，格式为 hh:mm:ss [AP]M)<br>%s : 从 1970 年 1 月 1 日 00:00:00 UTC 到目前为止的秒数<br>%S : 秒(00..61)<br>%T : 直接显示时间 (24 小时制)<br>%X : 相当于 %H:%M:%S<br>%Z : 显示时区<br>日期方面：<br>%a : 星期几 (Sun..Sat)<br>%A : 星期几 (Sunday..Saturday)<br>%b : 月份 (Jan..Dec)<br>%B : 月份 (January..December)<br>%c : 直接显示日期与时间<br>%d : 日 (01..31)<br>%D : 直接显示日期 (mm&#x2F;dd&#x2F;yy)<br>%F : 直接显示日期 (YYYY-mm-dd)<br>%T : 直接显示时间 (hh:mm:ss)<br>%h : 同 %b<br>%j : 一年中的第几天 (001..366)<br>%m : 月份 (01..12)<br>%U : 一年中的第几周 (00..53) (以 Sunday 为一周的第一天的情形)<br>%w : 一周中的第几天 (0..6)<br>%W : 一年中的第几周 (00..53) (以 Monday 为一周的第一天的情形)<br>%x : 直接显示日期 (mm&#x2F;dd&#x2F;yy)<br>%y : 年份的最后两位数字 (00.99)<br>%Y : 完整年份 (0000..9999)</p><p>思路：</p><p>简单将就是grep指定之日期，日期做for循环。</p><p>遇到问题：</p><p>1.日期天数问题，可以以当前日期为基数,date -d</p><p>2.日期格式问题，date +%加日志中日期格式进行定义</p><p>（如：2022-01-01再或者01&#x2F;Jan&#x2F;2022或Jan 01, 2022）</p><p>3.日志中日期月份，英文替换为数字，sed 替换（暂时没有想到更换的解决方法！如果有for或while更好的方法请留言，谢谢）</p><h2 id="第一种情况：日志时间格式单一，使用替换（日志较小时，可以使用！）"><a href="#第一种情况：日志时间格式单一，使用替换（日志较小时，可以使用！）" class="headerlink" title="第一种情况：日志时间格式单一，使用替换（日志较小时，可以使用！）"></a>第一种情况：日志时间格式单一，使用替换（日志较小时，可以使用！）</h2><p>cat &#x2F;var&#x2F;log&#x2F;test.log</p><p>#临时范例<br>182.119.250.244 - [31&#x2F;Jan&#x2F;2021:01:27:50 +0800] “POST 01.php 182.119.250.244 - [31&#x2F;Feb&#x2F;2021:02:27:50 +0800] “POST 02.php 182.119.250.244 - [31&#x2F;Mar&#x2F;2021:03:27:50 +0800] “POST 03.php 182.119.250.244 - [31&#x2F;Apr&#x2F;2021:04:27:50 +0800] “POST 04.php 182.119.250.244 - [31&#x2F;May&#x2F;2021:21:27:50 +0800] “POST 05.php 182.119.250.244 - [31&#x2F;Jun&#x2F;2021:21:27:50 +0800] “POST 06.php 182.119.250.244 - [31&#x2F;Jul&#x2F;2021:21:27:50 +0800] “POST 07.php 182.119.250.244 - [31&#x2F;Aug&#x2F;2021:21:27:50 +0800] “POST 08.php 182.119.250.244 - [31&#x2F;Sept&#x2F;2021:21:27:50 +0800] “POST 09.php 182.119.250.244 - [31&#x2F;Oct&#x2F;2021:21:27:50 +0800] “POST 10.php 182.119.250.244 - [31&#x2F;Nov&#x2F;2021:21:27:50 +0800] “POST 11.php 182.119.250.244 - [25&#x2F;Dec&#x2F;2021:21:27:29 +0800] “POST 12.php 182.119.250.244 - [30&#x2F;Dec&#x2F;2021:21:27:30 +0800] “POST 12.php 182.119.250.244 - [30&#x2F;Dec&#x2F;2021:21:27:55 +0800] “POST 12.php 182.119.250.244 - [31&#x2F;Dec&#x2F;2021:21:27:31 +0800] “POST 12.php</p><p>shell脚本如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo -e &quot;\e[33m 此脚本为获取log文件中，指定天数内的日志，并做导出 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[33m 查询1天内，就是当天！  查询2两天内，就是昨天和今天！\e[0m&quot;</span><br><span class="line">echo -e &quot;\e[33m 默认导出到家目录~/out/源文件名！\e[0m&quot;</span><br><span class="line">read -p &quot;输入查询文件路径：&quot; FILENAME</span><br><span class="line">read -p &quot;输入查询天数：&quot; DAYS</span><br><span class="line"></span><br><span class="line">#获取文件名</span><br><span class="line">OUTFILE=`echo &quot;$FILENAME&quot;awk -F &#x27;/&#x27; &#x27;&#123;print $NF&#125;&#x27;`</span><br><span class="line">echo &quot;$OUTFILE&quot;</span><br><span class="line">#创建导出目录</span><br><span class="line">OUTDIR=~/out</span><br><span class="line">mkdir -p $OUTDIR</span><br><span class="line">OUTFILEPATH=$OUTDIR/$OUTFILE`date +%F_%T`</span><br><span class="line">echo  &gt; $OUTFILEPATH</span><br><span class="line">#英文月份替换为数字</span><br><span class="line">cat $FILENAME    sed &#x27;s/\/Jan/\/01/g&#x27;sed &#x27;s/\/Feb/\/02/g&#x27;sed &#x27;s/\/Mar/\/03/g&#x27; &gt;/tmp/tmp1.log</span><br><span class="line">cat /tmp/tmp1.logsed &#x27;s/\/Apr/\/04/g&#x27;sed &#x27;s/\/May/\/05/g&#x27;sed &#x27;s/\/Jun/\/06/g&#x27; &gt;/tmp/tmp2.log</span><br><span class="line">cat /tmp/tmp2.logsed &#x27;s/\/Jul/\/07/g&#x27;sed &#x27;s/\/Aug/\/08/g&#x27;sed &#x27;s/\/Sept/\/09/g&#x27; &gt;/tmp/tmp3.log</span><br><span class="line">cat /tmp/tmp3.logsed &#x27;s/\/Oct/\/10/g&#x27;sed &#x27;s/\/Nov/\/11/g&#x27;sed &#x27;s/\/Dec/\/12/g&#x27; &gt;/tmp/tmp4.log</span><br><span class="line"></span><br><span class="line">DAY=`echo &quot;$DAYS-1&quot;bc`</span><br><span class="line">for i in `seq 0 $DAY`</span><br><span class="line">do</span><br><span class="line">#日期类型，根据自己脚本进行格式转换</span><br><span class="line">HISDATE=`date -d &quot;-&quot;$i&quot; day&quot; +%d/%m/%Y`</span><br><span class="line">cat /tmp/tmp4.log grep &quot;$HISDATE&quot;</span><br><span class="line">if [ $? -eq 0 ] ;then</span><br><span class="line">echo &quot;---------------------------------------------------------------------------&quot;</span><br><span class="line">cat /tmp/tmp4.log grep &quot;$HISDATE&quot;  &gt;&gt; $OUTFILEPATH</span><br><span class="line">echo &quot;---------------------------------------------------------------------------&quot; &gt;&gt;$OUTFILEPATH</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">echo -e &quot;\e[33m 查询结果导出路径:$OUTFILEPATH \e[0m&quot;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-62.png"></p><p>———————————————————————————————————————————</p><h2 id="第二种，日志中出现多种日期格式"><a href="#第二种，日志中出现多种日期格式" class="headerlink" title="第二种，日志中出现多种日期格式"></a>第二种，日志中出现多种日期格式</h2><p>可能是有应用日志或者容器出现多种日期格式的混合日志</p><p>注：日志中是英文，所有要确定我的系统环境是英文！！！</p><ul><li>查看语言环境：locale</li><li>配置语言环境：vi &#x2F;etc&#x2F;locale.conf</li><li>临时语言环境：LANG&#x3D;”en_US.UTF8”</li></ul><p>#临时范例，3种时间格式</p><p>182.119.250.244 - [29&#x2F;Dec&#x2F;2021:21:27:30 +0800] “POST 12.php<br>182.119.250.244 - [30&#x2F;Dec&#x2F;2021:21:27:55 +0800] “POST 12.php<br>182.119.250.244 - [31&#x2F;Dec&#x2F;2021:21:27:31 +0800] “POST 12.php<br>182.119.250.244 - [Jan 01, 2022 21:27:31 +0800] “POST 12.php<br>182.119.250.244 - [02&#x2F;Jan&#x2F;2022 21:27:31 +0800] “POST 12.php<br>182.119.250.244 - [2022-01-03 21:27:31 +0800] “POST 12.php</p><p>shell 脚本如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo -e &quot;\e[33m 此脚本为获取log文件中，指定天数内的日志，并做导出 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[33m 查询1天内，就是当天！  查询2两天内，就是昨天和今天！\e[0m&quot;</span><br><span class="line">echo -e &quot;\e[33m 默认导出到家目录~/out/源文件名！\e[0m&quot;</span><br><span class="line">read -p &quot;输入查询文件路径：&quot; FILENAME</span><br><span class="line">read -p &quot;输入查询天数：&quot; DAYS</span><br><span class="line"></span><br><span class="line">#获取文件名</span><br><span class="line">OUTFILE=`echo &quot;$FILENAME&quot;awk -F &#x27;/&#x27; &#x27;&#123;print $NF&#125;&#x27;`</span><br><span class="line">echo &quot;$OUTFILE&quot;</span><br><span class="line">#创建导出目录</span><br><span class="line">OUTDIR=~/out</span><br><span class="line">mkdir -p $OUTDIR</span><br><span class="line">DATE=`date +%F_%T`</span><br><span class="line">LINE=_</span><br><span class="line">EX=.txt</span><br><span class="line"></span><br><span class="line">OUTFILEPATH=$OUTDIR/$OUTFILE$LINE$DATE$EX</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DAY=`echo &quot;$DAYS-1&quot;bc`</span><br><span class="line">for i in `seq 0 $DAY`</span><br><span class="line">do</span><br><span class="line">#日期类型，根据自己脚本进行格式转换</span><br><span class="line">#第一种日期格式（年-月-日）：2022-01-01</span><br><span class="line">DATEformat1=`date -d &quot;-&quot;$i&quot; day&quot; +%F`</span><br><span class="line">#第二种日期格式（日/月/年）：01/Jan/2022</span><br><span class="line">DATEformat2=`date -d &quot;-&quot;$i&quot; day&quot; +%d/%b/%Y`</span><br><span class="line">#第三种日期格式（月 日, 年）：Jan 01, 2022</span><br><span class="line">DATEformat3=`date -d &quot;-&quot;$i&quot; day&quot; &#x27;+%b %d, %Y&#x27;`</span><br><span class="line"></span><br><span class="line">cat $FILENAME grep  -E &quot;$DATEformat1$DATEformat2$DATEformat3&quot;</span><br><span class="line">if [ $? -eq 0 ] ;then</span><br><span class="line">echo &quot;---------------------------------------------------------------------------&quot;</span><br><span class="line">cat $FILENAME grep  -E &quot;$DATEformat1$DATEformat2$DATEformat3&quot;  &gt;&gt; $OUTFILEPATH</span><br><span class="line">echo &quot;---------------------------------------------------------------------------&quot; &gt;&gt;$OUTFILEPATH</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">echo -e &quot;\e[33m 查询结果导出路径:$OUTFILEPATH \e[0m&quot;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/01/image-5.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> shell </tag>
            
            <tag> log查询 </tag>
            
            <tag> 获取指定日期日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell 获取监听端口</title>
      <link href="/posts/5db673c.html"/>
      <url>/posts/5db673c.html</url>
      
        <content type="html"><![CDATA[<p>哎，今天临时需要获取监听端口，很清晰的记得原来写过，而且so easy！！！纠结半天，一直在思考用tr，呵呵呵，真的是。。。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-56.png"></p><p>讲下思路，免得再忘记，先获取第四列，再从第四列中获取最后一列</p><p>其实就是awk这最后一列就获取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#分隔符 &quot;:&quot;</span><br><span class="line">#其中一行&quot;::1:25&quot;这行，因为我们获取的最后一行，所有:分隔符可以满足！</span><br><span class="line">netstat -ntlp awk &#x27;&#123;print $4&#125;&#x27;awk -F &quot;:&quot; &#x27;&#123;print $NF&#125;&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> 监听端口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell 将日志进行打包备份</title>
      <link href="/posts/c7631fd7.html"/>
      <url>/posts/c7631fd7.html</url>
      
        <content type="html"><![CDATA[<p>今天同事说了个日志打包备份的问题，当时我在思考为什么不find -mtime，但同事给了个脚本范例，意思是已备份文件名要比原文件名长，所以只对文件名长的日志进行打包！这里就牵涉到文件名的字符长度，因为同事的让我看的脚本变量也没看完，只是大概理解了下思路，这里自己写个脚本，记录一下。</p><p>注，临时写的仅进程测试，主要是理解思路!</p><p>[root@bogon ~]# tree &#x2F;var&#x2F;log&#x2F;XXX<br> &#x2F;var&#x2F;log&#x2F;XXX<br> ├── XXX.log<br> ├── XXX.log_bak_2021-12-30_22:35:08<br> ├── XXX.log_2021-12-30_22:35:11<br> ├── XXX.log_bak_2021-12-30<br> ├── XXX.log_backup_2021-12-30_22:35:13<br> └── XXX.log_bak_2021-12-30_22:35:14</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#对/var/log/XXX/下的长备份名，进行打包备份！</span><br><span class="line">BAKPATH=/opt/bak/</span><br><span class="line">BAKNAME=XXX项目</span><br><span class="line">BAKDATE=`date +%F_%T`</span><br><span class="line">BAKEX=.zip</span><br><span class="line">BAKFILE=$BAKPATH$BAKNAME$BAKDATE$BAKEX</span><br><span class="line"></span><br><span class="line">############################################################</span><br><span class="line">#上面4个变量其实可以就是下面一个变量，为了后期扩展，建议使用上面进行拼合！</span><br><span class="line">#BAKFILE=/opt/bak/XXX项目`date +%F_%T`.zip</span><br><span class="line">############################################################</span><br><span class="line">mkdir -p $BAKPATH</span><br><span class="line">LOGNAME=/var/log/XXX/XXX.log*</span><br><span class="line">for N in $LOGNAME</span><br><span class="line">do</span><br><span class="line">LOGLANG=`echo $N wc -L`</span><br><span class="line">        #判断字符长度大于20（/var/log/XXX/XXX.log是20个字符），进行打包</span><br><span class="line">        if [ &quot;$LOGLANG&quot; -gt 20  ] ;then</span><br><span class="line">        echo $N</span><br><span class="line">        zip $BAKFILE $N</span><br><span class="line">        fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>再写个原来的脚本，利用mtime的备份脚本</p><p>注：不管是atime、mtime、ctime都是根据当前执行时间进行对比的（所以使用time相关属性进行备份建议是凌晨执行计划任务！）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#例：备份nginx一周前的日志，打包为zip</span><br><span class="line">find /var/log/nginx -mtime +7 -exec zip /opt/nginxlog.bak`date +%F_%T`.zip &#123;&#125;  \;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mtime备份 </tag>
            
            <tag> 日志备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell  获取最后字符串、去除最后字符串</title>
      <link href="/posts/c6ba9ddc.html"/>
      <url>/posts/c6ba9ddc.html</url>
      
        <content type="html"><![CDATA[<p>获取最后字符串：（注意“:”后有个空格）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#-1代表最后一个，同理，-2代表最后2个</span><br><span class="line">[root@oracle ~]# AAA1=123456</span><br><span class="line">[root@oracle ~]# AAA2=$&#123;AAA1: -1&#125;</span><br><span class="line">[root@oracle ~]# echo $AAA2</span><br><span class="line">6</span><br><span class="line">[root@oracle ~]# AAA3=$&#123;AAA1: -2&#125;</span><br><span class="line">[root@oracle ~]# echo $AAA3</span><br><span class="line">56</span><br></pre></td></tr></table></figure><p>去除最后字符串:（sed 中 .$ 代表最后）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#将最后一个字符替换为空</span><br><span class="line">[root@oracle ~]# AAA=123456</span><br><span class="line">[root@oracle ~]# BBB1=`echo $AAA sed &#x27;s/.$//&#x27;`</span><br><span class="line">[root@oracle ~]# echo $BBB1</span><br><span class="line">12345</span><br><span class="line">#将最后一个字符替换为xyz</span><br><span class="line">[root@oracle ~]# BBB2=`echo $AAA sed &#x27;s/.$/xyz/&#x27;`</span><br><span class="line">[root@oracle ~]# echo $BBB2</span><br><span class="line">12345xyz</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 去除最后字符串 </tag>
            
            <tag> 获取最后字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 图行化安装oracle及静默安装脚本</title>
      <link href="/posts/317ae53f.html"/>
      <url>/posts/317ae53f.html</url>
      
        <content type="html"><![CDATA[<p>oracle12c下载地址：<a href="https://download.oracle.com/otn/linux/oracle12c/122010/linuxx64/_12201/_database.zip">https://download.oracle.com/otn/linux/oracle12c/122010/linuxx64\_12201\_database.zip</a></p><p>oracle11gR2下载地址：</p><p><a href="http://download.oracle.com/otn/linux/oracle11g/R2/linux/_11gR2/_database/_1of2.zip">http://download.oracle.com/otn/linux/oracle11g/R2/linux\_11gR2\_database\_1of2.zip</a></p><p><a href="http://download.oracle.com/otn/linux/oracle11g/R2/linux/_11gR2/_database/_2of2.zip">http://download.oracle.com/otn/linux/oracle11g/R2/linux\_11gR2\_database\_2of2.zip</a></p><p>11g 和 12c 安装没什么区别，看懂图形化安装流程，静默安装就好理解了。</p><p>文章底部付曾经的一键静默安装脚本（固定值较多，方便学习）</p><p>懒人可以使用我gitee库的一键脚本：</p><p>bash &lt;(curl <a href="https://gitee.com/ffing/onekey/raw/master/onekey.sh">https://gitee.com/ffing/onekey/raw/master/onekey.sh</a>)</p><p>只需上传官方zip安装包，即可实现自动安装！</p><p>支持自定义用户名、安装路径、数据库名、sid！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-55.png"></p><p>环境：</p><ul><li>centos7.6</li><li>java8</li><li>oracle12c</li></ul><p>流程：</p><ul><li>安装gnome（图形化）</li><li>安装java</li><li>创建oracle用户组、安装目录、环境变量</li><li>安装oracle</li><li>测试</li><li>其他</li></ul><h2 id="第一步，安装gnome（已有图形化的跳过）"><a href="#第一步，安装gnome（已有图形化的跳过）" class="headerlink" title="第一步，安装gnome（已有图形化的跳过）"></a>第一步，安装gnome（已有图形化的跳过）</h2><p>安装gnome桌面组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y groupinstall &quot;gnome desktop&quot;</span><br></pre></td></tr></table></figure><p>普通用户启动图形化桌面，需要在&#x2F;var&#x2F;run&#x2F;console&#x2F;下创建用户名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#检查/var/run/console.lock包含的用户名，而且/var/run/console/&lt;user&gt;要存在。在进行认证时pam_console比较用户名是否同console.lock内容一致，如果不符，认证失败。/var/run/console/&lt;user&gt;用来记录用户登录的次数，用户注销后console.lock就可以删除。</span><br><span class="line">#登录oracle用户，所以需创建（如果需要经常性登录，可以添加到开机脚本中）</span><br><span class="line">touch /var/run/console/oracle</span><br></pre></td></tr></table></figure><h2 id="第二步，安装java"><a href="#第二步，安装java" class="headerlink" title="第二步，安装java"></a>第二步，安装java</h2><p>懒人使用我的脚本：bash &lt;(curl <a href="https://gitee.com/ffing/onekey/raw/master/onekey.sh">https://gitee.com/ffing/onekey/raw/master/onekey.sh</a>)</p><p>也可以看我前面的教程：<a href="https://blog.ffing.cn/linux/centos-%e5%ae%89%e8%a3%85java">centos-安装java</a></p><h2 id="第三步，创建oracle用户组、安装目录、环境变量"><a href="#第三步，创建oracle用户组、安装目录、环境变量" class="headerlink" title="第三步，创建oracle用户组、安装目录、环境变量"></a>第三步，创建oracle用户组、安装目录、环境变量</h2><p>创建oracle用户、组(oracle安装需基于oracle用户)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#创建oinstall组</span><br><span class="line">groupadd oinstall</span><br><span class="line">#创建dba组</span><br><span class="line">groupadd dba</span><br><span class="line">#创建oper组</span><br><span class="line">groupadd oper</span><br><span class="line">#创建oracle用户</span><br><span class="line">useradd -g oinstall -G dba,oper oracle</span><br><span class="line">#设置oracle用户密码为oracle</span><br><span class="line">echo &quot;oracle&quot;  passwd --stdin oracle</span><br></pre></td></tr></table></figure><p>创建oracle安装目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#创建oracle安装目录</span><br><span class="line">mkdir /usr/local/oracle</span><br><span class="line">#授权oracle用户及oinstall组</span><br><span class="line">chown -R oracle:oinstall /usr/local/oracle</span><br><span class="line">#创建oraInventory目录</span><br><span class="line">mkdir /home/oracle/oraInventory</span><br><span class="line">#授权</span><br><span class="line">chown -R oracle:oinstall /home/oracle/oraInventory</span><br></pre></td></tr></table></figure><p>配置oracle用户环境：vi &#x2F;home&#x2F;oracle&#x2F;.bash_profile</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#以下内容追加到最后</span><br><span class="line">ORACLE_HOSTNAME=oracle</span><br><span class="line">#安装路径</span><br><span class="line">ORACLE_BASE=/usr/local/oracle</span><br><span class="line">#数据库路径</span><br><span class="line">ORACLE_HOME=/usr/local/oracle/12.2.0/db_1</span><br><span class="line">#实例id</span><br><span class="line">ORACLE_SID=orcl</span><br><span class="line">#字符集</span><br><span class="line">LANG=zh_CN.UTF-8</span><br><span class="line">NLS_LANG=&#x27;SIMPLIFIED CHINESE_CHINA.AL32UTF8&#x27;</span><br><span class="line">#path路径</span><br><span class="line">PATH=$PATH:/usr/local/oracle/12.2.0/db_1/bin</span><br><span class="line">export PATH ORACLE_HOSTNAME ORACLE_BASE ORACLE_HOME ORACLE_SID LANG NLS_LANG</span><br></pre></td></tr></table></figure><p>配置全局环境：vi &#x2F;etc&#x2F;profile</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#以下内容追加到最后</span><br><span class="line">#ulimit控制shell资源</span><br><span class="line">#-p &lt;缓冲区大小&gt;  指定管道缓冲区的大小，单位512字节。</span><br><span class="line">#-u &lt;程序数目&gt; 　 用户最多可开启的程序数目。</span><br><span class="line">#-n &lt;文件数目&gt; 　 指定同一时间最多可开启的文件数。</span><br><span class="line">umask 022</span><br><span class="line">if [ $USER = &quot;oracle&quot; ]</span><br><span class="line">then</span><br><span class="line">if [ $SHELL = &quot;/bin/ksh&quot; ]</span><br><span class="line"> then</span><br><span class="line">   ulimit -p 16384</span><br><span class="line">   ulimit -p 65536</span><br><span class="line">else</span><br><span class="line"> ulimit -u 16384 -n 65536</span><br><span class="line">fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>环境生效：source &#x2F;etc&#x2F;profile</p><p>oracle用户设置限制，提高软件运行性能：vi &#x2F;etc&#x2F;security&#x2F;limits.conf（修改完成后，发现未更新，可退出oracle后重新登录用户查看）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#以下内容追加到最后</span><br><span class="line">#limit临时解决问题</span><br><span class="line">#查看全部limit：ulimit -a</span><br><span class="line">#查看当前limit：ulimit -s</span><br><span class="line">#临时设置limit值为102400：ulimit -s 102400</span><br><span class="line">#无限制limit：ulimit -s unlimited</span><br><span class="line">#soft是一个警告值；hard是一个阀值，超过就会报错</span><br><span class="line">#nofile打开的最大的文件描述符数量</span><br><span class="line">#nproc打开的最大的进程数量</span><br><span class="line">oracle soft nproc 2047</span><br><span class="line">oracle hard nproc 16384</span><br><span class="line">oracle soft nofile 1024</span><br><span class="line">oracle hard nofile 65536</span><br><span class="line">oracle soft stack 10240</span><br><span class="line">oracle hard stack 32768</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>oracle认证：vi &#x2F;etc&#x2F;pam.d&#x2F;login</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#pam_limits.so主要是限制用户会话过程中对各种系统资源的使用</span><br><span class="line">session    required     pam_limits.so</span><br></pre></td></tr></table></figure><p>内核参数调整：vi &#x2F;etc&#x2F;sysctl.conf</p><p>注：修改sysctl.conf完成后，使其生效：sysctl -p</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#以下内容追加到最后</span><br><span class="line">#异步IO请求数目 推荐值是：1048576 其实它等于 1024*1024 也就是 1024K 个</span><br><span class="line">fs.aio-max-nr = 1048576</span><br><span class="line">#打开的文件句柄的最大数量,防止文件描述符耗尽的问题</span><br><span class="line">fs.file-max = 6815744</span><br><span class="line">#共享内存8G：8G=8*1024*1024=8388608k/4k=2097152</span><br><span class="line">kernel.shmall = 2097152</span><br><span class="line">#物理内存4G：4G=4*1024*1024*1024=4294967296k-1k=4294967295</span><br><span class="line">kernel.shmmax = 4294967295</span><br><span class="line">#共享内存段的最大数量。shmmni缺省值4096</span><br><span class="line">kernel.shmmni = 4096</span><br><span class="line">kernel.sem = 250 32000 100 128  </span><br><span class="line">#可使用的IPv4端口范围</span><br><span class="line">net.ipv4.ip_local_port_range = 9000 65500</span><br><span class="line">#套接字接收缓冲区大小的缺省值</span><br><span class="line">net.core.rmem_default = 262144</span><br><span class="line">#套接字接收缓冲区大小的最大值</span><br><span class="line">net.core.rmem_max = 4194304</span><br><span class="line">#套接字发送缓冲区大小的缺省值</span><br><span class="line">net.core.wmem_default = 262144</span><br><span class="line">#套接字发送缓冲区大小的最大值</span><br><span class="line">net.core.wmem_max = 1048576</span><br></pre></td></tr></table></figure><p>参数详解：</p><p> fs.aio-max-nr：<br> 此参数限制并发未完成的请求，应该设置避免I&#x2F;O子系统故障。<br> fs.file-max：<br> 该参数决定了系统中所允许的文件句柄最大数目，文件句柄设置代表linux系统中可以打开的文件的数量。<br> kernel.shmall：<br> 该参数控制可以使用的共享内存的总页数。Linux共享内存页大小为4KB,共享内存段的大小都是共享内存页大小的整数倍。一个共享内存段的最大大小是16G，那么需要共享内存页数是16GB&#x2F;4KB&#x3D;16777216KB &#x2F;4KB&#x3D;4194304（页），也就是64Bit系统下16GB物理内存，设置kernel.shmall &#x3D; 4194304才符合要求.<br> kernel.shmmax：<br> 是核心参数中最重要的参数之一，用于定义单个共享内存段的最大值。设置应该足够大，设置的过低可能会导致需要创建多个共享内存段，这样可能导致系统性能的下降。至于导致系统下降的主要原因为在实例启动以及ServerProcess创建的时候，多个小的共享内存段可能会导致当时轻微的系统性能的降低(在启动的时候需要去创建多个虚拟地址段，在进程创建的时候要让进程对多个段进行“识别”，会有一些影响)，但是其他时候都不会有影响。<br> 官方建议值：<br> 32位linux系统：可取最大值为4GB（4294967296bytes）-1byte，即4294967295。建议值为多于内存的一半，所以如果是32为系统，一般可取值为4294967295。<br> 64位linux系统：可取的最大值为物理内存值-1byte，建议值为多于物理内存的一半，例如，如果为12GB物理内存，可取12_1024_1024*1024-1&#x3D;12884901887。<br> kernel.shmmni：<br> 该参数是共享内存段的最大数量。shmmni缺省值4096，一般肯定是够用了。<br> kernel.sem：<br> 以kernel.sem &#x3D; 250 32000 100 128为例：<br>    250是参数semmsl的值，表示一个信号量集合中能够包含的信号量最大数目。<br>    32000是参数semmns的值，表示系统内可允许的信号量最大数目。<br>    100是参数semopm的值，表示单个semopm()调用在一个信号量集合上可以执行的操作数量。<br>    128是参数semmni的值，表示系统信号量集合总数。<br> net.ipv4.ip_local_port_range：<br> 表示应用程序可使用的IPv4端口范围。<br> net.core.rmem_default：<br> 表示套接字接收缓冲区大小的缺省值。<br> net.core.rmem_max：<br> 表示套接字接收缓冲区大小的最大值。<br> net.core.wmem_default：<br> 表示套接字发送缓冲区大小的缺省值。<br> net.core.wmem_max：<br> 表示套接字发送缓冲区大小的最大值。<br> Oracle 12c 静默安装（带注释）</p><p>重新加载内核配置，使之生效：sysctl -p</p><p>修改主机名及hosts</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname oracle</span><br><span class="line">IPLAN=`hostname -I awk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">echo &quot;$IPLAN   oracle&quot; &gt;&gt; /etc/hosts</span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><h2 id="第四步，安装oracle"><a href="#第四步，安装oracle" class="headerlink" title="第四步，安装oracle"></a>第四步，安装oracle</h2><p>安装依赖包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">yum install binutils -y</span><br><span class="line">yum install compat-libcap1 -y</span><br><span class="line">yum install compat-libstdc++-33 -y</span><br><span class="line">yum install compat-libstdc++-33.i686 -y</span><br><span class="line">yum install gcc-c++ -y</span><br><span class="line">yum install glibc -y</span><br><span class="line">yum install glibc.i686 -y</span><br><span class="line">yum install glibc-devel -y</span><br><span class="line">yum install glibc-devel.i686 -y</span><br><span class="line">yum install ksh -y</span><br><span class="line">yum install libaio -y</span><br><span class="line">yum install libaio.i686 -y</span><br><span class="line">yum install libaio-devel -y</span><br><span class="line">yum install libaio-devel.i686 -y</span><br><span class="line">yum install libX11 -y</span><br><span class="line">yum install libX11.i686 -y</span><br><span class="line">yum install libXau -y</span><br><span class="line">yum install libXau.i686 -y</span><br><span class="line">yum install libXi -y</span><br><span class="line">yum install libXi.i686 -y</span><br><span class="line">yum install libXtst -y</span><br><span class="line">yum install libXtst.i686 -y</span><br><span class="line">yum install libgcc -y</span><br><span class="line">yum install libgcc.i686 -y</span><br><span class="line">yum install libstdc++ -y</span><br><span class="line">yum install libstdc++.i686 -y</span><br><span class="line">yum install libstdc++-devel -y</span><br><span class="line">yum install libstdc++-devel.i686 -y</span><br><span class="line">yum install libxcb -y</span><br><span class="line">yum install libxcb.i686 -y</span><br><span class="line">yum install make -y</span><br><span class="line">yum install nfs-utils -y</span><br><span class="line">yum install net-tools -y</span><br><span class="line">yum install smartmontools -y</span><br><span class="line">yum install sysstat -y</span><br><span class="line">yum install unixODBC -y</span><br><span class="line">yum install unixODBC-devel -y</span><br><span class="line">yum install unzip -y</span><br></pre></td></tr></table></figure><p>解压安装包文件到oracle用户家目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#将oracle安装包并解压到oracle家目录（zip包名可能有差异请核对）</span><br><span class="line">unzip -d /home/oracle linuxx64_12201_database.zip</span><br></pre></td></tr></table></figure><p>关闭防火墙、selinux，切换oracle用户，并启动图形化桌面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#防火墙selinux需关闭，方便测试</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">setenforce 0</span><br><span class="line">#oracle为普通用户，图形化登录需创建</span><br><span class="line">touch /var/run/console/oracle</span><br><span class="line">#切换oracle用户及环境</span><br><span class="line">su - oracle</span><br><span class="line">#启动图形化</span><br><span class="line">startx</span><br></pre></td></tr></table></figure><p>图形化启动后，在图形化中执行安装命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#启动安装程序（如果在其他路径需跟全路径）</span><br><span class="line">./datebase/runInstaller</span><br></pre></td></tr></table></figure><p>图形化安装几乎就是一路下一步，看提示操作就可以了，没有操作难度。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-29.png"></p><p>后面的操作就可以按照提示进行下一步即可。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-30.png"></p><p>先决条件检测，会检测出缺省哪些rpm或者环境，按图中所示点击“修补并再次检测”按钮，弹出修复脚本路径执行，再“修复结果”中看看修复状态，如果还有错误，一般退出安装程序，重启机器后，重新执行安装就几乎可以解决问题。（如果问题依然存在就需要百度错误的具体信息了）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-32.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-33.png"></p><p>执行完提示脚本后，点击确定。oracle会继续安装，直至安装完成。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-34.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-35.png"></p><p>开机启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#开机启动oracle</span><br><span class="line">sed -i &#x27;s/:N/:Y/&#x27; /etc/oratab</span><br><span class="line">sed -i &#x27;s/ORACLE_HOME_LISTNER=$1/ORACLE_HOME_LISTNER=$ORACLE_HOME/&#x27; /usr/local/oracle/12.2.0/db_1/bin/dbstart</span><br><span class="line"></span><br><span class="line">echo &quot;</span><br><span class="line">su oracle -lc “/usr/local/oracle/12.2.0/db_1/bin/lsnrctl start”</span><br><span class="line">su oracle -lc  /usr/local/oracle/12.2.0/db_1/bin/dbstart</span><br><span class="line">&quot; &gt;&gt; /etc/rc.d/rc.local</span><br><span class="line">chmod +x /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure><h2 id="第五步，测试"><a href="#第五步，测试" class="headerlink" title="第五步，测试"></a>第五步，测试</h2><p>查看端口状态：（oracle默认端口1521，em端口5500）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-41.png"></p><p>web测试：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-37.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-38.png"></p><p>sqlplus测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sqlplus sys/oracle as sysdba</span><br><span class="line">SQL&gt; select name from sys.v_$database;</span><br><span class="line">——————————————————————————————————————————————</span><br><span class="line">#结果如下</span><br><span class="line">#NAME</span><br><span class="line">#---------</span><br><span class="line">#ORCL</span><br></pre></td></tr></table></figure><p>Navicat测试：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-40.png"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>图像化：创建新数据库，通过dbca命令，弹出图形化向导就可以操作。</p><p>命令行：静默创建库，其实就是dbca 一个dbca.rsp响应文件（所以，创建再次创建新库，其实就是dbca一个新的dbca.rsp文件，注意修改模板端口）</p><p>静默安装3个响应模板文件位于：oracle解压包&#x2F;database&#x2F;response&#x2F;</p><h2 id="静默安装"><a href="#静默安装" class="headerlink" title="静默安装"></a>静默安装</h2><p>静默安装其实也很简单，和图形化安装稍微有写区别：就需要提前配置3个响应文件（3个响应文件就是安装图形化安装时的参数！）</p><ul><li>数据库初始化安装响应文件：db_install.rsp</li><li>创建实例响应文件：dbca.rsp</li><li>监听响应文件：netca.rsp</li></ul><p>安装初始化：runInstaller -silent -responseFile db_install.rsp</p><p>监听：netca -silent -responseFile netca.rsp</p><p>启动监听：lsnrctl start</p><p>查看监听状态：lsnrctl status</p><p>建库：dbca -silent -createDatabase -responseFile dbca.rsp</p><p>删库：dbca -silent -deleteDatabase -sourcedb orcl</p><p>下面是我曾经的12c一键脚本，因为是公司环境，脚本里写的都是固定值，可自行优化（需提前安装java环境）</p><p>（可优化内容：swap检测、java环境检测、防火墙放行端口、自动搜索安装包、安装路径等等）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#根据自己情况必须修改!!!!!!!!!</span><br><span class="line">#oracle的zip包路径</span><br><span class="line">ORACLEZIP=/opt/install/oracle</span><br><span class="line"></span><br><span class="line">##################以下可改可不改##################</span><br><span class="line">#关闭selinux及防火墙</span><br><span class="line">setenforce 0</span><br><span class="line">sed -i &#x27;s/enforcing/disable/&#x27; /etc/selinux/config</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line"></span><br><span class="line">#安装依赖</span><br><span class="line">echo &quot;安装依赖&quot;</span><br><span class="line">yum install binutils -y</span><br><span class="line">yum install compat-libcap1 -y</span><br><span class="line">yum install compat-libstdc++-33 -y</span><br><span class="line">yum install compat-libstdc++-33.i686 -y</span><br><span class="line">yum install gcc-c++ -y</span><br><span class="line">yum install glibc -y</span><br><span class="line">yum install glibc.i686 -y</span><br><span class="line">yum install glibc-devel -y</span><br><span class="line">yum install glibc-devel.i686 -y</span><br><span class="line">yum install ksh -y</span><br><span class="line">yum install libaio -y</span><br><span class="line">yum install libaio.i686 -y</span><br><span class="line">yum install libaio-devel -y</span><br><span class="line">yum install libaio-devel.i686 -y</span><br><span class="line">yum install libX11 -y</span><br><span class="line">yum install libX11.i686 -y</span><br><span class="line">yum install libXau -y</span><br><span class="line">yum install libXau.i686 -y</span><br><span class="line">yum install libXi -y</span><br><span class="line">yum install libXi.i686 -y</span><br><span class="line">yum install libXtst -y</span><br><span class="line">yum install libXtst.i686 -y</span><br><span class="line">yum install libgcc -y</span><br><span class="line">yum install libgcc.i686 -y</span><br><span class="line">yum install libstdc++ -y</span><br><span class="line">yum install libstdc++.i686 -y</span><br><span class="line">yum install libstdc++-devel -y</span><br><span class="line">yum install libstdc++-devel.i686 -y</span><br><span class="line">yum install libxcb -y</span><br><span class="line">yum install libxcb.i686 -y</span><br><span class="line">yum install make -y</span><br><span class="line">yum install nfs-utils -y</span><br><span class="line">yum install net-tools -y</span><br><span class="line">yum install smartmontools -y</span><br><span class="line">yum install sysstat -y</span><br><span class="line">yum install unixODBC -y</span><br><span class="line">yum install unixODBC-devel -y</span><br><span class="line">yum install unzip -y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建用户、组</span><br><span class="line">echo  &quot;创建用户、组&quot;</span><br><span class="line">#创建oinstall组</span><br><span class="line">groupadd oinstall</span><br><span class="line">#创建dba组</span><br><span class="line">groupadd dba</span><br><span class="line">#创建oper组</span><br><span class="line">groupadd oper</span><br><span class="line">#创建oracle用户</span><br><span class="line">useradd -g oinstall -G dba,oper oracle</span><br><span class="line">#设置oracle用户密码为oracle</span><br><span class="line">echo &quot;oracle&quot;  passwd --stdin oracle</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建oracle安装目录</span><br><span class="line">echo &quot;创建oracle安装目录&quot;</span><br><span class="line">mkdir /usr/local/oracle</span><br><span class="line">#授权oracle用户及oinstall组</span><br><span class="line">chown -R oracle:oinstall /usr/local/oracle</span><br><span class="line">#创建oraInventory目录</span><br><span class="line">mkdir /home/oracle/oraInventory</span><br><span class="line">#授权</span><br><span class="line">chown -R oracle:oinstall /home/oracle/oraInventory</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#配置oracle用户环境</span><br><span class="line">echo &quot;配置用户环境&quot;</span><br><span class="line">echo &quot;</span><br><span class="line">#以下内容追加到最后</span><br><span class="line">ORACLE_HOSTNAME=oracle</span><br><span class="line">#安装路径</span><br><span class="line">ORACLE_BASE=/usr/local/oracle</span><br><span class="line">#数据库路径</span><br><span class="line">ORACLE_HOME=/usr/local/oracle/12.2.0/db_1</span><br><span class="line">#实例id</span><br><span class="line">ORACLE_SID=orcl</span><br><span class="line">#字符集</span><br><span class="line">LANG=zh_CN.UTF-8</span><br><span class="line">NLS_LANG=&#x27;SIMPLIFIED CHINESE_CHINA.AL32UTF8&#x27;</span><br><span class="line">#path路径</span><br><span class="line">PATH=$PATH:/usr/local/oracle/12.2.0/db_1/bin</span><br><span class="line">export PATH ORACLE_HOSTNAME ORACLE_BASE ORACLE_HOME ORACLE_SID LANG NLS_LANG</span><br><span class="line">&quot; &gt;&gt; /home/oracle/.bash_profile</span><br><span class="line">source /home/oracle/.bash_profile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#配置全局环境</span><br><span class="line">echo &quot;配置全局环境&quot;</span><br><span class="line">echo &quot;</span><br><span class="line">#以下内容追加到最后</span><br><span class="line">#ulimit控制shell资源</span><br><span class="line">#-p &lt;缓冲区大小&gt;  指定管道缓冲区的大小，单位512字节。</span><br><span class="line">#-u &lt;程序数目&gt; 　 用户最多可开启的程序数目。</span><br><span class="line">#-n &lt;文件数目&gt; 　 指定同一时间最多可开启的文件数。</span><br><span class="line"></span><br><span class="line">if [ $USER = &quot;oracle&quot; ]</span><br><span class="line">then</span><br><span class="line">if [ $SHELL = &quot;/bin/ksh&quot; ]</span><br><span class="line"> then</span><br><span class="line">   ulimit -p 16384</span><br><span class="line">   ulimit -p 65536</span><br><span class="line">else</span><br><span class="line"> ulimit -u 16384 -n 65536</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">&quot; &gt;&gt; /etc/profile</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#oracel用户内核限制limits</span><br><span class="line">echo &quot;ORACLE用户限制limits&quot;</span><br><span class="line">echo &quot;</span><br><span class="line">oracle soft nproc 2047</span><br><span class="line">oracle hard nproc 16384</span><br><span class="line">oracle soft nofile 1024</span><br><span class="line">oracle hard nofile 65536</span><br><span class="line">oracle soft stack 10240</span><br><span class="line">oracle hard stack 32768</span><br><span class="line">&quot; &gt;&gt; /etc/security/limits.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#配置oracle-pam</span><br><span class="line">echo &quot;</span><br><span class="line">session    required     pam_limits.so</span><br><span class="line">&quot; &gt;&gt; /etc/pam.d/login</span><br><span class="line">echo &quot;配置oracle认证完成！&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#配置内核参数</span><br><span class="line">echo &quot;配置内核&quot;</span><br><span class="line">echo &quot;</span><br><span class="line">#以下内容追加到最后</span><br><span class="line">#异步IO请求数目 推荐值是：1048576 其实它等于 1024*1024 也就是 1024K 个</span><br><span class="line">fs.aio-max-nr = 1048576</span><br><span class="line">#打开的文件句柄的最大数量,防止文件描述符耗尽的问题</span><br><span class="line">fs.file-max = 6815744</span><br><span class="line">#共享内存8G设置：8*1024*1024=8388608k/4k=2097152</span><br><span class="line">kernel.shmall = 2097152</span><br><span class="line">#物理内存4G设置：4*1024*1024*1024=4294967296-1=4294967295(kb)</span><br><span class="line">kernel.shmmax = 4294967295  </span><br><span class="line">kernel.shmmni = 4096</span><br><span class="line">kernel.sem = 250 32000 100 128  </span><br><span class="line">#可使用的IPv4端口范围</span><br><span class="line">net.ipv4.ip_local_port_range = 9000 65500</span><br><span class="line">#套接字接收缓冲区大小的缺省值</span><br><span class="line">net.core.rmem_default = 262144</span><br><span class="line">#套接字接收缓冲区大小的最大值</span><br><span class="line">net.core.rmem_max = 4194304</span><br><span class="line">#套接字发送缓冲区大小的缺省值</span><br><span class="line">net.core.wmem_default = 262144</span><br><span class="line">#套接字发送缓冲区大小的最大值</span><br><span class="line">net.core.wmem_max = 1048576</span><br><span class="line">&quot; &gt;&gt; /etc/sysctl.conf </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#配置hosts</span><br><span class="line">echo “配置hosts”</span><br><span class="line">hostnamectl set-hostname oracle</span><br><span class="line">IPLAN=`hostname -I awk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">echo &quot;$IPLAN   oracle&quot; &gt;&gt; /etc/hosts</span><br><span class="line">systemctl restart network</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#数据库初始化文件db_install.rsp</span><br><span class="line">echo  &quot;创建db_install.rsp&quot;</span><br><span class="line">echo &quot;</span><br><span class="line">oracle.install.responseFileVersion=/oracle/install/rspfmt_dbinstall_response_schema_v12.2.0</span><br><span class="line">oracle.install.option=INSTALL_DB_SWONLY</span><br><span class="line">UNIX_GROUP_NAME=oinstall</span><br><span class="line">INVENTORY_LOCATION=/home/oracle/oraInventory</span><br><span class="line">SELECTED_LANGUAGES=en,zh_CN</span><br><span class="line">ORACLE_HOME=/usr/local/oracle/12.2.0/db_1</span><br><span class="line">ORACLE_BASE=/usr/local/oracle</span><br><span class="line">oracle.install.db.InstallEdition=EE</span><br><span class="line">oracle.install.db.OSDBA_GROUP=dba</span><br><span class="line">oracle.install.db.OSOPER_GROUP=oinstall</span><br><span class="line">oracle.install.db.OSBACKUPDBA_GROUP=oinstall</span><br><span class="line">oracle.install.db.OSDGDBA_GROUP=oinstall</span><br><span class="line">oracle.install.db.OSKMDBA_GROUP=oinstall</span><br><span class="line">oracle.install.db.OSRACDBA_GROUP=oinstall</span><br><span class="line">#oracle.install.db.isRACOneInstall=false</span><br><span class="line">oracle.install.db.config.starterdb.type=GENERAL_PURPOSE</span><br><span class="line">oracle.install.db.config.starterdb.globalDBName=orcl</span><br><span class="line">oracle.install.db.config.starterdb.SID=orcl</span><br><span class="line">oracle.install.db.config.starterdb.characterSet=AL32UTF8</span><br><span class="line">oracle.install.db.config.starterdb.memoryOption=true</span><br><span class="line">oracle.install.db.config.starterdb.password.ALL=oracle</span><br><span class="line">SECURITY_UPDATES_VIA_MYORACLESUPPORT=true</span><br><span class="line">DECLINE_SECURITY_UPDATES=true</span><br><span class="line">&quot; &gt; /home/oracle/db_install.rsp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建实例文件dbca.rsp</span><br><span class="line">echo &quot;创建dbca.rsp&quot;</span><br><span class="line">echo &quot;</span><br><span class="line">responseFileVersion=/oracle/assistants/rspfmt_dbca_response_schema_v12.2.0</span><br><span class="line">gdbName=orcl</span><br><span class="line">sid=orcl</span><br><span class="line">sysPassword=oracle</span><br><span class="line">systemPassword=oracle</span><br><span class="line">pdbAdminPassword=oracle</span><br><span class="line">dbsnmpPassword=oracle</span><br><span class="line">databaseConfigType=SI</span><br><span class="line">createAsContainerDatabase=true</span><br><span class="line">numberOfPDBs=1</span><br><span class="line">pdbName=orclpdb</span><br><span class="line">templateName=/usr/local/oracle/12.2.0/db_1/assistants/dbca/templates/General_Purpose.dbc</span><br><span class="line">emExpressPort=5500</span><br><span class="line">omsPort=0</span><br><span class="line">characterSet=AL32UTF8</span><br><span class="line">listeners=LISTENER</span><br><span class="line">memoryPercentage=40</span><br><span class="line">automaticMemoryManagement=false</span><br><span class="line">totalMemory=0</span><br><span class="line">&quot; &gt; /home/oracle/dbca.rsp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#解压oracle</span><br><span class="line">echo &quot;开始解压、安装&quot;</span><br><span class="line">cd $ORACLEZIP</span><br><span class="line">unzip -d /home/oracle linuxx64_12201_database.*</span><br><span class="line"></span><br><span class="line">echo &quot;----------------------------------------------------------------------------------------&quot;</span><br><span class="line">echo &quot;开始安装数据库程序，周期较长请不要中断进程,安装中……&quot;</span><br><span class="line">echo &quot;----------------------------------------------------------------------------------------&quot;</span><br><span class="line"></span><br><span class="line">#数据库初始化</span><br><span class="line">#切换oracle</span><br><span class="line">su - oracle &lt;&lt; EOF</span><br><span class="line">#忽略参数 -ignorePrereq</span><br><span class="line">/home/oracle/database/runInstaller -silent -responseFile /home/oracle/db_install.rsp </span><br><span class="line">#安装等待时长，自行调整</span><br><span class="line">sleep 400</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;更新数据库目录权限&quot;</span><br><span class="line">#返回root</span><br><span class="line">bash /usr/local/oracle/oraInventory/orainstRoot.sh</span><br><span class="line">sleep 2</span><br><span class="line">bash /usr/local/oracle/12.2.0/db_1/root.sh</span><br><span class="line">sleep 2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#切换oracle</span><br><span class="line">su - oracle &lt;&lt; EOF</span><br><span class="line"></span><br><span class="line">#启动监听</span><br><span class="line">netca -silent -responseFile /home/oracle/database/response/netca.rsp</span><br><span class="line">sleep 2</span><br><span class="line">#创建数据库</span><br><span class="line">dbca -silent -createDatabase -responseFile /home/oracle/dbca.rsp</span><br><span class="line">sleep 2</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">#开机启动oracle</span><br><span class="line">echo &quot;配置oracle开机启动&quot;</span><br><span class="line">sed -i &#x27;s/:N/:Y/&#x27; /etc/oratab</span><br><span class="line">sed -i &#x27;s/ORACLE_HOME_LISTNER=$1/ORACLE_HOME_LISTNER=$ORACLE_HOME/&#x27; /usr/local/oracle/12.2.0/db_1/bin/dbstart</span><br><span class="line"></span><br><span class="line">echo &quot;</span><br><span class="line">su oracle -lc “/usr/local/oracle/12.2.0/db_1/bin/lsnrctl start”</span><br><span class="line">su oracle -lc  /usr/local/oracle/12.2.0/db_1/bin/dbstart</span><br><span class="line">&quot; &gt;&gt; /etc/rc.d/rc.local</span><br><span class="line">chmod +x /etc/rc.d/rc.local</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">########使用EM express######</span><br><span class="line">#打开em:</span><br><span class="line">#https:sql&gt; exec dbms_xdb_config.sethttpsport(5500);</span><br><span class="line">#http :sql&gt; dbms_xdb_config.sethttpport(5505);</span><br><span class="line">#关闭em:</span><br><span class="line">#https:sql&gt; exec dbms_xdb_config.sethttpsport(0);</span><br><span class="line">#http :sql&gt; exec dbms_xdb_config.sethttpport(0);</span><br><span class="line">#查看em端口:</span><br><span class="line">#https:sql&gt; select dbms_xdb_config.gethttpsport from dual;</span><br><span class="line">#http :sql&gt; select dbms_xdb_config.gethttpport from dual;</span><br><span class="line"></span><br><span class="line">#登录数据库启动EM#</span><br><span class="line">su - oracle &lt;&lt; EOF</span><br><span class="line">sqlplus sys/oracle as sysdba </span><br><span class="line">exec dbms_xdb_config.sethttpsport(5500);</span><br><span class="line">exit</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;--------------------------------oracle安装完成---------------------------------&quot;</span><br><span class="line">echo &quot;本地用户：oracle        密码：oracle       本地IP：$IPLAN&quot;</span><br><span class="line">echo &quot;-------------------------------ORACLE相关信息如下-------------------------------&quot;</span><br><span class="line">echo &quot;       ORACLE_BASE：/usr/local/oracle&quot;</span><br><span class="line">echo &quot;       ORACLE_HOME：/ursr/local/oracle/12.2.0/db_1&quot;</span><br><span class="line">echo &quot;           gdbName：orcl&quot;</span><br><span class="line">echo &quot;         oracleSID：orcl&quot;</span><br><span class="line">echo &quot;           sys密码：oracle&quot;</span><br><span class="line">echo &quot;        system密码：oracle&quot;</span><br><span class="line">echo &quot;           EM 地址：https://$IPLAN:5500/em&quot;</span><br><span class="line">echo &quot;------------------------------------------------------------------------------&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos oracle </tag>
            
            <tag> centso静默安装oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 搭建本地yum源、网络yum源</title>
      <link href="/posts/4c7d71f9.html"/>
      <url>/posts/4c7d71f9.html</url>
      
        <content type="html"><![CDATA[<p>频繁访问外网源占用带宽，且速度有限，所以搭建局域网源是必须的。</p><p>yum源下载rpm，是由本地repo文件配置控制的，所有核心就是我们的repo文件。</p><p>repo文件格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#中括号内为yum源标签</span><br><span class="line">[ffing]</span><br><span class="line">#yum源描述</span><br><span class="line">name=ffing-centos7</span><br><span class="line">#yum源地址（baseurl支持四种协议：ftp、http、file、rsync）</span><br><span class="line">baseurl=http://ffing.cn/yum</span><br><span class="line">#秘钥检测：</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure><p>环境：</p><ul><li>系统版本：centos7.6</li><li>ISO镜像：centos7.6（yum源文件）</li><li>nginx1.16（web服务器）</li></ul><p>流程</p><ul><li>搭建本地yum源</li><li>发布yum目录</li><li>网络yum源配置</li><li>yum源优先级</li></ul><h2 id="一，搭建本地yum源"><a href="#一，搭建本地yum源" class="headerlink" title="一，搭建本地yum源"></a>一，搭建本地yum源</h2><p>简单讲：创建yum仓库目录–&gt;配置repo文件–&gt;测试OK</p><h4 id="1-准备本地yum仓库"><a href="#1-准备本地yum仓库" class="headerlink" title="1.准备本地yum仓库"></a>1.准备本地yum仓库</h4><p>将iso文件复制到本地目录，作为仓库源</p><p>1.1提前创建需要目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#创建本地yum仓库目录</span><br><span class="line">mkdir -p /yum/centos7-iso</span><br></pre></td></tr></table></figure><p>1.2挂载iso镜像到&#x2F;mnt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#挂载光盘到mnt下</span><br><span class="line">mount /dev/sr0 /mnt</span><br></pre></td></tr></table></figure><p>1.3拷贝光盘内容到我们上面创建的yum仓库目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r /mnt/* /yum/centos7-iso</span><br></pre></td></tr></table></figure><h4 id="2-配置repo文件"><a href="#2-配置repo文件" class="headerlink" title="2.配置repo文件"></a>2.配置repo文件</h4><p>2.1清除本地所有repo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#创建备份目录</span><br><span class="line">mkdir /etc/yum.repos.d/bak</span><br><span class="line">#移动所有repo文件到bak目录下，保证/etc/yum.repos.d/下为空目录</span><br><span class="line">mv /etc/yum.repos.d/* /etc/yum.repos.d/bak</span><br></pre></td></tr></table></figure><p>2.2创建本地repo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#创建本地local.repo</span><br><span class="line">vi /etc/yum.repos.d/local.repo</span><br><span class="line"></span><br><span class="line">#####内容如下#####</span><br><span class="line">[local-centos7]</span><br><span class="line">name=local-CentOS7-iso</span><br><span class="line">baseurl=file:///yum/centos7-iso/</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure><h4 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h4><p>本地测试，以安装tree为例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install tree</span><br></pre></td></tr></table></figure><p>下图安装提示标签源为local-centos7，与上面我们配置的一致。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-24.png"></p><p>至此，本地yum源就搭建完成了！</p><h2 id="二，web发布yum源目录"><a href="#二，web发布yum源目录" class="headerlink" title="二，web发布yum源目录"></a>二，web发布yum源目录</h2><p>yum仓库目录做web服务（为网络源做基础）</p><p>从上面的搭建过程，可以看出yum源的访问路径，就是repo中的baseurl配置的地址，所以，我们做网络源就需要将我们本地的yum仓库目录发布出去。</p><p>安装nginx，并开放80端口，关闭selinux</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#安装nginx</span><br><span class="line">yum -y install nginx</span><br><span class="line">#防火墙放行80端口</span><br><span class="line">firewall-cmd --add-port=80/tcp --zone=public --permanent</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">#临时关闭selinux</span><br><span class="line">setenforce 0</span><br><span class="line">#永久关闭selinux</span><br><span class="line">sed -i &#x27;s/enforcing/disable/&#x27; /etc/selinux/config</span><br></pre></td></tr></table></figure><p>修改nginx配置，增加location规则，定义yum源</p><p>vi &#x2F;etc&#x2F;nginx&#x2F;nginx.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#插入location规则</span><br><span class="line">location /yum &#123;</span><br><span class="line">alias /yum/centos7-iso;</span><br><span class="line">autoindex on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-25.png"></p><p>重启nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>访问http:&#x2F;&#x2F;服务器IP或域名&#x2F;yum</p><p>我的vm服务器地址ip为192.168.68.175</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-26.png"></p><h2 id="三，网络yum源配置"><a href="#三，网络yum源配置" class="headerlink" title="三，网络yum源配置"></a>三，网络yum源配置</h2><p>寻找网络中，其他的机器配置repo文件，yum源地址为我们发布的yum地址即可!</p><p>这里我以vm-2机器为例！</p><p>同样的操作，移除原有repo文件，仅创建lan.repo做测试。</p><p>vi &#x2F;etc&#x2F;yum.repos.d&#x2F;lan.repo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#源标签我定义为网络源的ip地址（你自己想定义上面都可以，方便自己辨识）</span><br><span class="line">#baseurl为上面那台机器192.168.68.175发布的地址！</span><br><span class="line">[192.168.68.175]</span><br><span class="line">name=192.168.68.175-yum</span><br><span class="line">baseurl=http://192.168.68.175/yum</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure><p>vm-2 安装tree，yum源标签显示的是我们上面创建的192.168.68.175地址。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-27.png"></p><h2 id="四，yum源优先级（yum-plugin-priorities-noarch）"><a href="#四，yum源优先级（yum-plugin-priorities-noarch）" class="headerlink" title="四，yum源优先级（yum-plugin-priorities.noarch）"></a>四，yum源优先级（yum-plugin-priorities.noarch）</h2><p>有本地源和网络源的时，就有优先级问题。</p><p>安装yum-plugin-priorities.noarch模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y insatll yum-plugin-priorities.noarch</span><br></pre></td></tr></table></figure><p>安装完成后，修改repo文件配置priority参数定义优先级，值越小，优先级越高！</p><p>如下：（默认没有配置priority参数的优先级最低）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#本地repo文件，加入priority参数！！！</span><br><span class="line">[local-centos7]</span><br><span class="line">name=local-CentOS7-iso</span><br><span class="line">baseurl=file:///yum/centos7-iso/</span><br><span class="line">gpgcheck=0</span><br><span class="line">priority=1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yum优先级 </tag>
            
            <tag> yum源 </tag>
            
            <tag> 本地yum </tag>
            
            <tag> 网络yum </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos -weblogic 12C 图形化安装及静默安装</title>
      <link href="/posts/9102d83b.html"/>
      <url>/posts/9102d83b.html</url>
      
        <content type="html"><![CDATA[<p>好几天没写东西了，写个weblogic部署教程。</p><p>windows和centos下weblogic图形化安装，没什么区别，几乎都是傻瓜式安装，一直下一步。</p><p>centos下也可以静默安装weblogic，适合一键部署，我是懒人，静默安装脚本我回头优化一下回头放到gitee上我的脚本库。</p><p>环境：</p><ul><li>centos 7.6</li><li>java 8</li><li>weblogic12c</li><li>图形化</li></ul><p>流程：</p><ul><li>安装java</li><li>创建weblogic用户及安装目录</li><li>安装图形化（最小化安装时需要）</li><li>安装weblogic</li><li>启动weblogic</li><li>测试</li></ul><p>静默安装：</p><ul><li>3个响应文件即可！</li></ul><p>因为我用centos几乎很少用到图形化，但有的时候做测试又必须有图形化或者使用X11协议远程，这里我以GNOME桌面为例，直接开始教程</p><h2 id="第一步，安装java环境"><a href="#第一步，安装java环境" class="headerlink" title="第一步，安装java环境"></a>第一步，安装java环境</h2><p>使用我的脚本安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl https://gitee.com/ffing/onekey/raw/master/onekey.sh)</span><br></pre></td></tr></table></figure><p>也可以看我前面的文章：<a href="https://blog.ffing.cn/linux/centos-%e5%ae%89%e8%a3%85java">centos - 安装java</a></p><h2 id="第二步，创建weblogic用户及安装目录"><a href="#第二步，创建weblogic用户及安装目录" class="headerlink" title="第二步，创建weblogic用户及安装目录"></a>第二步，创建weblogic用户及安装目录</h2><p>1.创建weblogic用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#创建weblogic用户（因为weblogic安装需以weblogic用户进行安装）</span><br><span class="line">useradd weblogic</span><br><span class="line">#设置weblogic密码</span><br><span class="line">echo &quot;weblogic&quot;  passwd --stdin weblogic</span><br></pre></td></tr></table></figure><p>2.创建weblogic安装目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#创建weblogic安装目录(安装路径可根据个人习惯)</span><br><span class="line">mkdir /usr/local/weblogic</span><br><span class="line">#安装目录授权</span><br><span class="line">chown -R weblogic:weblogic /usr/local/weblogic</span><br></pre></td></tr></table></figure><h2 id="第三步，安装图形化"><a href="#第三步，安装图形化" class="headerlink" title="第三步，安装图形化"></a>第三步，安装图形化</h2><p>注：如果已有图形化可跳过</p><p>安装GNOME组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#&quot;GNOME DESKTOP&quot;中间有空格所以必须引起了</span><br><span class="line">yum -y groupinstall &quot;GNOME DESKTOP&quot;</span><br></pre></td></tr></table></figure><h2 id="第四步，安装weblogic"><a href="#第四步，安装weblogic" class="headerlink" title="第四步，安装weblogic"></a>第四步，安装weblogic</h2><p>1.切换weblogic用户，启动图形化桌面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#selinux和防火墙需关闭，方便测试</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">touch /var/run/console/weblogic</span><br><span class="line">#切换用户及环境</span><br><span class="line">su - weblogic </span><br><span class="line">#启动图形化</span><br><span class="line">startx</span><br></pre></td></tr></table></figure><p>2.上传weblogic安装文件到weblogic家目录</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-42.png"></p><p>3.图形化安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar 《你上传的weblogic安装包》</span><br></pre></td></tr></table></figure><p>图形化安装没难度，看提示安装即可，唯一需要注意安装目录！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-43.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-44.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-45.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-46.png"></p><p>4.安装完成后，自动弹出配置向导</p><p>（如果不小心关闭配置向导，也可以通过weblogic家目录下wlserver&#x2F;common&#x2F;bin&#x2F;config.sh打开配置向导，我的配置向导路径：&#x2F;usr&#x2F;local&#x2F;weblogic&#x2F;Oracle&#x2F;Middleware&#x2F;Oracle_Home&#x2F;wlserver&#x2F;common&#x2F;bin&#x2F;config.sh）</p><p>也是一路下一步，看提示没什么操作难度</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-47.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-48.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-49.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-50.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-51.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-52.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-53.png"></p><p>OK，安装完成！</p><p>注：默认域端口7001，如果创建新域要区分原来的端口！！！</p><p>第五步，启动weblogic</p><p>第一种方法：使用默认脚本启动（简单方便）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#从默认域中（domains/base_domain）打开startWeblogic.sh</span><br><span class="line">#下面是我的默认域/bin路径</span><br><span class="line">/usr/local/weblogic/Oracle/Middleware/Oracle_Home/user_projects/domains/base_domain/bin/startWebLogic.sh</span><br></pre></td></tr></table></figure><p>出现RUNNING表示启动成功</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-21.png"></p><p>第二种方法：创建systemd服务（维护方便，且守护进程）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># vi /etc/systemd/system/weblogic-base.service</span><br><span class="line">----------------------------------------------------</span><br><span class="line">[Unit]</span><br><span class="line">Description=weblogic-base</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">#启动路径</span><br><span class="line">ExecStart=/usr/local/weblogic/Oracle/Middleware/Oracle_Home/user_projects/domains/base_domain/bin/startWebLogic.sh</span><br><span class="line">#停止路径</span><br><span class="line">ExecStop=/usr/local/weblogic/Oracle/Middleware/Oracle_Home/user_projects/domains/base_domain/bin/stopWebLogic.sh</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">PrivateTmp=ture</span><br><span class="line">Restart=always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="第五步，测试"><a href="#第五步，测试" class="headerlink" title="第五步，测试"></a>第五步，测试</h2><p>浏览器访问:</p><p>http:&#x2F;&#x2F;服务器IP或域名:7001&#x2F;console</p><p>前面配置的用户名密码！</p><p>注：如果打不开，请检查防火墙端口是否开发</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-23.png"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>静默安装，创建多个域，就多复制几个create_domain.py（注意修改监听端口和域路径）</p><p>生成环境，要求每次启动输入用户名密码，两种方法免密：</p><p>第一种方法：修改startWebLogic.sh启动脚本，在里面追加用户名和密码<br>WLS_USER&#x3D;”weblogic”<br>WLS_PW&#x3D;”weblogic123456”<br>export  WLS_USER  WLS_PW </p><p>第二种方法：在你域下（domains&#x2F;base_domain&#x2F;servers&#x2F;AdminServer）创建boot.properties文件。<br>文件内容：<br>username&#x3D;weblogic<br>password&#x3D;weblogic123456</p><h2 id="静默安装"><a href="#静默安装" class="headerlink" title="静默安装"></a>静默安装</h2><p>weblogic静默安装需oraInst.loc和wls.rsp两个响应文件，创建域需create_domain.py响应文件（响应文件名可以自定义，我这里命名是方便大家理解）</p><ul><li>oraInst.loc：配置weblogic的清单目录及安装组名</li><li>wls.rsp：配置weblogic安装参数</li><li> create_domain.py：创建域配置参数（基于模板：wlserver&#x2F;common&#x2F;templates&#x2F;scripts&#x2F;wlst&#x2F;basicWLSDomain.py）</li></ul><p>oraInst.loc：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#产品清单目录(oracle系统提示：尽量不要放于weblogic安装目录，所以直接放家于weblog家目录即可)</span><br><span class="line">inventory_loc=/home/weblogic/oraInventory</span><br><span class="line">#系统安装组</span><br><span class="line">inst_group=weblogic</span><br></pre></td></tr></table></figure><p>wls.rsp：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[ENGINE]</span><br><span class="line">#这个值不能修改，否则无法安装</span><br><span class="line">Response File Version=1.0.0.0.0</span><br><span class="line">[GENERIC]</span><br><span class="line">#weblogic的安装路径</span><br><span class="line">ORACLE_HOME=/usr/local/weblogic</span><br><span class="line">#安装类型</span><br><span class="line">INSTALL_TYPE=WebLogic Server</span><br><span class="line">#禁止更新</span><br><span class="line">DECLINE_SECURITY_UPDATES=true</span><br><span class="line">SECURITY_UPDATES_VIA_MYORACLESUPPORT=false</span><br></pre></td></tr></table></figure><p>create_domain.py：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#模板路径（根据自己情况修改！！！）</span><br><span class="line">readTemplate(&#x27;/usr/local/weblogic/wlserver/common/templates/wls/wls.jar&#x27;)</span><br><span class="line">cd(&#x27;Servers/AdminServer&#x27;)</span><br><span class="line">#监听端口</span><br><span class="line">set(&#x27;ListenPort&#x27;,7101)</span><br><span class="line">cd(&#x27;/&#x27;)</span><br><span class="line">cd(&#x27;Security/base_domain/User/weblogic&#x27;)</span><br><span class="line">#如果需要修改管理员用户名为weblogic，则需要cmo.setName(&#x27;weblogic&#x27;)</span><br><span class="line">cmo.setName(&#x27;weblogic&#x27;)</span><br><span class="line">#设置weblogic密码</span><br><span class="line">cmo.setPassword(&#x27;weblogic123456&#x27;)</span><br><span class="line">#域模式（开发者模式：dev    生成模式：prod）</span><br><span class="line">setOption(&#x27;ServerStartMode&#x27;,&#x27;dev&#x27;)</span><br><span class="line">setOption(&#x27;OverwriteDomain&#x27;,&#x27;true&#x27;)</span><br><span class="line">#创建域路径</span><br><span class="line">writeDomain(&#x27;/usr/local/weblogic/Oracle/Middleware/user_projects/domains/web-7101/&#x27;) </span><br><span class="line">closeTemplate()</span><br><span class="line">exit()</span><br></pre></td></tr></table></figure><p>静默安装weblogic</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#切换weblogic</span><br><span class="line">su - weblogic</span><br><span class="line">#静默安装时，响应文件必须是绝对路径（包名可能有差异自行修改!!!）</span><br><span class="line">java -jar fmw_12.2.1.4.0_wls_lite_generic.jar -silent -responseFile  /home/weblogic/wls.rsp -invPtrLoc /home/weblogic/oraInst.loc</span><br></pre></td></tr></table></figure><p>创建域</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#必须是weblogic用户执行</span><br><span class="line">#确认自己的wlsh.sh位置！！！</span><br><span class="line">/usr/local/weblogic/wlserver/common/bin/wlst.sh /home/weblogic/create_domain.py</span><br></pre></td></tr></table></figure><p>注：如果创建第二个或者更多个域，就对应复制几个create_domain.py（注意监听端口和域路径）</p><p>启动weblogic：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#cd到域路径下</span><br><span class="line">cd /usr/local/weblogic/Oracle/Middleware/user_projects/domains/web-7101/</span><br><span class="line">#cd到域路径bin目录下</span><br><span class="line">cd bin</span><br><span class="line">#启动</span><br><span class="line">./startWebLogic.sh</span><br></pre></td></tr></table></figure><p>浏览器访问：http:&#x2F;&#x2F;服务器IP:端口号&#x2F;console</p><p>如上我配置的端口7101，则我的访问地址：htttp:&#x2F;&#x2F;ip:7101&#x2F;console</p><p>附：我原来的一键脚本（公司环境,大部分固定值，请自行优化！）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#weblogic压缩包目录</span><br><span class="line">WEBLOGICZIPDIR=/root</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">IPLAN=`hostname -I awk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">#判断java环境</span><br><span class="line">java -version</span><br><span class="line">if [  $? -eq 0 ] ; then</span><br><span class="line">grep &quot;JAVA_HOME&quot; /etc/profile</span><br><span class="line">if  [  $? -ne 0 ] ;then</span><br><span class="line">echo -e &quot;\e[31m 不支持OPENJDK，请配置JAVA环境变量后，再执行此脚本！ \e[0m&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\e[31m 请安装java环境，再执行此脚本！ \e[0m&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#关闭selinux</span><br><span class="line">grep &quot;SELINUX=enforcing&quot; /etc/selinux/config </span><br><span class="line">if [ $? -eq 0 ] ;then</span><br><span class="line">echo &quot;关闭Selinux&quot;</span><br><span class="line">setenforce 0</span><br><span class="line">sed -i  &#x27;s/enforcing/disable/&#x27; /etc/selinux/config</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#防火墙放行端口</span><br><span class="line">echo &quot;防火墙放行7001端口&quot;</span><br><span class="line">firewall-cmd --add-port=7001/tcp --zone=public --permanent</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建weblogic用户</span><br><span class="line">useradd weblogic</span><br><span class="line">#设置weblogic密码</span><br><span class="line">echo &quot;weblogic&quot;  passwd --stdin weblogic</span><br><span class="line"></span><br><span class="line">#创建weblogic安装目录</span><br><span class="line">mkdir /usr/local/weblogic</span><br><span class="line">#安装目录授权</span><br><span class="line">chown -R weblogic:weblogic /usr/local/weblogic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###创建静默安装响应文件</span><br><span class="line">#创建清单目录响应文件</span><br><span class="line">echo &quot;</span><br><span class="line">#产品清单目录(oracle系统提示：尽量不要放于weblogic安装目录，所以直接放家于weblog家目录即可)</span><br><span class="line">inventory_loc=/home/weblogic/oraInventory</span><br><span class="line">#系统安装组</span><br><span class="line">inst_group=weblogic</span><br><span class="line">&quot; &gt; /home/weblogic/oraInst.loc</span><br><span class="line"></span><br><span class="line">#创建静默安装响应文件</span><br><span class="line">echo &quot;</span><br><span class="line">[ENGINE]</span><br><span class="line">#这个值不能修改，否则无法安装</span><br><span class="line">Response File Version=1.0.0.0.0</span><br><span class="line">[GENERIC]</span><br><span class="line">#weblogic的安装路径</span><br><span class="line">ORACLE_HOME=/usr/local/weblogic</span><br><span class="line">#安装类型</span><br><span class="line">INSTALL_TYPE=WebLogic Server</span><br><span class="line">#禁止更新</span><br><span class="line">DECLINE_SECURITY_UPDATES=true</span><br><span class="line">SECURITY_UPDATES_VIA_MYORACLESUPPORT=false</span><br><span class="line">&quot; &gt; /home/weblogic/wls.rsp</span><br><span class="line"></span><br><span class="line">#创建域响应文件</span><br><span class="line">echo &quot;</span><br><span class="line">#模板路径（根据自己情况修改！！！）</span><br><span class="line">readTemplate(&#x27;/usr/local/weblogic/wlserver/common/templates/wls/wls.jar&#x27;)</span><br><span class="line">cd(&#x27;Servers/AdminServer&#x27;)</span><br><span class="line">#监听端口</span><br><span class="line">set(&#x27;ListenPort&#x27;,7001)</span><br><span class="line">cd(&#x27;/&#x27;)</span><br><span class="line">cd(&#x27;Security/base_domain/User/weblogic&#x27;)</span><br><span class="line">#如果需要修改管理员用户名为weblogic，则需要cmo.setName(&#x27;weblogic&#x27;)</span><br><span class="line">cmo.setName(&#x27;weblogic&#x27;)</span><br><span class="line">#设置weblogic密码</span><br><span class="line">cmo.setPassword(&#x27;weblogic123456&#x27;)</span><br><span class="line">#域模式（开发者模式：dev    生成模式：prod）</span><br><span class="line">setOption(&#x27;ServerStartMode&#x27;,&#x27;dev&#x27;)</span><br><span class="line">setOption(&#x27;OverwriteDomain&#x27;,&#x27;true&#x27;)</span><br><span class="line">#创建域路径</span><br><span class="line">writeDomain(&#x27;/usr/local/weblogic/Oracle/Middleware/user_projects/domains/base_domain/&#x27;) </span><br><span class="line">closeTemplate()</span><br><span class="line">exit()</span><br><span class="line">&quot; &gt; /home/weblogic/create_domain.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">yum -y install unzip</span><br><span class="line"></span><br><span class="line">###执行静默安装</span><br><span class="line">#解压weblogic目录到weblogic家目录</span><br><span class="line">cd $WEBLOGICZIPDIR</span><br><span class="line">unzip -d /home/weblogic fmw*.zip </span><br><span class="line">sleep 5</span><br><span class="line"></span><br><span class="line">#切换weblogic，执行静默安装</span><br><span class="line">su - weblogic &lt;&lt; EOF</span><br><span class="line">#静默安装时，响应文件必须是绝对路径（包名可能有差异自行修改!!!）</span><br><span class="line">java -jar fmw_12.2.1.4.0_wls_lite_generic.jar -silent -responseFile  /home/weblogic/wls.rsp -invPtrLoc /home/weblogic/oraInst.loc</span><br><span class="line">sleep 2</span><br><span class="line">#创建域</span><br><span class="line">/usr/local/weblogic/wlserver/common/bin/wlst.sh /home/weblogic/create_domain.py</span><br><span class="line">sleep 2</span><br><span class="line">#启动weblogic</span><br><span class="line">nohup /usr/local/weblogic/Oracle/Middleware/user_projects/domains/base_domain/startWebLogic.sh &amp; </span><br><span class="line">sleep 2</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;-----------------------------------weblogic安装完成--------------------------------------------&quot;</span><br><span class="line">echo &quot;本地用户：weblogic            密码：weblogic            本地IP:$IPLAN&quot;</span><br><span class="line">echo &quot;-----------------------------------weblogic相关信息--------------------------------------------&quot;</span><br><span class="line">echo &quot;weblogic基目录：/usr/local/weblogic&quot;</span><br><span class="line">echo &quot;weblogic域目录：/usr/local/weblogic/Oracle/Middleware/user_projects/domains/base_domain&quot;</span><br><span class="line">echo &quot;weblogic地  址：http://$IPLAN:7001/console&quot;</span><br><span class="line">echo &quot;        登录名：weblogic&quot;</span><br><span class="line">echo &quot;        密  码：weblogic123456&quot;</span><br><span class="line">echo &quot;----------------------------------------------------------------------------------------------&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos图形化安装weblogic </tag>
            
            <tag> weblogic </tag>
            
            <tag> weblogic新域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWK 笔记</title>
      <link href="/posts/ef2b43dd.html"/>
      <url>/posts/ef2b43dd.html</url>
      
        <content type="html"><![CDATA[<p>awk太过庞大，过滤打印、浮点运算、条件判断，这里只是整理了一下自己的笔记。</p><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk [option] &#x27;program&#x27;  var=value《file》</span><br><span class="line">awk [option] -f programfile  var=value《file》</span><br></pre></td></tr></table></figure><p>其中program通常被单引号，并可以有3部分组成</p><ul><li>BEGIN语句块（对文件处理前执行，表头）</li><li>模式匹配通用语句块</li><li>END语句块（对文件处理后执行，做结果统计）</li></ul><p>常见选项：</p><ul><li>-F 指定分隔符（支持正则表达式）</li><li>-v var&#x3D;value 变量复制</li></ul><p>注：awk中字符串必须要用双引号！默认空格为分隔符。</p><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#指定多个分隔符：以空格、：、%为分隔符（支持正则表达式）</span><br><span class="line">awk -F &quot; +:%&quot;</span><br><span class="line">#定义变量并引用(注-v也可以引用外部变量)</span><br><span class="line">awk -v AAA=123 &#x27;BEGIN&#123;print AAA&#125;&#x27;</span><br><span class="line">awk -F: -v AAA=&quot;===&quot; &#x27;&#123;print $1 AAA $3 &#125;&#x27; /etc/passwd </span><br><span class="line">awk -F: -v AAA=&quot;===&quot; -v BBB=&quot;---&quot; &#x27;&#123;print $1 AAA $3 BBB&#125;&#x27; /etc/passwd </span><br><span class="line">#引用外部变量hostname，打印主机名</span><br><span class="line">awk -v AAA=$HOSTNAME &#x27;BEGIN&#123;print &quot;主机名：&quot; AAA&#125;&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">###################打印：print###################</span><br><span class="line">###以/etc/passwd文件为例</span><br><span class="line"></span><br><span class="line">#打印指定列</span><br><span class="line">#打印第1，3列(获取用户名和用户ID)</span><br><span class="line">awk -F: &#x27;&#123;print $1,$3&#125;&#x27; /etc/passwd</span><br><span class="line">#打印字符串（字符串需要双引号）</span><br><span class="line">awk &#x27;BEGIN&#123;print &quot;《打印的内容》&quot;&#125;&#x27;</span><br><span class="line"></span><br><span class="line">########指定列######</span><br><span class="line">###打印指定列大于或小于指定值的行（硬盘使用率使用较多！）</span><br><span class="line">例：</span><br><span class="line">#cat disk.txt</span><br><span class="line">devtmpfs        486M     0  486M    0% /dev</span><br><span class="line">tmpfs           496M     0  496M    0% /dev/shm</span><br><span class="line">tmpfs           496M  748K  495M    1% /run</span><br><span class="line">tmpfs           496M     0  496M    0% /sys/fs/cgroup</span><br><span class="line">/dev/vda1        20G  2.3G   17G   13% /</span><br><span class="line">/dev/vda1        20G  10G    10G   50% /home</span><br><span class="line">#只打印run和home行</span><br><span class="line">cat disk.txtawk &#x27;/run/;/home/ &#123;print&#125;&#x27;</span><br><span class="line"></span><br><span class="line">#打印硬盘使用率大于20%的行,且只打印后两列(结果值为：50% /home)</span><br><span class="line">#df -h tr -d &quot;%&quot;awk &#x27;$5&gt;20&#123;print $(NF-1) &quot; &quot; $NF&#125;&#x27;</span><br><span class="line"></span><br><span class="line">###不打印指定列，其他列正常打印（其实也就将指定列为空）</span><br><span class="line">例：排除第2、3列</span><br><span class="line">#cat test.log</span><br><span class="line">2021-11-03nginx  test1post/admin.php</span><br><span class="line">2021-11-0315:30:30tomcatget/wp-index.php</span><br><span class="line">#cat test.logawk &#x27;&#123;$2=$3=&quot;&quot;;print&#125;&#x27;</span><br><span class="line"></span><br><span class="line">###################输出分隔符：OFS###################</span><br><span class="line">###使用OFS参数定义输出分隔符,默认”，“ 代表空格分隔符</span><br><span class="line">#使用OFS定义定义输出分隔符为”-“</span><br><span class="line">awk -F: -v OFS=&#x27;-&#x27; &#x27;&#123;print $1,$3,$6&#125;&#x27; /etc/passwd</span><br><span class="line"></span><br><span class="line">###当然，如果不使用OFS定义，也可以使用字符串进行分割（但当输出的列较多是就比较费力）</span><br><span class="line">#输出以字符串”-“和”_“为分隔符(字符串必须用双引号)</span><br><span class="line">awk -F: &#x27;&#123;print $1&quot;-&quot;$3&quot;_&quot;$6&#125;&#x27; /etc/passwd</span><br><span class="line">#输出以tab为分隔符：\t</span><br><span class="line">awk -F: &#x27;&#123;print $1&quot;\t&quot;$3&#125;&#x27; /etc/passwd</span><br><span class="line">#输出以换行为分隔符：\n</span><br><span class="line">awk -F: &#x27;&#123;print $1&quot;\n&quot;$3&#125;&#x27; /etc/passwd</span><br><span class="line"></span><br><span class="line">##################输入记录的换行符：RS##################</span><br><span class="line">##默认以换行符进行划分行，可以通过RS去定义新的换行符</span><br><span class="line">如下：</span><br><span class="line">cat test.txt</span><br><span class="line">a,b,c;1,2</span><br><span class="line">3,4;x,y,z;aaa,b</span><br><span class="line">bb,ccc</span><br><span class="line">#使用”,“为分隔符,使用”;“为换行符</span><br><span class="line">awk  -F, -v RS=&#x27;;&#x27;  &#x27;&#123;print $2&#125;&#x27; test.txt</span><br><span class="line">b</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">y</span><br><span class="line">b</span><br><span class="line">bb</span><br><span class="line"></span><br><span class="line">##################输出的换行符：ORS#################</span><br><span class="line">#定义输出的换行符（默认是回车换行，可以自定义换行）</span><br><span class="line">#获取用户名以替换换行符合</span><br><span class="line">awk -F: -v ORS=&quot;&quot; &#x27;&#123;print $1&#125;&#x27; /etc/passwd</span><br><span class="line"></span><br><span class="line">###################列标：NF（number field）###################</span><br><span class="line">#打印列数NF</span><br><span class="line">awk -F: &#x27;&#123;print NF&#125;&#x27; /etc/passwd</span><br><span class="line">#打印最后一列$NF(NF列标记，$最后)</span><br><span class="line">awk -F: &#x27;&#123;print $NF&#125;&#x27; /etc/passwd</span><br><span class="line">#打印倒数第二列$(NF-1)</span><br><span class="line">awk -F: &#x27;&#123;print $(NF-1)&#125;&#x27; /etc/passwd</span><br><span class="line"></span><br><span class="line">##################行标：NR（number record）##################</span><br><span class="line">#仅打印列标</span><br><span class="line">awk &#x27;&#123;print NR&#125;&#x27; /etc/passwd</span><br><span class="line">#打印列标及内容（$0代表全部）</span><br><span class="line">awk &#x27;&#123;print NR,$0&#125;&#x27; /etc/passwd</span><br><span class="line">#打印指定行：第3行（NR==为真）</span><br><span class="line">awk &#x27;NR==3&#x27; /etc/passwd</span><br><span class="line">#打印指定行：第1~3和5行</span><br><span class="line">awk &#x27;NR&gt;=1&amp;&amp;NR&lt;=3;NR==5&#x27; /etc/passwd</span><br><span class="line"></span><br><span class="line">###########过滤（双斜线）：/ 《过滤内容》/ ###########</span><br><span class="line">#过滤包含root的行</span><br><span class="line">awk &#x27;/root/&#x27; /etc/passwd</span><br><span class="line">#过滤以root开头的行</span><br><span class="line">awk &#x27;/^root/&#x27; /etc/passwd</span><br><span class="line">#过滤root用户，并打印第1、3行(获取用户名、用户id)</span><br><span class="line">awk -F: &#x27;/^root/&#123;print $1,$3&#125;&#x27; /etc/passwd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###################运算###################</span><br><span class="line">#awk支持浮点运算（awk单独运算需加入BEGIN）</span><br><span class="line">awk &#x27;BEGIN &#123;print 10/3&#125;&#x27;</span><br><span class="line">#awk中print支持外界变量,引用外部变量需加$和单引号（printf不支持变量）</span><br><span class="line">AAA=100</span><br><span class="line">BBB=33</span><br><span class="line">awk &#x27;BEGIN &#123;print (&#x27;$AAA&#x27;-&#x27;$BBB&#x27;)/&#x27;$AAA&#x27;&#125;&#x27;</span><br><span class="line">#awk列求和（BEGIN标记初始SUM=0）</span><br><span class="line">awk -F &quot;《分隔符》&quot; &#x27;BEGIN&#123;SUM=0&#125;&#123;SUM=SUM+$《列标》&#125;END&#123;print SUM&#125;&#x27; 《文件》</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###printf格式化输出</span><br><span class="line">格式符：（格式符需要“”双引号引起了）</span><br><span class="line">%c：显示字符的ASCI吗</span><br><span class="line">%d，%i：显示十进制整数 </span><br><span class="line">%e，%E：显示科学计数法数值 </span><br><span class="line">%f：显示为浮点数</span><br><span class="line">%g，%G：以科学计数法或浮点形式显示数值 </span><br><span class="line">%s：显示字符串</span><br><span class="line">%u：无符号数</span><br><span class="line">%%：显示%自身</span><br><span class="line">修饰符</span><br><span class="line">#[.#]第一个数字控制显示的完度；第二个表示小数点后精度，如：%3.1f（整数3位，小数点一位）</span><br><span class="line">- 左对齐(默认右对齐)如：%-15s （字符宽度15，靠左对齐）</span><br><span class="line">+ 显示数值的正负符号如：%+d</span><br><span class="line"></span><br><span class="line">#$1为字符串用%s，设置长度为20个，$2为整数使用%d，长度10（多个变量需要多个%）</span><br><span class="line">awk -F: &#x27;&#123;printf &quot;%20s:%10d\n&quot;,  $1,$3&#125;&#x27; /etc/passwd</span><br><span class="line"></span><br><span class="line">#$1和最后一列$NF都是字符串，所以都用%s，且都定义左对齐</span><br><span class="line">awk -F: &#x27;&#123;printf &quot;%-20s:%-15s\n&quot;,  $1,$NF&#125;&#x27; /etc/passwd</span><br><span class="line"></span><br><span class="line">#运算</span><br><span class="line">#保留2位小数（%.2f）</span><br><span class="line">awk &#x27;BEGIN &#123;printf&quot;%.2f&quot;,10/3&#125;&#x27;</span><br><span class="line">#不保留小数（%.0f）</span><br><span class="line">awk &#x27;BEGIN &#123;printf&quot;%.0f&quot;,10/3&#125;&#x27;</span><br><span class="line">#printf不支持变量，但可以管道输入</span><br><span class="line">AAA=100</span><br><span class="line">BBB=33</span><br><span class="line">echo &quot;$AAA $BBB&quot; awk &#x27;&#123;printf &quot;%.2f&quot;,$1/$2&#125;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">################BEGIN和END################</span><br><span class="line">#BEGIN，表头输出=====,</span><br><span class="line">#第一个&#123;&#125;BEGIN读入文件之前执行，第二个&#123;&#125;文件操作，第三个&#123;&#125;END文件结束之后</span><br><span class="line">#仅打印BEGIN</span><br><span class="line">awk &#x27;BEGIN&#123;print &quot;======&quot;;print &quot;BEGIN内容&quot;&#125;&#x27; </span><br><span class="line">#打印BEGIN和文件内容</span><br><span class="line">awk &#x27;BEGIN&#123;print &quot;======&quot;;print &quot;BEGIN内容&quot;&#125;&#123;print&#125;&#x27; /etc/passwd</span><br><span class="line">#打印BEGIN+文件内容+END</span><br><span class="line">awk &#x27;BEGIN&#123;print &quot;======&quot;;print &quot;BEGIN内容&quot;&#125;&#123;print&#125;END&#123;print&quot;------&quot;&#125;&#x27; /etc/passwd</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> awk </tag>
            
            <tag> centos </tag>
            
            <tag> 判断 </tag>
            
            <tag> 过滤 </tag>
            
            <tag> 运算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos  lvm扩容</title>
      <link href="/posts/1e012f73.html"/>
      <url>/posts/1e012f73.html</url>
      
        <content type="html"><![CDATA[<p>LVM（Logical Volume Manager）逻辑卷管理</p><p>逻辑卷可以实现动态无限扩容（譬如：&#x2F;根目录空间不足的时候需要扩容）</p><p>3个概念</p><ul><li>pv：物理卷（物理卷是独立的个体，物理卷之间没有联系）</li><li>vg：卷组（将多个PV物理卷组合在一起）</li><li>lv：逻辑卷（从VG卷组中划分一部分空间做单个LV逻辑卷空间）</li></ul><p>所以，扩容就是将VG组中的剩余空间再分给LV（如果VG也不足，就再创建PV添加到VG即可）</p><p>查看lvm标识的几种方式：</p><p>df（设备名带有&#x2F;dev&#x2F;mapper）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-3.png"></p><p>lsblk -f（f参数用来显示分区的文件系统）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image.png"></p><p>fdisk -l （分区id标识为8e）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-2.png"></p><p>ll &#x2F;dev&#x2F;mapper&#x2F; （也可以查看设备文件）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-6.png"></p><h2 id="物理卷：pv"><a href="#物理卷：pv" class="headerlink" title="物理卷：pv"></a>物理卷：pv</h2><p>（创建create 显示display 简述s 缩减：reduce 容易造成数据丢失）</p><p>创建物理卷：pvcreate</p><p>（创建物理卷，如果是分区，类型id修改为lvm，）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvcreate 《分区或硬盘》</span><br></pre></td></tr></table></figure><p>查看物理卷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查看物理卷</span><br><span class="line">pvs</span><br><span class="line">#查看物理卷详细信息</span><br><span class="line">pvdisplay</span><br></pre></td></tr></table></figure><p>移除物理卷：pvremove</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvremove 《分区或硬盘》</span><br></pre></td></tr></table></figure><h2 id="卷组：vg"><a href="#卷组：vg" class="headerlink" title="卷组：vg"></a>卷组：vg</h2><p>（创建create 扩展extend 显示display 简述s ）</p><p>创建卷组：vgcreate</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgcreate 《卷组名》《物理卷》</span><br></pre></td></tr></table></figure><p>卷组扩容：vgextend</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgextend 《卷组名》《物理卷》</span><br></pre></td></tr></table></figure><p>查看卷组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#简单查看</span><br><span class="line">vgs</span><br><span class="line">#详细查看（PE大写，剩余PE、空间）</span><br><span class="line">vgdisplay</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-4.png"></p><p>移除卷组：vgreduce</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgreduce 《卷组名》 《物理卷》</span><br></pre></td></tr></table></figure><h2 id="逻辑卷：lv"><a href="#逻辑卷：lv" class="headerlink" title="逻辑卷：lv"></a>逻辑卷：lv</h2><p>（创建create 扩展extend 显示display 简述s ）</p><p>创建逻辑卷：lvcreate</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#创建逻辑卷名称、容量、及属于哪个VG组</span><br><span class="line">lvcreate -n 《逻辑卷名》-L 《容量》 《VG卷组名》</span><br></pre></td></tr></table></figure><p>逻辑卷扩容：lvextend</p><p>(小写l是以pe为单位，大写L是以容量为单位)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#如下，centos卷组中的root逻辑卷扩容10G（-r参数支持所有硬盘格式）</span><br><span class="line">lvextend -r -L +5G /dev/centos/root</span><br><span class="line">#扩容centos卷组中剩余的所有空间到root逻辑卷</span><br><span class="line">lvextend -r -l +100%free /dev/centos/root</span><br></pre></td></tr></table></figure><p>逻辑卷缩减：lvreduce</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#如下，centos卷组中的root逻辑卷缩减10G</span><br><span class="line">lvreduce -L -10G /dev/centos/root</span><br></pre></td></tr></table></figure><p>————————————————————————————————————————</p><p>如果是新建的lvm逻辑卷，需格式化后挂载就可以正常使用了，这里就不详写了，可以看我前面的文章（硬盘分区）</p><p>——————————————————————————————————————</p><p>至于非LVM的扩容，其实是更改柱面编号（前提是硬盘还有可以删除或多余的柱面）</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos扩容 </tag>
            
            <tag> lvm </tag>
            
            <tag> lvm扩容 </tag>
            
            <tag> 逻辑卷 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx 挂载本地目录</title>
      <link href="/posts/ded7412c.html"/>
      <url>/posts/ded7412c.html</url>
      
        <content type="html"><![CDATA[<p>偶尔需要用到本地目录，这里使用nginx代理一下</p><p>核心参数：autoindex on;</p><p>注1：selinux权限，懒人可以直接关闭！（403错误日志一般都是权限问题，需selinux权限）</p><p>注2：挂载目录内不要有索引页(如果不能移除index.html文件，则需index参数定义一个不存在的索引页。)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 888;</span><br><span class="line">server_name test.ffing.cn;</span><br><span class="line">root /opt/test;</span><br><span class="line"></span><br><span class="line">#缓存本地一天</span><br><span class="line">expires 1d;</span><br><span class="line">#开启自动列出目录 </span><br><span class="line">autoindex on;</span><br><span class="line">#关闭详细文件大小统计，让文件大小显示MB，GB单位，默认为b；</span><br><span class="line">autoindex_exact_size off; </span><br><span class="line">#显示的文件时间为文件的服务器时间</span><br><span class="line">autoindex_localtime on; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">           &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>root 和 alias区别：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#alias定义目录(必须绝对路径)</span><br><span class="line">location /test &#123;</span><br><span class="line">alias /opt/test;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述：当访问&#x2F;test是，nginx会直接跳转到alias定义的&#x2F;opt&#x2F;test目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /test &#123;</span><br><span class="line">root /opt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述：当访问&#x2F;test时，nginx会先到root定义目录&#x2F;opt，再追加location定义的uri：&#x2F;test，</p><p>最终实现访问&#x2F;test 到&#x2F;opt&#x2F;test</p><p>实例小技巧：</p><p>工作中总有写类似的目录需要nignx挂载，可以通过正则表达式快速实现</p><p>譬如在 &#x2F;opt&#x2F;share下的所有目录都需要nginx挂载目录,且要实现目录名访问</p><p>就可以利用正则表达式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#第一种方法：alias定义目录($1代表是正则中（.*）追加的uri)</span><br><span class="line">location ~ /share/(.*) &#123;</span><br><span class="line">alias /opt/share/$1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#第二种root定义目录</span><br><span class="line">location ~ /share/(.*) &#123;</span><br><span class="line">root /opt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问：ffing.cn&#x2F;share&#x2F;app则nginx跳转到&#x2F;opt&#x2F;share&#x2F;app</p><p>访问：ffing.cn&#x2F;share&#x2F;tomcat则nginx跳转到&#x2F;opt&#x2F;share&#x2F;tomcat</p><p>访问：ffing.cn&#x2F;share&#x2F;bak则nginx跳转到&#x2F;opt&#x2F;share&#x2F;tomcat</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> 代理本地 目录 </tag>
            
            <tag> 挂载本地目录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本 防御dos攻击</title>
      <link href="/posts/e45ed511.html"/>
      <url>/posts/e45ed511.html</url>
      
        <content type="html"><![CDATA[<p>firewalld禁用IP总是忘记，这里记录一下</p><p>用于云服务器dos攻击的防御脚本。</p><p>当某个IP连接数超过指定数后，屏蔽到此IP，我的脚本设置的连接数超过100，请根据自己情况而定，循环10秒执行一次。你也可以删除我的循环，定义计划任务。</p><p>后期措施：禁止IP访问后，建议禁止一段时间后再删除禁止的IP，可以再根据情况而定。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#允许一个IP最大连接数，超过则禁止访问</span><br><span class="line">NUM=100</span><br><span class="line"></span><br><span class="line">#判断是否安装netstat</span><br><span class="line">netstat --help &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -ne 0 ];then</span><br><span class="line">echo &quot;开始安装net-tools&quot;</span><br><span class="line">yum -y install net-tools</span><br><span class="line">fi</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">#获取最大连接数</span><br><span class="line">IPGITNUM=`netstat -nt awk  -F &quot; +:&quot; &#x27;&#123;print $6&#125;&#x27;sortuniq -csort -rhead -n1awk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">if [ $IPGITNUM -gt $NUM ];then</span><br><span class="line">#获取连接数大于连接数的第一个IP</span><br><span class="line">IPDENY=`netstat -nt awk  -F &quot; +:&quot; &#x27;&#123;print $6&#125;&#x27;sortuniq -csort -rawk &#x27;$1&gt;$NUM&#x27;head -n1awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">sed -i &quot;/&lt;\/zone&gt;/i &lt;rule family=&quot;ipv4&quot;&gt;    &lt;source address=&quot;$IPDENY&quot;/&gt;    &lt;reject/&gt;  &lt;/rule&gt;&quot; /etc/firewalld/zones/public.xml</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line">fi</span><br><span class="line">sleep 10</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> dos攻击 </tag>
            
            <tag> firewalld </tag>
            
            <tag> 屏蔽ip </tag>
            
            <tag> 连接数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bash 主机统计信息脚本</title>
      <link href="/posts/1a2f4092.html"/>
      <url>/posts/1a2f4092.html</url>
      
        <content type="html"><![CDATA[<p>统计信息脚本，留个备份</p><p>因为环境问题，做了多次过滤，如果想简单实现，也可以使用awk</p><p>如简单实现获取硬盘使用率大于10%的分区</p><p>awk 以空格或%为分隔符，取倒数第二列，大于10的行！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/07/image-2.png"></p><p>需要注意的是硬盘统计问题，fdisk或lsblk是所有硬盘（包含未挂载的），df只能统计已经挂载的，可根据需求编辑脚本。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-85.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#临时文件名</span><br><span class="line">FILE=&quot;devinfo.txt&quot;</span><br><span class="line">echo &gt; $FILE</span><br><span class="line">#主机名称</span><br><span class="line">echo &quot;主机名称：$HOSTNAME &quot; &gt;&gt; $FILE</span><br><span class="line"></span><br><span class="line">#IP地址</span><br><span class="line">IPLAN=$(hostname -I  awk -F &quot; &quot; &#x27;&#123;printf $1&#125;&#x27;)</span><br><span class="line">IPWAN=$(curl http://pv.sohu.com/cityjson 2&gt;&gt; /dev/null  awk -F &#x27;&quot;&#x27; &#x27;&#123;print $4&#125;&#x27;)</span><br><span class="line">echo &quot;内网地址：$IPLAN&quot; &gt;&gt; $FILE</span><br><span class="line">echo &quot;外网地址：$IPWAN&quot; &gt;&gt; $FILE</span><br><span class="line"></span><br><span class="line">#内存</span><br><span class="line">#内存统计以M为单位，防止低于1G内存仍然显示M单位</span><br><span class="line">MEM=`free -m grep &quot;Mem&quot; awk &#x27;&#123;print $2&#125;&#x27; `</span><br><span class="line">MEM1=`echo $MEM cut -d&#x27;m&#x27; -f1`</span><br><span class="line">#舍五入六时，需先echo变量（printf不支持直接变量）</span><br><span class="line">MEMORY=`echo &quot;$MEM1&quot;awk  &#x27;&#123;printf &quot;%.0f &quot;, $MEM1/1024 &#125;&#x27;`</span><br><span class="line">echo &quot;物理内存：$MEMORY G&quot; &gt;&gt; $FILE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#物理CPU数量</span><br><span class="line">CPU=`grep &#x27;physical id&#x27; /proc/cpuinfo  sort -u  wc -l`</span><br><span class="line">echo &quot;CPU数量：$CPU&quot;  &gt;&gt; $FILE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#硬盘数量</span><br><span class="line">#通过lsblk进行统计</span><br><span class="line">DISK=`lsblk grep diskwc -l`</span><br><span class="line">#通过fdisk进行统计</span><br><span class="line">#DISK=`fdisk -l awk &#x27;&#123;print $2&#125;&#x27;grep -E &quot;/dev/sdvdhd&quot;wc -l&quot;wc -l `</span><br><span class="line">echo &quot;硬盘数量：$DISK&quot; &gt;&gt; $FILE</span><br><span class="line">#总容量合计列利用awk&#x27;&#123;sum += $2&#125; END &#123;print sum&#125;&#x27;</span><br><span class="line">DISKSUM=`fdisk -lawk &#x27;&#123;print $2&#125;&#x27;grep -E &quot;/dev/[sd,hd,vd]&quot;awk -F&quot;：&quot;  &#x27;&#123;sum += $2&#125; END &#123;print sum&#125;&#x27;`</span><br><span class="line">#计量单位</span><br><span class="line">GB=`fdisk -l cut -d &#x27; &#x27; -f2,3grep -E &quot;/dev/[sd,hd,vd]&quot;awk &#x27;&#123;print $2&#125;&#x27;uniqcut -d&#x27;,&#x27; -f1`</span><br><span class="line">echo &quot;合计硬盘容量：$DISKSUM $GB&quot; &gt;&gt;$FILE</span><br><span class="line"></span><br><span class="line">#每块硬盘容量</span><br><span class="line">DISKSIZE=`fdisk -l cut -d &#x27; &#x27; -f2,3grep -E &quot;/dev/[sd,hd,vd]/$&quot;cut -d&#x27;,&#x27; -f1`</span><br><span class="line">echo &quot;$DISKSIZE&quot; &gt;&gt; $FILE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EXT=&quot;_&quot;</span><br><span class="line">DAY=`date &#x27;+%F&#x27;`</span><br><span class="line">#文件名</span><br><span class="line">FILENAME=&quot;$IPLAN$EXT$HOSTNAME$EXT$DAY.TXT&quot;</span><br><span class="line"></span><br><span class="line">cat $FILE &gt; $FILENAME</span><br><span class="line">rm -f $FILE</span><br><span class="line">cat $FILENAME</span><br><span class="line">echo &quot;##################################################&quot;</span><br><span class="line">echo &quot;信息已保存到 $FILENAME&quot;</span><br><span class="line">echo &quot;##################################################&quot;</span><br></pre></td></tr></table></figure><p>———————————————————————————————————————————</p><p>第二个文件名带时间</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-87.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">#临时文件名</span><br><span class="line">FILE=&quot;info_&quot;</span><br><span class="line">echo &gt; $FILE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#日期时间</span><br><span class="line">DAY=`date &#x27;+%F_%T&#x27;`</span><br><span class="line">echo $DAY &gt;&gt; $FILE</span><br><span class="line"></span><br><span class="line">#cpu10分钟负载</span><br><span class="line">CPU=`top -b -n1 head -n1cut -d&#x27;,&#x27; -f4`</span><br><span class="line">echo &quot;CPU-10分钟负载：$CPU&quot; &gt;&gt; $FILE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#内存使用率</span><br><span class="line">#使用printf保留2位小数</span><br><span class="line">MEM=`free -mawk &#x27;NR==2&#123;printf &quot;%.2f%%&quot;,($2-$4)/$2&#125;&#x27;`</span><br><span class="line">echo &quot;内存使用率：$MEM &quot; &gt;&gt; $FILE</span><br><span class="line"></span><br><span class="line">#使用print不能进行小数位格式化</span><br><span class="line">#MEM1=`free grep &quot;Mem&quot;awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">#MEM2=`free grep &quot;Mem&quot;awk &#x27;&#123;print $4&#125;&#x27;`</span><br><span class="line">#MEM=`awk &#x27;BEGIN&#123;print (&#x27;$MEM1&#x27;-&#x27;$MEM2&#x27;)/&#x27;$MEM1&#x27;*100&#125;&#x27;`</span><br><span class="line">#echo &quot;内存使用率：$MEM %&quot; &gt;&gt; $FILE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#注：硬盘使用率，可根据硬盘大小或设备名进行过滤（根据情况自己写选择）</span><br><span class="line">#第一种：过滤大于100000m=10G的硬盘（根据硬盘大小）</span><br><span class="line">#DISK=`df -mtail -n +2 awk &#x27; $2&gt;10000 &#x27;awk &#x27;&#123;print $5&#125;&#x27;sort -nrhead -n1`</span><br><span class="line">#第二种：过滤包含以/dev/vd,hd,sd和/结尾的硬盘（根据设备名）</span><br><span class="line">DISK=`df -h grep -E &quot;^/dev/[vd,hd,sd]/$&quot;grep -v &quot;/boot&quot;awk &#x27;&#123;print $5&#125;&#x27;sort -nrhead -n1`</span><br><span class="line">echo &quot;硬盘使用率最高：$DISK&quot; &gt;&gt; $FILE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#IP地址</span><br><span class="line">IPLAN=$(hostname -I  awk -F &quot; &quot; &#x27;&#123;printf $1&#125;&#x27;)</span><br><span class="line">echo &quot;内网地址：$IPLAN&quot; &gt;&gt; $FILE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#保存文件名</span><br><span class="line">EXT=&quot;_&quot;</span><br><span class="line">cp $FILE&#123;,$IPLAN$EXT`date &#x27;+%F_%T&#x27;`&#125;</span><br><span class="line">rm -f $FILE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">FILENAME=`ls -l ./ grep $FILE$IPLAN awk &#x27;&#123;print $9&#125;&#x27;tail -n1`</span><br><span class="line">cat $FILENAME</span><br><span class="line">echo &quot;==============================================&quot;</span><br><span class="line">echo &quot;信息已保存到：$FILENAME&quot;</span><br><span class="line">echo &quot;==============================================&quot;</span><br></pre></td></tr></table></figure><p>因为我发现虚拟机系统硬盘可能不是SD&#x2F;VD&#x2F;HD开头的，也可以通过过滤硬盘大小来实现，所有要根据情况而定</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#过滤大于10000M=10G的硬盘</span><br><span class="line">df -mtail -n +2 awk &#x27; $2&gt;10000 &#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bash </tag>
            
            <tag> shell脚本 </tag>
            
            <tag> 统计主机信息 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 部署多个tomcat并systemd控制</title>
      <link href="/posts/65c613e1.html"/>
      <url>/posts/65c613e1.html</url>
      
        <content type="html"><![CDATA[<p>tomcat包是绿色文件，所以以包的方式部署win和linux集群的方式是一样的，唯一需要更改的就是server.xml端口（保障端口不冲突），就实现了集群。</p><p>我的脚本：</p><p>bash &lt;(curl <a href="https://gitee.com/ffing/onekey/raw/master/onekey.sh">https://gitee.com/ffing/onekey/raw/master/onekey.sh</a>)</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-83.png"></p><h2 id="第一种方法：快捷方式"><a href="#第一种方法：快捷方式" class="headerlink" title="第一种方法：快捷方式"></a>第一种方法：快捷方式</h2><p>win集群：复制N个包，修改N个server.xml端口，创建N对快捷方式到桌面（start.bat、shutodwn.bat）</p><p>linux集群：复制N个包，修改N个server.xml端口，创建N对软链接到&#x2F;usr&#x2F;bin下(start.sh、shutdown.sh)</p><p>这种快捷方式部署的方式，效率很高，什么也不用配置，创建快捷方式就OK，但后期管理就很不方便了（譬如上个zabbix，脚本就需要再根据情况编写）</p><h2 id="第二种方法：配置环境变量"><a href="#第二种方法：配置环境变量" class="headerlink" title="第二种方法：配置环境变量"></a>第二种方法：配置环境变量</h2><p>配置环境变量，就可以实现systemd进行控制。</p><h4 id="流程："><a href="#流程：" class="headerlink" title="流程："></a>流程：</h4><ul><li>下载安装tomcat</li><li>配置环境变量</li><li>更新tomcat变量</li><li>修改tomcat访问端口</li><li>防火墙放行端口</li><li>创建systemd服务文件</li><li>测试</li></ul><p>本次集群以3个tomcat8为例：</p><p>（为了不影响原有tomcat，分别命名tomcat1、tomcat2、tomcat3）</p><ul><li>tomcat1：&#x2F;usr&#x2F;local&#x2F;tomcat-group&#x2F;tomcat-8_1（路径及变量加_1，端口81xx）</li><li>tomcat2：&#x2F;usr&#x2F;locat&#x2F;tomcat-group&#x2F;tomcat-8_2（路径及变量加_2，端口82xx）</li><li>tomcat3：&#x2F;usr&#x2F;local&#x2F;tomcat-group&#x2F;tomcat-8_3（路径及变量加_3，端口83xx）</li></ul><h4 id="1-下载tomcat，安装到-x2F-usr-x2F-local"><a href="#1-下载tomcat，安装到-x2F-usr-x2F-local" class="headerlink" title="1.下载tomcat，安装到&#x2F;usr&#x2F;local"></a>1.下载tomcat，安装到&#x2F;usr&#x2F;local</h4><p>（我前面有详写：<a href="https://blog.ffing.cn/linux/centos-%e5%ae%89%e8%a3%85tomcat%e5%b9%b6systemctl%e6%8e%a7%e5%88%b6">centos安装tomcat</a>）</p><p>官网下载：<a href="http://tomcat.apache.org/">http://tomcat.apache.org/</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-68.png"></p><p>下载tomcat，并复制2个tomcat包，并重命名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#安装wget（如已安装可以忽略）</span><br><span class="line">yum -y install wget</span><br><span class="line">#下载tomcat并重命名为tomcat-8.tar.gz（地址可能失效，请官网更新）</span><br><span class="line">wget https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.73/bin/apache-tomcat-8.5.73.tar.gz --no-check-certificate -O tomcat-8.tar.gz</span><br><span class="line">#解压（解压后的文件名需要更改为tomcat-8）</span><br><span class="line">mkdir ./tomcat-8 &amp;&amp; tar -xvf tomcat-8.tar.gz  -C ./tomcat-8 --strip-components 1</span><br><span class="line">#创建/usr/local/tomcat-group目录</span><br><span class="line">mkdir /usr/local/tomcat-group</span><br><span class="line">#重命名为tomcat8_1</span><br><span class="line">cp -r tomcat-8 /usr/local/tomcat-group/tomcat-8_1</span><br><span class="line">#复制出第二个tomcat-8_2</span><br><span class="line">cp -r tomcat-8 /usr/local/tomcat-group/tomcat-8_2</span><br><span class="line">#复制出第三个tomcat-8_3</span><br><span class="line">cp -r tomcat-8 /usr/local/tomcat-group/tomcat-8_3</span><br></pre></td></tr></table></figure><h4 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2.配置环境变量"></a>2.配置环境变量</h4><p>注：tomcat需java环境请提前安装！</p><p>编辑&#x2F;etc&#x2F;profile（如仅限本用户使用，修改家目录下.bash_profile）加如下变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#tomcat_1环境变量</span><br><span class="line">export TOMCAT_HOME_1=/usr/local/tomcat-group/tomcat-8_1</span><br><span class="line">export CATALINA_HOME_1=$TOMCAT_HOME_1</span><br><span class="line">export CATLINA_BASE_1=$TOMCAT_HOME_1</span><br><span class="line"></span><br><span class="line">#tomcat_2环境变量</span><br><span class="line">export TOMCAT_HOME_2=/usr/local/tomcat-group/tomcat-8_2</span><br><span class="line">export CATALINA_HOME_2=$TOMCAT_HOME_2</span><br><span class="line">export CATLINA_BASE_2=$TOMCAT_HOME_2</span><br><span class="line"></span><br><span class="line">#tomcat_3环境变量</span><br><span class="line">export TOMCAT_HOME_3=/usr/local/tomcat-group/tomcat-8_3</span><br><span class="line">export CATALINA_HOME_3=$TOMCAT_HOME_3</span><br><span class="line">export CATLINA_BASE_3=$TOMCAT_HOME_3</span><br></pre></td></tr></table></figure><p>环境变量生效:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h4 id="3-更新tomcat变量"><a href="#3-更新tomcat变量" class="headerlink" title="3.更新tomcat变量"></a>3.更新tomcat变量</h4><p>将刚配置的环境变量加入到对应的tomcat*&#x2F;bin&#x2F;catalina.sh中</p><p>tomcat1：vi &#x2F;usr&#x2F;local&#x2F;tomcat-group&#x2F;tomcat-8_1&#x2F;bin&#x2F;catalina.sh</p><p>在#&#x2F;bin&#x2F;bash下追加环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#tomcat_1环境变量</span><br><span class="line">export TOMCAT_HOME_1=/usr/local/tomcat-group/tomcat-8_1</span><br><span class="line">export CATALINA_HOME_1=$TOMCAT_HOME_1</span><br><span class="line">export CATLINA_BASE_1=$TOMCAT_HOME_1</span><br></pre></td></tr></table></figure><p>tomcat2：vi &#x2F;usr&#x2F;local&#x2F;tomcat-group&#x2F;tomcat-8_2&#x2F;bin&#x2F;catalina.sh</p><p>在#&#x2F;bin&#x2F;bash下追加环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#tomcat_2环境变量</span><br><span class="line">export TOMCAT_HOME_2=/usr/local/tomcat-group/tomcat-8_2</span><br><span class="line">export CATALINA_HOME_2=$TOMCAT_HOME_2</span><br><span class="line">export CATLINA_BASE_2=$TOMCAT_HOME_2</span><br></pre></td></tr></table></figure><p>tomcat3：vi &#x2F;usr&#x2F;local&#x2F;tomcat-group&#x2F;tomcat-8_3&#x2F;bin&#x2F;catalina.sh</p><p>在#&#x2F;bin&#x2F;bash下追加环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#tomcat_3环境变量</span><br><span class="line">export TOMCAT_HOME_3=/usr/local/tomcat-group/tomcat-8_3</span><br><span class="line">export CATALINA_HOME_3=$TOMCAT_HOME_3</span><br><span class="line">export CATLINA_BASE_3=$TOMCAT_HOME_3</span><br></pre></td></tr></table></figure><h4 id="4-修改tomcat访问端口"><a href="#4-修改tomcat访问端口" class="headerlink" title="4.修改tomcat访问端口"></a>4.修改tomcat访问端口</h4><p>修改server.xml文件，保障端口不冲突，才可以每个tomcat正常访问。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-81.png"></p><p>tomcat1：编辑 &#x2F;usr&#x2F;local&#x2F;tomcat-group&#x2F;tomcat-8_1&#x2F;conf&#x2F;server.xml</p><p>8005端口：改为8105 8080端口：改为8180 8009端口：改为8109</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/port=&quot;8080&quot;/port=&quot;8180&quot;/g&#x27; /usr/local/tomcat-group/tomcat-8_1/conf/server.xml</span><br><span class="line">sed -i &#x27;s/port=&quot;8005&quot;/port=&quot;8105&quot;/g&#x27; /usr/local/tomcat-group/tomcat-8_1/conf/server.xml</span><br><span class="line">sed -i &#x27;s/port=&quot;8009&quot;/port=&quot;8109&quot;/g&#x27; /usr/local/tomcat-group/tomcat-8_1/conf/server.xml</span><br></pre></td></tr></table></figure><p>tomcat2：编辑 &#x2F;usr&#x2F;local&#x2F;tomcat-group&#x2F;tomcat-8_2&#x2F;conf&#x2F;server.xml</p><p>8005端口：改为8205 8080端口：改为8280 8009端口：改为8209</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/port=&quot;8080&quot;/port=&quot;8280&quot;/g&#x27; /usr/local/tomcat-group/tomcat-8_2/conf/server.xml</span><br><span class="line">sed -i &#x27;s/port=&quot;8005&quot;/port=&quot;8205&quot;/g&#x27; /usr/local/tomcat-group/tomcat-8_2/conf/server.xml</span><br><span class="line">sed -i &#x27;s/port=&quot;8009&quot;/port=&quot;8209&quot;/g&#x27; /usr/local/tomcat-group/tomcat-8_2/conf/server.xml</span><br></pre></td></tr></table></figure><p>tomcat3：编辑 &#x2F;usr&#x2F;local&#x2F;tomcat-group&#x2F;tomcat-8_3&#x2F;conf&#x2F;server.xml</p><p>8005端口：改为8305 8080端口：改为8380 8009端口：改为8309</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/port=&quot;8080&quot;/port=&quot;8380&quot;/g&#x27; /usr/local/tomcat-group/tomcat-8_3/conf/server.xml</span><br><span class="line">sed -i &#x27;s/port=&quot;8005&quot;/port=&quot;8305&quot;/g&#x27; /usr/local/tomcat-group/tomcat-8_3/conf/server.xml</span><br><span class="line">sed -i &#x27;s/port=&quot;8009&quot;/port=&quot;8309&quot;/g&#x27; /usr/local/tomcat-group/tomcat-8_3/conf/server.xml</span><br></pre></td></tr></table></figure><h4 id="5-防火墙放行端口"><a href="#5-防火墙放行端口" class="headerlink" title="5.防火墙放行端口"></a>5.防火墙放行端口</h4><p>放行3个tomcat对应的端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#放行tomcat1：8180</span><br><span class="line">firewall-cmd --add-port=8180/tcp --zone=public --permanent</span><br><span class="line">#放行tomcat2：8280</span><br><span class="line">firewall-cmd --add-port=8280/tcp --zone=public --permanent</span><br><span class="line">#放行tomcat3：8380</span><br><span class="line">firewall-cmd --add-port=8380/tcp --zone=public --permanent</span><br><span class="line">#重新加载防火墙</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h4 id="6-创建systemd服务文件"><a href="#6-创建systemd服务文件" class="headerlink" title="6.创建systemd服务文件"></a>6.创建systemd服务文件</h4><p>创建systemd服务文件，实现systemctl控制</p><p>创建3个tomcat服务文件，tomcat1.service、tomcat2.service、tomcat3.service,分别对应各自的路径文件。</p><p>tomcat1：vi &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;tomcat1.service</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=tomcat-8_1</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/tomcat-group/tomcat-8_1/bin/startup.sh</span><br><span class="line">ExecStop=/usr/local/tomcat-group/tomcat-8_1/bin/shutdown.sh</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">PrivateTmp=ture</span><br><span class="line">Restart=always</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>tomcat2：vi &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;tomcat2.service</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=tomcat-8_2</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/tomcat-group/tomcat-8_2/bin/startup.sh</span><br><span class="line">ExecStop=/usr/local/tomcat-group/tomcat-8_2/bin/shutdown.sh</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">PrivateTmp=ture</span><br><span class="line">Restart=always</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>tomcat3：vi &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;tomcat3.service</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=tomcat-8_3</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/tomcat-group/tomcat-8_3/bin/startup.sh</span><br><span class="line">ExecStop=/usr/local/tomcat-group/tomcat-8_3/bin/shutdown.sh</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">PrivateTmp=ture</span><br><span class="line">Restart=always</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>重新加载服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h4 id="7-测试"><a href="#7-测试" class="headerlink" title="7.测试"></a>7.测试</h4><p>为了方便区分3个tomcat内容，分别向第二个，和第三个tomcat主页加入自己tomcat名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#第一个tomcat主页，body标签下加入“这是tomcat1”</span><br><span class="line">sed -i &#x27;/&lt;body&gt;/a 这是tomcat1&#x27; /usr/local/tomcat-group/tomcat-8_1/webapps/ROOT/index.jsp</span><br><span class="line">#第二个tomcat主页，body标签下加入“这是tomcat2”</span><br><span class="line">sed -i &#x27;/&lt;body&gt;/a 这是tomcat2&#x27; /usr/local/tomcat-group/tomcat-8_2/webapps/ROOT/index.jsp</span><br><span class="line">#第三个tomcat主页，body标签下加入“这是tomcat3”</span><br><span class="line">sed -i &#x27;/&lt;body&gt;/a 这是tomcat3&#x27; /usr/local/tomcat-group/tomcat-8_3/webapps/ROOT/index.jsp</span><br></pre></td></tr></table></figure><p>重启3个tomcat：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#懒人一次重启3个（当然你也可以单独启动每一个，进行测试）</span><br><span class="line">systemctl restart tomcat1 tomcat2 tomcat3</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-86.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> tomcat </tag>
            
            <tag> linux </tag>
            
            <tag> systemd </tag>
            
            <tag> tomcat集群 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 安装tomcat并systemctl控制</title>
      <link href="/posts/93d10bf1.html"/>
      <url>/posts/93d10bf1.html</url>
      
        <content type="html"><![CDATA[<p>tomcat依赖java环境，所以需要先安装java。</p><p>因为这几天需要tomcat集群环境，这里使用tomcat8包进行安装。</p><p>安装很简单，就是个绿色包，直接运行就可以，但为了后期管理方便要配置环境变量。</p><p>我的脚本：</p><p>bash &lt;(curl <a href="https://gitee.com/ffing/onekey/raw/master/onekey.sh">https://gitee.com/ffing/onekey/raw/master/onekey.sh</a>)</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-72.png"></p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ul><li>安装配置java</li><li>安装配置tomcat</li><li>配置system服务</li><li>测试</li></ul><h2 id="一，安装配置JAVA"><a href="#一，安装配置JAVA" class="headerlink" title="一，安装配置JAVA"></a>一，安装配置JAVA</h2><p>请看我前面文章：<a href="https://blog.ffing.cn/linux/centos-%e5%ae%89%e8%a3%85java">centos 安装JAVA</a></p><h2 id="二，安装配置tomcat"><a href="#二，安装配置tomcat" class="headerlink" title="二，安装配置tomcat"></a>二，安装配置tomcat</h2><p>tomcat官网：<a href="https://tomcat.apache.org/">https://tomcat.apache.org/</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-68.png"></p><p>下载,并解压tomcat包到&#x2F;usr&#x2F;local&#x2F;</p><p>（<strong>解压的路径需要记住，后面要配置环境</strong>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#安装wget（如已安装可以忽略）</span><br><span class="line">yum -y insatll wget</span><br><span class="line">#下载tomcat（路径可能失效，请官网更新）</span><br><span class="line">wget https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.72/bin/apache-tomcat-8.5.72.tar.gz --no-check-certificate -O tomcat-8.tar.gz</span><br><span class="line">#解压</span><br><span class="line">mkdir ./tomcat-8 &amp;&amp; tar -xvf tomcat-8.tar.gz  -C ./tomcat-8 --strip-components 1</span><br><span class="line">#移动到/usr/local</span><br><span class="line">mv tomcat-8 /usr/local</span><br></pre></td></tr></table></figure><p>配置tomcat环境变量</p><p>&#x2F;etc&#x2F;profile追加以下内容（核对自己的tomcat路径）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#tomcat环境变量</span><br><span class="line">export TOMCAT_HOME=/usr/local/tomcat-8</span><br><span class="line">export CATALINA_HOME=$TOMCAT_HOME</span><br><span class="line">export CATLINA_BASE=$TOMCAT_HOME</span><br></pre></td></tr></table></figure><p>重新加载&#x2F;etc&#x2F;profile</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="第三步，配置system服务"><a href="#第三步，配置system服务" class="headerlink" title="第三步，配置system服务"></a>第三步，配置system服务</h2><p>system服务路径：&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system</p><p>创建tomcat.service服务文件(文件名就是服务名)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/tomcat.service</span><br></pre></td></tr></table></figure><p>(核对配置种你的tomcat路径)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=tomcat</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/tomcat-8/bin/startup.sh</span><br><span class="line">ExecStop=/usr/local/tomcat-8/bin/shutdown.sh</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">PrivateTmp=ture</span><br><span class="line">Restart=always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>注：进程守护建议：Type&#x3D;forking 、 Restart&#x3D;[always&#x2F;on-failure]</p><p>重新加载服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h2 id="第四步，测试"><a href="#第四步，测试" class="headerlink" title="第四步，测试"></a>第四步，测试</h2><p>我的tomcat创建的服务文件是tomcat，所有服务名就是tomcat</p><p>启动：systemctl start tomcat</p><p>停止：systemctl stop tomcat</p><p>重启：systemctl restart tomcat</p><p>配置开机启动：systemctl enable tomcat</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-71.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> java </tag>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 搭建ftp(匿名+本地用户)</title>
      <link href="/posts/26cdf4b7.html"/>
      <url>/posts/26cdf4b7.html</url>
      
        <content type="html"><![CDATA[<p>今天临时需要用下ftp，发现我云服务器的ftp被我改完配置后没有恢复，导致无法使用，这里记录一下，顺便存个脚本。</p><p>bash &lt;(curl <a href="https://gitee.com/ffing/onekey/raw/master/onekey.sh">https://gitee.com/ffing/onekey/raw/master/onekey.sh</a>)</p><p>本脚本vsftp实现：匿名+本地用户访问FTP！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-66.png"></p><p>流程：</p><ul><li>创建ftp账号&#x2F;组</li><li>安装vsftpd</li><li>创建目录及文件</li><li>配置vsftpd</li><li>测试ftp</li></ul><h2 id="第一步，创建用户-x2F-组"><a href="#第一步，创建用户-x2F-组" class="headerlink" title="第一步，创建用户&#x2F;组"></a>第一步，创建用户&#x2F;组</h2><p>创建FTP组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#以&quot;ftpgroup&quot;为ftp组</span><br><span class="line">groupadd ftpgroup</span><br></pre></td></tr></table></figure><p>创建FTP目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#以&quot;/ftp&quot;为根目录，并更改属组</span><br><span class="line">mkdir /ftp</span><br><span class="line">chown :ftpgroup /ftp</span><br></pre></td></tr></table></figure><p>创建FTP用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#创建用户&quot;ffing&quot;（配置bash、家目录、组、备注）</span><br><span class="line">useradd -s /sbin/nologin -d /ftp/ffing -g ftpgroup -c &quot;FTP用户&quot; ffing</span><br></pre></td></tr></table></figure><h2 id="第二步，安装vsftpd"><a href="#第二步，安装vsftpd" class="headerlink" title="第二步，安装vsftpd"></a>第二步，安装vsftpd</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#安装</span><br><span class="line">yum -y install vsftpd</span><br><span class="line">#启动</span><br><span class="line">systemctl start vsftpd</span><br><span class="line">systemctl enable vsftpd</span><br><span class="line">#防火墙放行vsftpd服务</span><br><span class="line">firewall-cmd --add-service=ftp --permanent</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">###seliunx</span><br><span class="line">#查看ftpd的selinux权限</span><br><span class="line">getsebool -a  grep ftpd</span><br><span class="line">#seliunx放行ftp</span><br><span class="line">setsebool -P ftpd_full_access=on</span><br></pre></td></tr></table></figure><h2 id="第三步，创建目录及文件"><a href="#第三步，创建目录及文件" class="headerlink" title="第三步，创建目录及文件"></a>第三步，创建目录及文件</h2><p>vsftp默认目录树：</p><p>&#x2F;etc&#x2F;vsftpd&#x2F;<br>├── ftpusers<br>├── user_list<br>├── vsftpd.conf<br>└── vsftpd_conf_migrate.sh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#添加上面创建的ftp登录账号(白名单文件user_list)</span><br><span class="line">echo ffing &gt;&gt; /etc/vsftpd/user_list</span><br><span class="line">#####添加匿名用户访问（根据自己需求）</span><br><span class="line">echo anonymous &gt;&gt; /etc/vsftpd/user_list</span><br><span class="line">#创建chroot_list用户列表（允许切换用户目录）</span><br><span class="line">touch /etc/vsftpd/chroot_list</span><br></pre></td></tr></table></figure><h2 id="第四步，配置vsftpd"><a href="#第四步，配置vsftpd" class="headerlink" title="第四步，配置vsftpd"></a>第四步，配置vsftpd</h2><p>1.编辑 &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf</p><p>实现ftp默认目录为&#x2F;ftp，并锁定用户根目录禁止切换，userlist控制登陆名单</p><p>配置内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#匿名登录</span><br><span class="line">anonymous_enable=YES</span><br><span class="line">#允许本地用户模式</span><br><span class="line">local_enable=YES</span><br><span class="line">#写权限</span><br><span class="line">write_enable=YES</span><br><span class="line">#本地用户模式创建文件的umask值</span><br><span class="line">local_umask=022</span><br><span class="line">dirmessage_enable=YES</span><br><span class="line">xferlog_enable=YES</span><br><span class="line">connect_from_port_20=YES</span><br><span class="line">xferlog_std_format=YES</span><br><span class="line">listen=NO</span><br><span class="line">listen_ipv6=YES</span><br><span class="line">pam_service_name=vsftpd</span><br><span class="line"></span><br><span class="line">###登录控制###</span><br><span class="line">###############################################################</span><br><span class="line">#当userlist_enable=NO</span><br><span class="line">#仅(ftpusers）中的用户禁止访问，匿名、本地用户均可以访问</span><br><span class="line"></span><br><span class="line">#当userlist_enable=YES，userlist_deny=NO</span><br><span class="line">#（user_list）中的用户可访问，（ftpusers）禁止访问，其它用户也禁止访问</span><br><span class="line">#如果（ftpusers）和（user_list）存在相同用户将禁止访问,优先禁用《ftpusers》中的用户</span><br><span class="line">#如想匿名用户也可以访问，需anonymous加入（user_list）</span><br><span class="line"></span><br><span class="line">#当userlist_enable=YES，userlist_deny=YES</span><br><span class="line">#（ftpusers和user_list）中的用户禁止访问，其它用户可以访问</span><br><span class="line">###############################################################</span><br><span class="line">userlist_enable=YES</span><br><span class="line">userlist_deny=NO</span><br><span class="line"></span><br><span class="line">tcp_wrappers=YES</span><br><span class="line"></span><br><span class="line">###指定默认目录###</span><br><span class="line">#本地用户默认目录</span><br><span class="line">local_root=/ftp</span><br><span class="line">#匿名用户默认目录</span><br><span class="line">anon_root=/ftp</span><br><span class="line"></span><br><span class="line">###锁定目录###</span><br><span class="line">#锁定根目录，禁止用户切换</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">#允许写权限（否则500错误）</span><br><span class="line">allow_writeable_chroot=YES</span><br><span class="line">#启用列表</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line">#写入列表内的用户允许切换用户</span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br></pre></td></tr></table></figure><p>2.编辑 &#x2F;etc&#x2F;pam.d&#x2F;vsftpd</p><p>注释第四行：#auth required pam_shells.so</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;4s/^/#/&#x27; /etc/pam.d/vsftpd</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-57.png"></p><p>重启ftp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart vsftpd</span><br></pre></td></tr></table></figure><h2 id="第四步，测试"><a href="#第四步，测试" class="headerlink" title="第四步，测试"></a>第四步，测试</h2><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-58.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-59.png"></p><p>匿名+本地用户：网页、客户端都可以正常登录。</p><p>1.在&#x2F;ftp公共目录下，所有用户，具有读、执行（下载权限），</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-60.png"></p><p>2.在自己用户名目录下，具有读、写、执行（上传下载权限）,其它用户无任何权限无法访问。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-61.png"></p><p>注：权限问题，删除文件或目录,和文件或目录本身权限无关，其实是删除上级目录的inode信息，所以需要删除文件，必须上级目录具备写权限</p><p>目录权限：（通常r、x是一起的，没有x将只能看到目录内文件名）</p><ul><li>r权限，可以看到目录内文件</li><li>w权限，增加、修改、删除</li><li>x权限，可以对目录内的文件进行下一步操作</li></ul><p>文件权限：</p><ul><li>r权限，可以查看文件内容</li><li>w权限，增加、修改、删除</li><li>x权限，执行权限</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> ftp </tag>
            
            <tag> vsftpd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell echo颜色</title>
      <link href="/posts/2864b428.html"/>
      <url>/posts/2864b428.html</url>
      
        <content type="html"><![CDATA[<p>echo -e 激活转义字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;\033[字背景颜色;字体颜色;字体属性m 《输出的内容》 \033[0m&quot;</span><br><span class="line">echo -e &quot;\e[字背景颜色;字体颜色;字体属性m 《输出的内容》 \e[0m&quot;</span><br></pre></td></tr></table></figure><ul><li><code>\033</code> 转义起始符，定义一个转义序列，可以使用 <code>\e</code> 或 <code>\E</code> 代替。</li><li><code>[</code> 表示开始定义颜色。</li><li><code>字背景颜色</code> 范围 <code>40-47</code> 。</li><li><code>字体颜色</code> 范围 <code>30-37</code> 。</li><li><code>m</code> 转义终止符，表示颜色定义完毕。</li><li>再次使用 <code>\033[</code> ，表示再次开启颜色定义，<code>0</code> 表示颜色定义结束，所以 <code>\033[0m</code> 的作用是恢复之前的配色方案。</li></ul><p><strong>背景色</strong><br>（40-47）</p><p><strong>字体色</strong><br>（30-37）</p><p><strong>字体控制属性</strong></p><p>默认&#x3D;0<br>黑色&#x3D;40<br>红色&#x3D;41<br>绿色&#x3D;42<br>黄色&#x3D;43<br>蓝色&#x3D;44<br>紫色&#x3D;45<br>青色&#x3D;46<br>白色&#x3D;47</p><p>默认&#x3D;0<br>黑色&#x3D;30<br>红色&#x3D;31<br>绿色&#x3D;32<br>黄色&#x3D;33<br>蓝色&#x3D;34<br>紫色&#x3D;35<br>青色&#x3D;36<br>白色&#x3D;37</p><p><code>\e[0m</code> 关闭所有属性<br><code>\e[1m</code> 设置高亮度<br><code>\e[4m</code> 下划线<br><code>\e[5m</code> 闪烁<br><code>\e[7m</code> 反显，撞色显示，显示为白字黑底，或者显示为黑底白字<br><code>\e[8m</code> 消影，字符颜色将会与背景颜色相同<br><code>\e[nA</code> 光标上移 n 行<br><code>\e[nB</code> 光标下移 n 行<br><code>\e[nC</code> 光标右移 n 行<br><code>\e[nD</code> 光标左移 n 行<br><code>\e[y;xH</code> 设置光标位置<br><code>\e[2J</code> 清屏<br><code>\e[K</code> 清除从光标到行尾的内容<br><code>\e[s</code> 保存光标位置<br><code>\e[u</code> 恢复光标位置<br><code>\e[?25</code> 隐藏光标<br><code>\e[?25h</code> 显示光标</p><p>字体颜色：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;\e[30m 黑色 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[31m 红色 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[32m 绿色 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[33m 黄色 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[34m 蓝色 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[35m 紫色 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[36m 青色 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[37m 白色 \e[0m&quot;</span><br></pre></td></tr></table></figure><p>背景颜色：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;\e[40m 黑底 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[41m 红底 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[42m 绿底 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[43m 黄底 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[44m 蓝底 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[45m 紫底 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[46m 青底 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[47m 白底 \e[0m&quot;</span><br></pre></td></tr></table></figure><p>组合定义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;\e[42;30m 绿底黑字 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[41;33m 红底黄字 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[40;37m 黑底黄字 \e[0m&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> linux </tag>
            
            <tag> echo </tag>
            
            <tag> echo颜色 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos-sed在指定行前后追加、替换、插入等操作</title>
      <link href="/posts/32361c04.html"/>
      <url>/posts/32361c04.html</url>
      
        <content type="html"><![CDATA[<p>时间久了，有点忘记了，呵呵呵，备注一下</p><p>sed -i i——&gt;所在行的上一行，追加行</p><p>sed -i a——&gt;所在行的下一行，追加行</p><p>sed -i c——&gt;行标，整行替换</p><p>sed -i &amp;——&gt;连接符，在本行指定字符串追加或插入</p><p>一、在匹配行前后插入内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#匹配行前加</span><br><span class="line">sed -i &#x27;/《匹配字段》/i 《插入内容》&#x27; 《文件名》</span><br><span class="line">#匹配行后加</span><br><span class="line">sed -i &#x27;/《匹配字段》/a 《插入内容》&#x27; 《文件名》</span><br></pre></td></tr></table></figure><p>例：firewall文件加入禁止访问IP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;/&lt;\/zone&gt;/i &lt;rule family=&quot;ipv4&quot;&gt;    &lt;source address=&quot;$IP&quot;/&gt;    &lt;reject/&gt;  &lt;/rule&gt;&quot; /etc/firewalld/zones/public.xml</span><br></pre></td></tr></table></figure><p>二，在具体行号前后增加内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#在指定行前插入内容</span><br><span class="line">sed -i &#x27;《行号》 i 《插入内容》&#x27; 《文件名》</span><br><span class="line">#在指定行后加入一行内容</span><br><span class="line">sed -i &#x27;《行号》 a 《插入内容》&#x27; 《文件名》</span><br><span class="line">注：sed中$符代表最后</span><br></pre></td></tr></table></figure><p>例：对test.txt文件第一行进行操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">#test.txt内容</span><br><span class="line">[root@ffing_cn ~]# cat test.txt</span><br><span class="line">1111</span><br><span class="line">2222</span><br><span class="line">3333</span><br><span class="line">4444</span><br><span class="line"></span><br><span class="line">### i——&gt;所在行的上一行，追加行</span><br><span class="line">#i,在第一行前，添加一行内容aaa</span><br><span class="line">[root@ffing_cn ~]# sed &#x27;1 i aaa&#x27; test.txt</span><br><span class="line">aaa</span><br><span class="line">1111</span><br><span class="line">2222</span><br><span class="line">3333</span><br><span class="line">4444</span><br><span class="line">#在第一行前，添加两行内容:aaa第一行、bbb第二行（\n回车换行）</span><br><span class="line">[root@ffing_cn ~]# sed &#x27;1i aaa\nbbb&#x27; test.txt</span><br><span class="line">aaa</span><br><span class="line">bbb</span><br><span class="line">1111</span><br><span class="line">2222</span><br><span class="line">3333</span><br><span class="line">4444</span><br><span class="line"></span><br><span class="line">### a——&gt;所在行的下一行，追加行</span><br><span class="line">#在第一行之后，添加aaa</span><br><span class="line">[root@ffing_cn ~]# sed &#x27;1a aaa&#x27; test.txt</span><br><span class="line">1111</span><br><span class="line">aaa</span><br><span class="line">2222</span><br><span class="line">3333</span><br><span class="line">4444</span><br><span class="line">#在第一行之后，添加两行（\n回车换行）</span><br><span class="line">[root@ffing_cn ~]# sed &#x27;1a aaa\nbbb&#x27; test.txt</span><br><span class="line">1111</span><br><span class="line">aaa</span><br><span class="line">bbb</span><br><span class="line">2222</span><br><span class="line">3333</span><br><span class="line">4444</span><br><span class="line"></span><br><span class="line">###c——&gt;行标，整行替换</span><br><span class="line">#将第一行内容替换，使用c参数</span><br><span class="line">[root@ffing_cn ~]# sed &#x27;1c aaa&#x27; test.txt</span><br><span class="line">aaa</span><br><span class="line">2222</span><br><span class="line">3333</span><br><span class="line">4444</span><br><span class="line"></span><br><span class="line">###&amp;——&gt;连接符，活学活用，可以在指定字符串前后追加，或行尾追加</span><br><span class="line">#以数字“2”开头行，保留原有内容，追加字符串“ffing”</span><br><span class="line">#简单讲就是使用&#x27;s///&#x27;进行替换，在替换时&amp;连接符，连接的加是前面部分！（就如同excel中的&amp;效果一样）</span><br><span class="line"></span><br><span class="line">#连接效果</span><br><span class="line">#在2开头行，行尾连接字符串ffing</span><br><span class="line">#注意.*是通配符，用来匹配2后面点任意内容，如果省略则时插入效果</span><br><span class="line">[root@ffing_cn ~]# sed &#x27;s/^2.*/&amp;ffing/&#x27; test.txt</span><br><span class="line">1111</span><br><span class="line">2222ffing</span><br><span class="line">3333</span><br><span class="line">4444</span><br><span class="line">##在2开头行，行首添加字符串ffing</span><br><span class="line">[root@ffing_cn ~]#  sed &#x27;s/^2.*/ffing&amp;/&#x27; test.txt</span><br><span class="line">1111</span><br><span class="line">ffing2222</span><br><span class="line">3333</span><br><span class="line">4444</span><br><span class="line"></span><br><span class="line">#插入效果</span><br><span class="line">#在3后插入</span><br><span class="line">[root@ffing_cn ~]# echo 123456 sed &#x27;s/3/&amp;ffing/&#x27;</span><br><span class="line">123ffing456</span><br><span class="line">#在3前插入</span><br><span class="line">[root@ffing_cn ~]#  sed &#x27;s/^2.*/ffing&amp;/&#x27; test.txt</span><br><span class="line">1111</span><br><span class="line">ffing2222</span><br><span class="line">3333</span><br><span class="line">4444</span><br></pre></td></tr></table></figure><p>例：在最后一行前后添加内容（最后一行使用$符表示）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#test.txt内容</span><br><span class="line">[root@ffing_cn ~]# cat test.txt</span><br><span class="line">1111</span><br><span class="line">2222</span><br><span class="line">3333</span><br><span class="line">4444</span><br><span class="line">#在最后一行前，增加一行xxx</span><br><span class="line">[root@ffing_cn ~]# sed &#x27;$ i xxx&#x27; test.txt</span><br><span class="line">1111</span><br><span class="line">2222</span><br><span class="line">3333</span><br><span class="line">xxx</span><br><span class="line">4444</span><br><span class="line">#在最后一行前，增加两行($后跟空格，避免变量)</span><br><span class="line">[root@ffing_cn ~]# sed &#x27;$ i xxx\nyyy&#x27; test.txt</span><br><span class="line">1111</span><br><span class="line">2222</span><br><span class="line">3333</span><br><span class="line">xxx</span><br><span class="line">yyy</span><br><span class="line">4444</span><br><span class="line">#在最后一行之后，增加两行($后跟空格，避免变量)</span><br><span class="line">[root@ffing_cn ~]# sed &#x27;$ a xxx\nyyy&#x27; test.txt</span><br><span class="line">1111</span><br><span class="line">2222</span><br><span class="line">3333</span><br><span class="line">4444</span><br><span class="line">xxx</span><br><span class="line">yyy</span><br></pre></td></tr></table></figure><p>拓展：</p><p>获取指定行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ffing_cn ~]# cat test.txt</span><br><span class="line">1111</span><br><span class="line">2222</span><br><span class="line">3333</span><br><span class="line">4444</span><br><span class="line"></span><br><span class="line">#####获取最后一行</span><br><span class="line">#sed</span><br><span class="line">[root@ffing_cn ~]# sed -n &#x27;$&#x27;p test.txt</span><br><span class="line">4444</span><br><span class="line">#awk</span><br><span class="line">[root@ffing_cn ~]# awk &#x27;END&#123;print&#125;&#x27; test.txt</span><br><span class="line">4444</span><br><span class="line"></span><br><span class="line">#####获取指定行（第三行为例）</span><br><span class="line">#sed</span><br><span class="line">[root@ffing_cn ~]# sed -n 3p test.txt</span><br><span class="line">3333</span><br><span class="line">#awk(NR行标，==比较符)</span><br><span class="line">[root@ffing_cn ~]# awk &#x27;NR==3&#x27; test.txt</span><br><span class="line">3333</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> sed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell grep/sed/awk/head|tail获取指定行或指定列</title>
      <link href="/posts/1f1528f7.html"/>
      <url>/posts/1f1528f7.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-56.png"></p><p>譬如要打印num.txt中的第三行内容</p><p>grep:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#过滤包含字母“c”的行</span><br><span class="line">cat num.txt grep c</span><br><span class="line">#grep还有个精确过滤\&lt;\&gt;，一般很少用到</span><br><span class="line">#如包含root和roott行，只过滤root就需要grep &#x27;\&lt; &quot;root&quot;\&gt;&#x27;</span><br><span class="line">cat num.txt grep &#x27;\&lt; &quot;你要过滤的字段&quot;\&gt;&#x27;</span><br></pre></td></tr></table></figure><p>sed：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#打印包含字母“c”的行（-n）</span><br><span class="line">cat num.txt sed -n &#x27;/c/p&#x27;</span><br><span class="line">#打印包含字母“c”开头的行</span><br><span class="line">cat num.txt sed -n &#x27;/^c/p&#x27;</span><br><span class="line">#打印第3行</span><br><span class="line">cat num.txt sed -n &#x27;3p&#x27;</span><br><span class="line"></span><br><span class="line">#区间打印</span><br><span class="line">#打印第1~3行和第5行</span><br><span class="line">cat num.txt sed -n &#x27;1,3p;5p&#x27;</span><br><span class="line">#打印从第3行开始,再向后5行</span><br><span class="line">cat num.txt sed -n &#x27;3,+5p&#x27;</span><br><span class="line">#从第3行到尾行($结尾，打印最后一行使用$p)</span><br><span class="line">cat num.txt sed -n &#x27;3,$p&#x27;</span><br><span class="line">#打印字母a开头的行到字母开头c开头的行</span><br><span class="line">cat num.txt sed -n &#x27;/^a/,/^c/p&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">####打印奇数行（~2代表跳2行）</span><br><span class="line">#p打印</span><br><span class="line">seq 10 sed -n &#x27;1~2p&#x27;</span><br><span class="line">#也可以使用d删除偶数行，来获取偶数行</span><br><span class="line">seq 10 sed -n &#x27;2~2d&#x27;</span><br><span class="line">####打印偶数行（~2代表跳2行）</span><br><span class="line">seq 10 sed -n &#x27;2~2p&#x27;</span><br><span class="line">#也可以使用d删除奇数行，来获取偶数行</span><br><span class="line">seq 10 sed -n &#x27;1~2d&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###sed整行替换 “c”</span><br><span class="line">#cat test.log</span><br><span class="line">2021-11-03nginx  test1post/admin.php</span><br><span class="line">2021-11-0315:30:30tomcatget/wp-index.php</span><br><span class="line">#将包含nginx整行替换为“=========”</span><br><span class="line"> cat test.logsed &#x27;/post/c ============&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>awk：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#打印包含字母“c”的行</span><br><span class="line">cat num.txt awk ‘/c/’</span><br><span class="line">#打印以字母“c”开头的行</span><br><span class="line">cat num.txt awk ‘/^c/’</span><br><span class="line">#打印不以字母“c”开头的行（！取反）</span><br><span class="line">cat num.txt awk ‘！/^c/’</span><br><span class="line">#打印第3行，通过NR==值为真的行（NR行记录）</span><br><span class="line">cat num.txt awk &#x27;NR==3&#x27;</span><br><span class="line"></span><br><span class="line">#区间打印</span><br><span class="line">#打印1~3行和第5行</span><br><span class="line">cat num.txt awk &#x27;NR&gt;=1&amp;&amp;NR&lt;=3;NR==5&#x27;</span><br><span class="line">#打印字母a开头的行到字母开头c开头的行</span><br><span class="line">cat num.txt awk&#x27;/^a/,/^c/&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">####打印奇数行（AWK中0和空值为假，非空为真）</span><br><span class="line">#(第一行i=0取反就是1，有值，为真，打印；第二行，i=1，取反就是0，为假，不打印)</span><br><span class="line">seq 10  awk &#x27;i=!i&#x27;</span><br><span class="line">####打印偶数行(!取反)</span><br><span class="line">seq 10  awk &#x27;!(i=!i)&#x27;</span><br><span class="line"></span><br><span class="line">########指定列######</span><br><span class="line">###打印指定列大于或小于指定值的行（硬盘使用率使用较多！）</span><br><span class="line">例：硬盘使用率大于</span><br><span class="line">#df -h</span><br><span class="line">devtmpfs        486M     0  486M    0% /dev</span><br><span class="line">tmpfs           496M     0  496M    0% /dev/shm</span><br><span class="line">tmpfs           496M  748K  495M    1% /run</span><br><span class="line">tmpfs           496M     0  496M    0% /sys/fs/cgroup</span><br><span class="line">/dev/vda1        20G  2.3G   17G   13% /</span><br><span class="line">/dev/vda1        20G  10G    10G   50% /home</span><br><span class="line">#如下，打印硬盘使用率大于20%的行</span><br><span class="line">#df -h tr -d &quot;%&quot;awk &#x27;$5&gt;20&#123;print&#125;&#x27;</span><br><span class="line"></span><br><span class="line">###不打印指定列，其他列正常打印（其实也就将指定列为空）</span><br><span class="line">例：排除第2、3列</span><br><span class="line">#cat test.log</span><br><span class="line">2021-11-03nginx  test1post/admin.php</span><br><span class="line">2021-11-0315:30:30tomcatget/wp-index.php</span><br><span class="line">#cat test.logawk &#x27;&#123;$2=$3=&quot;&quot;;print&#125;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>headtail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#通过head先过滤前3行，再tail显示过滤后的最后一行</span><br><span class="line">cat num.txt head -n3tail -n1</span><br><span class="line"></span><br><span class="line">#head正着数行号（默认10行，默认+号可以不写）</span><br><span class="line">#只显示前两行+2</span><br><span class="line">cat num.txt head -n 2</span><br><span class="line">#不显示后2行-2</span><br><span class="line">cat num.txt head -n -2</span><br><span class="line"></span><br><span class="line">#tail倒着数行号（默认10行，默认减号可以不写）</span><br><span class="line">#只显示最后两行-2</span><br><span class="line">cat num.txt tail -n 2</span><br><span class="line">#不显示最前面2行（tail顶部多一，所以2行需要+3）</span><br><span class="line">cat num.txt tail -n +3</span><br></pre></td></tr></table></figure><p>如需截取，可以通过awk或者cut进行获取。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#awk显示第1、2（默认以空格为分隔符）</span><br><span class="line">awk &#x27;&#123;print $1,2&#125;&#x27;</span><br><span class="line">#awk显示第1、2，以：为分隔符（-F指定分割符）</span><br><span class="line">awk  -F &#x27;:&#x27; &#x27;&#123;print $1,2&#125;&#x27;</span><br><span class="line"></span><br><span class="line">#cut：-d指定分隔符、-f显示列</span><br><span class="line">#cut第1、2列,以：分割</span><br><span class="line">cut -d &#x27;:&#x27; -f1,2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> awk </tag>
            
            <tag> centos </tag>
            
            <tag> sed </tag>
            
            <tag> shell </tag>
            
            <tag> head </tag>
            
            <tag> tail </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 批量创建及批量重命名</title>
      <link href="/posts/96953183.html"/>
      <url>/posts/96953183.html</url>
      
        <content type="html"><![CDATA[<p>创建：{范围}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#批量创建文件：log.1.txt到log.10.txt</span><br><span class="line">touch log.&#123;1..10&#125;.txt</span><br><span class="line">#批量创建目录：dir.a到dir.z</span><br><span class="line">mkdir dir.&#123;a..z&#125;</span><br></pre></td></tr></table></figure><p>重命名：rename</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#语法：rename 《旧》 《新》 《范围》</span><br><span class="line">#将目录下所有文件名中，包含log的文件名全部替换为file</span><br><span class="line">rename log file *</span><br><span class="line">#将目录下已log开头的文件名中，log 替换为 file</span><br><span class="line">rename log file log*</span><br><span class="line">#将目录下所有文件名中，包含&quot;.&quot;的文件名全部替换为&quot;_&quot;(.需要转义)</span><br><span class="line">rename \. _ *</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 批量创建 </tag>
            
            <tag> 批量重命名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 用户/组及查看</title>
      <link href="/posts/9f3fce39.html"/>
      <url>/posts/9f3fce39.html</url>
      
        <content type="html"><![CDATA[<p>写的有些早，忘记发布了，内容可能有写凌乱。</p><p>小技巧，add（增加）、del（删除delete）、mod（修改modify）</p><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><p>创建用户：useradd</p><p>(默认创建配置信息&#x2F;etc&#x2F;default&#x2F;useradd)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd [-mMnr][-c &lt;备注&gt;][-d &lt;登入目录&gt;][-e &lt;有效期限&gt;][-f &lt;缓冲天数&gt;][-g &lt;群组&gt;][-G &lt;群组&gt;][-s &lt;shell&gt;][-u &lt;uid&gt;][用户帐号]</span><br></pre></td></tr></table></figure><p>参数解析：</p><ul><li>-c&lt;备注&gt; 　加上备注文字。备注文字会保存在passwd的备注栏位中。</li><li>-d&lt;登入目录&gt; 　指定用户登入时的起始目录。</li><li>-D 　变更预设值．</li><li>-e&lt;有效期限&gt; 　指定帐号的有效期限。</li><li>-f&lt;缓冲天数&gt; 　指定在密码过期后多少天即关闭该帐号。</li><li>-g&lt;群组&gt; 　指定用户所属的群组。</li><li>-G&lt;群组&gt; 　指定用户所属的附加群组。</li><li>-m 　自动建立用户的登入目录。</li><li>-M 　不要自动建立用户的登入目录。</li><li>-n 　取消建立以用户名称为名的群组．</li><li>-r 　建立系统帐号。</li><li>-s<shell>　 　指定用户登入后所使用的shell。</li><li>-u<uid> 　指定用户ID。</li></ul><p>创建组：groupadd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd [-g gid [-o]] [-r] [-f] group</span><br></pre></td></tr></table></figure><ul><li>-g：指定新建工作组的 id；</li><li>-r：创建系统工作组，系统工作组的组ID小于 500；</li><li>-K：覆盖配置文件 “&#x2F;ect&#x2F;login.defs”；</li><li>-o：允许添加组 ID 号不唯一的工作组。</li><li>-f,–force: 如果指定的组已经存在，此选项将失明了仅以成功状态退出。当与 -g 一起使用，并且指定的GID_MIN已经存在时，选择另一个唯一的GID（即-g关闭）</li></ul><p>创建组id为12345：group -g 12345 《组名》</p><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p>userdel</p><p>删除用户：userdel 《用户名》</p><p>删除用户及目录相关数据：userdel -r 《用户名》</p><p>groupdel</p><p>删除组：groupdel 《组名》</p><p>注：删除组的时候，需要删除或移除这个组下，以这个为主组的用户。</p><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><p>修改用户usermod</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod [-LU][-c &lt;备注&gt;][-d &lt;登入目录&gt;][-e &lt;有效期限&gt;][-f &lt;缓冲天数&gt;][-g &lt;群组&gt;][-G &lt;群组&gt;][-l &lt;帐号名称&gt;][-s &lt;shell&gt;][-u &lt;uid&gt;][用户帐号]</span><br></pre></td></tr></table></figure><ul><li>-c&lt;备注&gt; 　修改用户帐号的备注文字。</li><li>-d登入目录&gt; 　修改用户登入时的目录。</li><li>-e&lt;有效期限&gt; 　修改帐号的有效期限。</li><li>-f&lt;缓冲天数&gt; 　修改在密码过期后多少天即关闭该帐号。</li><li>-g&lt;群组&gt; 　修改用户所属的群组。</li><li>-G&lt;群组&gt; 　修改用户所属的附加群组。</li><li>-l&lt;帐号名称&gt; 　修改用户帐号名称。</li><li>-L 　锁定用户密码，使密码无效。</li><li>-s<shell> 　修改用户登入后所使用的shell。</li><li>-u<uid> 　修改用户ID。</li><li>-U 　解除密码锁定。</li></ul><p>修改用户shell为禁止登录：usermod -s &#x2F;sbin&#x2F;nologin 《用户名》</p><p>修改用户家目录为&#x2F;aaa: usermod -d &#x2F;aaa 《用户名》</p><p>修改用户所属组：usermod -g 《组名》 《用户名》</p><p><strong>修改附属组</strong>（附属组可以是多个）：usermod -g 《组1，组2…》 《用户名》</p><p><strong>追加附属组：</strong>usermod -aG 《组1，组2…》 《用户名》</p><p>临时锁定用户：usermod -L 《用户名》</p><p>#被锁定时用户加密文件&#x2F;etc&#x2F;shadow中，用户加密密码字段前会多个！或*</p><p>解除锁定用户：usermod -U 《用户名》</p><p>注：usermod中，组名也可以使用组ID代替</p><p>passwd</p><p>交换式修改用户密码：passwd 《用户名》</p><p>管道修改用户密码：<em>echo “《新密码》”passwd –stdin 《用户名》</em></p><p>（注：history可以看到历史记录，一般脚本中使用）</p><p>————————————————————————————————————————</p><p>gpasswd</p><p>从组中删除某个用户：gpasswd -d 《用户名》《组名》</p><p>chmod权限修改：</p><p>chmod [ugoa…][[+-&#x3D;][rwxX] 《文件或目录》</p><p>修改文件或目录权限：chmod 777 《文件或目录》</p><p>chown所有者、所属组修改：“：”分割</p><p>修改文件或目录所有者：chown 《用户名》《文件或目录》</p><p>修改文件或目录所属组：chown :《用户组》 《文件或目录》</p><p>所有者所属组同时修改： chown 《用户名》:《用户组》 《文件或目录》</p><p>复制属性：chown –reference&#x3D;《文件或目录1》 《文件或目录2》</p><p>递归：chown -R《用户名》:《用户组》 《文件或目录》</p><p>_______________________________________________</p><h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><p>查看用户：</p><p>查看用户id及组id：id 《用户名》</p><p>查看用户所属组组：groups 《用户名》</p><p>查看某个组有哪些用户：groupmems -l -g 《组名》（当然你可以过滤passwd文件）</p><p>查看所有用户id、组id、家目录、shell类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#getent命令</span><br><span class="line">getent passwd</span><br><span class="line">getent passwd 《用户名》</span><br><span class="line">#passwd文件</span><br><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure><p>查看所有组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#getent命令</span><br><span class="line">getent group</span><br><span class="line">getent group 《组名》</span><br><span class="line">#group文件</span><br><span class="line">cat /etc/group</span><br></pre></td></tr></table></figure><p>查看账号信息：chage</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-d, --lastday 最近日期(将最近一次密码设置时间设为“最近日期”</span><br><span class="line">-E, --expiredate 过期日期(将帐户过期时间设为“过期日期”</span><br><span class="line">-h, --help                    显示此帮助信息并推出</span><br><span class="line">-I, --inactive INACITVE(过期 INACTIVE 天数后，设定密码为失效状态</span><br><span class="line">-l, --list                    显示帐户信息</span><br><span class="line">-m, --mindays 最小天数(将两次改变密码之间相距的最小天数设为“最小天数”</span><br><span class="line">-M, --maxdays MAX_DAYS(密码最大有效天数）</span><br><span class="line">-R, --root CHROOT_DIR         chroot 到的目录</span><br><span class="line">-W, --warndays 警告天数       将过期警告天数设为“警告天数”</span><br></pre></td></tr></table></figure><p>————————————————————————————————————————</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 用户/组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos  硬盘分区</title>
      <link href="/posts/be327589.html"/>
      <url>/posts/be327589.html</url>
      
        <content type="html"><![CDATA[<p>windows和linux分区流程都是一样的。</p><p>创建硬盘分区表格式–&gt;创建分区–&gt;格式化分区–&gt;挂载分区</p><p>（硬盘分区使用parted、fdisk、gdisk，格式化使用mkfs.*）</p><p>查看块设备（硬盘、分区大小）：lsblk</p><p>查看块设备（分区类型、uuid、挂载点）：lsblk -f</p><p>查看块设备uuid：blkid</p><p>centos7下同步分区到内核：partprobe</p><p>centos6下同步分区到内核：partx -a 《设备名》（增加分区）</p><p>centos6下同步分区到内核：partx -d –nr 《你删除的分区编号》《设备名》（减少分区）</p><p>3种分区工具：fdisk、gdisk、parted</p><p>fdisk对mbr分区</p><p>gdisk对gpt分区</p><p>parted对mbr、gpt都可以</p><h2 id="parted命令"><a href="#parted命令" class="headerlink" title="parted命令"></a>parted命令</h2><ul><li>可以处理mbr和guid</li><li>可以处理2T以上硬盘（fdisk只可以2T以下）</li><li><strong>可以交互也可以直接命令参数执行。</strong></li><li>命令执行后立即生效！</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#创建硬盘分区表格式--&gt;创建分区--&gt;格式化分区--&gt;挂载分区</span><br><span class="line">#mktable        --&gt;mkpart --&gt;mkfs.*  --&gt;mount</span><br></pre></td></tr></table></figure><p>查看parted帮助：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted --help</span><br></pre></td></tr></table></figure><p>查看所有硬盘及分区信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted -l</span><br></pre></td></tr></table></figure><p>查看指定硬盘分区信息：print</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted /dev/《设备名》 print</span><br></pre></td></tr></table></figure><p>查看指定硬盘未分配空间：print free</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted /dev/《设备名》 print free</span><br></pre></td></tr></table></figure><p>定义分区表格式：mktable</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#（msdos是mbr，gpt是guid）</span><br><span class="line">#定义硬盘分区格式：为mbr</span><br><span class="line">parted /dev/《设备名》 mktable msdos</span><br><span class="line">#定义硬盘分区格式：为guid</span><br><span class="line">parted /dev/《设备名》 mktable gpt</span><br></pre></td></tr></table></figure><p>创建分区：mkpart</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#区间默认单位为M，也可以指定单位</span><br><span class="line">parted /dev/《设备名》mkpart 《分区类型》《起始区间》 《结束区间》</span><br><span class="line"></span><br><span class="line">注：PART-TYPE分区类型主要有primary-简写p（主分区）, extended-简写e（扩展分区）, logical-简写l（逻辑区）. 扩展分区和逻辑分区只对msdos</span><br></pre></td></tr></table></figure><p>例：&#x2F;dev&#x2F;sdb为10G硬盘，分3个分区，第一分区1G，第二分区2G，第三分区剩余7G</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#在分区的时候查看剩余可用空间：print free</span><br><span class="line"></span><br><span class="line">###以默认M为单位（3个主分区）</span><br><span class="line">parted /dev/sdb mkpart p  0 1024</span><br><span class="line">parted /dev/sdb mkpart p  1025 3072</span><br><span class="line">parted /dev/sdb mkpart p  3072 10240</span><br><span class="line">###以G为单位（1个主分区，1个扩展分区;扩展分区分2个逻辑分区）</span><br><span class="line">parted /dev/sdb mkpart primary  0 1g</span><br><span class="line">parted /dev/sdb mkpart e  1g 10g</span><br><span class="line">parted /dev/sdb mkpart l  1g 3g</span><br><span class="line">parted /dev/sdb mkpart l  3g 10g</span><br></pre></td></tr></table></figure><p>调整分区大小：resizepart</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resizepart 《分区编号》 《结束区间》</span><br></pre></td></tr></table></figure><p>删除分区：rm</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted /dev/《设备名》 rm  《分区编号》</span><br></pre></td></tr></table></figure><h2 id="fdisk命令"><a href="#fdisk命令" class="headerlink" title="fdisk命令"></a>fdisk命令</h2><p>fdisk和gdisk操作类似，比较简单，我这里简单写下参数。</p><ul><li>处理mbr（其实也可以处理gpt）</li><li>处理2T以下硬盘</li><li>执行完需w保存，才可生效</li><li>交互式处理（如果要实现脚本非交互，可以实时echo或&lt;文件）</li></ul><p>fdisk常用参数：</p><ul><li>m:帮助</li><li>p：打印分区表</li><li>n：创建分区</li><li>d：删除分区</li><li>v：校验分区</li><li>t：更改分区类型</li><li>w：保存，退出</li><li>q：不保存，退出</li></ul><p>fdisk 非交互式方法，因为fdisk支持标准输入，所以可以使用echo或导入文件来实现。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#例：/dev/sdb 创建2G分区</span><br><span class="line">#第一种echo传参(\n代表换行、回车，连续3个回车)</span><br><span class="line">echo -e &#x27;n\np\n\n\n+2G\nw&#x27;  fdisk /dev/sdb</span><br><span class="line">#第二种通过文件导入</span><br><span class="line">cat test.txt</span><br><span class="line">n</span><br><span class="line">p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+2G</span><br><span class="line">w</span><br><span class="line">fdisk /dev/sdb &lt; test.txt</span><br></pre></td></tr></table></figure><h2 id="分区格式化"><a href="#分区格式化" class="headerlink" title="分区格式化"></a>分区格式化</h2><p>分区后需要对分区进行格式化以后可以挂载使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#格式时直接使用对应格式化进行分区</span><br><span class="line">mkfs.《分区类型》 《硬盘分区》</span><br><span class="line">#或者使用mkfs命令进行分区（参数较多，一般只使用-t指定分区类型）</span><br><span class="line">mkfs -t 《分区类型》 《硬盘分区》</span><br></pre></td></tr></table></figure><h2 id="临时挂载、卸载分区mount-x2F-umount"><a href="#临时挂载、卸载分区mount-x2F-umount" class="headerlink" title="临时挂载、卸载分区mount&#x2F;umount"></a>临时挂载、卸载分区mount&#x2F;umount</h2><p>查看已挂载分区：mount grep ^&#x2F;dev （或者lsblk -f）</p><p>查看uuid对应的设备分区：findfs UUID&#x3D;****</p><p>挂载分区：mount</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#挂载点必须存在</span><br><span class="line">mount 《设备名称或uuid》 《挂载点》</span><br><span class="line">#例：以设备名挂载</span><br><span class="line">#mount /dev/sdb1 /mnt</span><br><span class="line">#例：以uuid挂载</span><br><span class="line">#mount UUID=&quot;8995736a-7d5d-41b3-a19f-9fa7efc1872a&quot; /mnt</span><br></pre></td></tr></table></figure><p>卸载分区:umount</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">umount 《设备名称或uuid或挂载点》</span><br><span class="line">#例：以设备名卸载</span><br><span class="line">#umount /dev/sdb1</span><br><span class="line">#例：以uuid卸载</span><br><span class="line">#umount UUID=&quot;8995736a-7d5d-41b3-a19f-9fa7efc1872a&quot;</span><br><span class="line">#例：以挂载点卸载</span><br><span class="line">#umount /mnt</span><br></pre></td></tr></table></figure><h2 id="永久挂载（开机挂载）"><a href="#永久挂载（开机挂载）" class="headerlink" title="永久挂载（开机挂载）"></a>永久挂载（开机挂载）</h2><p>编辑&#x2F;etc&#x2F;fstab</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#设备名     挂载点           文件系统       参数       备份  扇区检验</span><br><span class="line">#Device    Mount point    filesystem   parameters  dump fsck</span><br><span class="line">/dev/sdb1    /mnt/sdb1      ext4        default     0    0</span><br><span class="line">UUID=&quot;****&quot;  /mnt/sdb1      ext4        default     0    0</span><br></pre></td></tr></table></figure><p>第一列 Device: 磁盘设备名或者UUID（推荐UUID，唯一标识）</p><p>第二列 Mount point：挂载点</p><p>第三列 filesystem： 文件系统</p><p>第四列 parameters文件系统参数：</p><p>Async&#x2F;sync</p><p>设置是否为同步方式运行，默认为async</p><p>auto&#x2F;noauto </p><p> 当下载mount -a 的命令时，此文件系统是否被主动挂载。默认为auto</p><p>rw&#x2F;ro        </p><p> 是否以以只读或者读写模式挂载</p><p>exec&#x2F;noexec        </p><p> 限制此文件系统内是否能够进行”执行”的操作</p><p>user&#x2F;nouser</p><p>是否允许用户使用mount命令挂载</p><p>suid&#x2F;nosuid</p><p>是否允许SUID的存在</p><p>Usrquota</p><p>启动文件系统支持磁盘配额模式</p><p>Grpquota</p><p>启动文件系统对群组磁盘配额模式的支持</p><p>Defaults</p><p>同事具有rw,suid,dev,exec,auto,nouser,async等默认参数的设置</p><p>第五列 dump：备份</p><p>         0</p><p>代表不要做dump备份</p><p>         1</p><p>代表要每天进行dump的操作</p><p>         2</p><p>代表不定日期的进行dump操作</p><p>第六列 fsck：检验扇区（开机系统默认会以fsck检验我们系统是否为完整）</p><p>0</p><p>不要检验</p><p>1</p><p>最早检验（一般根目录会选择）</p><p>2</p><p>1级别检验完成之后进行检验</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 硬盘分区 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 设置默认启动级别</title>
      <link href="/posts/d348702f.html"/>
      <url>/posts/d348702f.html</url>
      
        <content type="html"><![CDATA[<p>centos有7个启动级别</p><p>0 — 表示关机级别<br>1 — 单用户模式<br>2 — 多用户模式，不带NFS（Network File Syetem）<br>3 — 多用户模式，完全的多用户模式（不带桌面的，纯命令行模式）<br>4 — 没有被使用的模式（被保留模式）<br>5 — X11，完整的图形化界面模式<br>6 — 表示重启级别</p><p>centos6可以通过编辑 &#x2F;etc&#x2F;inittab 进行修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#3代表默认启动级别（只需修改3或改为5即可）</span><br><span class="line">id:3:initdefault:</span><br></pre></td></tr></table></figure><p>centos7启动方式有systemd管理，可以查看&#x2F;etc&#x2F;inittab注释</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-55.png"></p><p>可以从注释中看到启动级别：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">multi-user.target: 启动级别3</span><br><span class="line">graphical.target:  启动级别5</span><br></pre></td></tr></table></figure><p>查看当前启动级别：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl get-default</span><br></pre></td></tr></table></figure><p>设置启动级别：（如果忘记拼写可以继续查看&#x2F;etc&#x2F;inittab注释）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#设置默认启动级别为3</span><br><span class="line">systemctl set-default multi-user.target</span><br><span class="line">#设置默认启动级别为5</span><br><span class="line">systemctl set-default graphical.targe</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 默认启动级别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本-监测硬盘空间实现钉钉告警</title>
      <link href="/posts/df53ffb0.html"/>
      <url>/posts/df53ffb0.html</url>
      
        <content type="html"><![CDATA[<p>因为我的云服务器，做的有定时备份，刚开始内容少，备份空间也就小，最近发现，备份体积越来越大，导致我一两个月就需要去清理一下备份，这里做个简单的shell脚本，crontab做个定时任务即可，如果想功能全面点可以上zabbix。</p><p>当硬盘空间大于80%时，钉钉机器人告警（详细的可以看我前面的<a href="https://blog.ffing.cn/linux/zabbix-%e9%85%8d%e7%bd%ae%e9%92%89%e9%92%89%e5%91%8a%e8%ad%a6">zabbix钉钉告警</a>），当然也可以做删除备份操作，看自己情况。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-53.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-54.png"></p><h2 id="第一步，创建钉钉告警脚本"><a href="#第一步，创建钉钉告警脚本" class="headerlink" title="第一步，创建钉钉告警脚本"></a>第一步，创建钉钉告警脚本</h2><p>安装python及依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#安装epel源</span><br><span class="line">yum -y install epel-release</span><br><span class="line">#安装python及依赖模块</span><br><span class="line">yum -y install python &amp;&amp; yum -y install python-pip  &amp;&amp; pip install requests</span><br></pre></td></tr></table></figure><p>创建dingding.py ，并添加执行权限</p><p>注意：需要修改2处：webhook地址和日志路径，改为你自己的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">#coding:utf-8</span><br><span class="line">import requests,json,sys,os,datetime</span><br><span class="line"># 机器人的Webhook地址</span><br><span class="line">webhook=&quot;你的钉钉webhook&quot;</span><br><span class="line">#日志路径</span><br><span class="line">log=&quot;日志存放路径&quot;</span><br><span class="line"></span><br><span class="line">user=sys.argv[1]</span><br><span class="line">text=sys.argv[3]</span><br><span class="line">data=&#123;</span><br><span class="line"> &quot;msgtype&quot;: &quot;text&quot;,</span><br><span class="line"> &quot;text&quot;: &#123;</span><br><span class="line"> &quot;content&quot;: text</span><br><span class="line"> &#125;,</span><br><span class="line"> &quot;at&quot;: &#123;</span><br><span class="line"> &quot;atMobiles&quot;: [</span><br><span class="line"> # 在web端用户绑定媒介中通过指定用户注册是的手机号，可以通知指定人员，否则只发消息，不艾特具体人</span><br><span class="line"> user</span><br><span class="line"> ],</span><br><span class="line"> &quot;isAtAll&quot;: 0</span><br><span class="line"> # 设置为1，则@所有人</span><br><span class="line"> # &quot;isAtAll&quot;: 1</span><br><span class="line"> # 设置为0，则@一个人</span><br><span class="line"> # &quot;isAtAll&quot;: 0</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">headers = &#123;&#x27;Content-Type&#x27;: &#x27;application/json&#x27;&#125;</span><br><span class="line">x=requests.post(url=webhook,data=json.dumps(data),headers=headers)</span><br><span class="line">if os.path.exists(&quot;$log&quot;):</span><br><span class="line"> f=open(&quot;$log&quot;,&quot;a+&quot;)</span><br><span class="line">else:</span><br><span class="line"> f=open(&quot;$log&quot;,&quot;w+&quot;)</span><br><span class="line">f.write(&quot;\n&quot;+&quot;--&quot;*30)</span><br><span class="line">if x.json()[&quot;errcode&quot;] == 0:</span><br><span class="line"> f.write(&quot;\n&quot;+str(datetime.datetime.now())+&quot;    &quot;+str(user)+&quot;    &quot;+&quot;发送成功&quot;+&quot;\n&quot;+str(text))</span><br><span class="line"> f.close()</span><br><span class="line">else:</span><br><span class="line"> f.write(&quot;\n&quot;+str(datetime.datetime.now()) + &quot;    &quot; + str(user) + &quot;    &quot; + &quot;发送失败&quot; + &quot;\n&quot; + str(text))</span><br><span class="line"> f.close()</span><br></pre></td></tr></table></figure><h2 id="第二步，创建硬盘检测脚本"><a href="#第二步，创建硬盘检测脚本" class="headerlink" title="第二步，创建硬盘检测脚本"></a>第二步，创建硬盘检测脚本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#    dfgrep以/结尾的行 awk   打印第5列   sed 替换%为空</span><br><span class="line">DF=`df grep -E &#x27;/$&#x27; awk &#x27;&#123;print $5&#125;&#x27;sed &#x27;s/%//&#x27;`</span><br><span class="line">#也可以通过awk过滤/dev/sdhdvd</span><br><span class="line">#DF=`df awk -F% &#x27;/^\/dev\/sdhdvd/&#123;print $1&#125;&#x27;awk &#x27;$NF &gt;10&#123;print $NF&#125;&#x27;tail -n1`</span><br><span class="line">#或者是awk过滤硬盘容量</span><br><span class="line">#DF=`df -m awk &#x27;$2 &gt;10000&#123;print $5&#125;&#x27;cut -d% -f1tail -n1`</span><br><span class="line"></span><br><span class="line">#判断DF值是否大于80</span><br><span class="line">if [ $DF -ge 80 ]</span><br><span class="line">then</span><br><span class="line">  #钉钉机器人脚本，发送告警消息</span><br><span class="line">  dingding.py 《我的钉钉ID或手机号》 test &quot;关键字+硬盘容量超过80%&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="第三步，添加定时任务"><a href="#第三步，添加定时任务" class="headerlink" title="第三步，添加定时任务"></a>第三步，添加定时任务</h2><p>每天中午12点运行检测脚本，超过80%钉钉发送告警消息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">0 12 * * * 硬盘检测脚本路径</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> cento </tag>
            
            <tag> 硬盘空间 </tag>
            
            <tag> 钉钉告警 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos - du命令统计文件或目录大小</title>
      <link href="/posts/ce360c7c.html"/>
      <url>/posts/ce360c7c.html</url>
      
        <content type="html"><![CDATA[<p>时间旧了，容易忘记，这里做个笔记。</p><p>du命令用来统计数据，df用来统计块。</p><p>du语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du [-abcDhHklmsSx][-L &lt;符号连接&gt;][-X &lt;文件&gt;][--block-size][--exclude=&lt;目录或文件&gt;][--max-depth=&lt;目录层数&gt;][--help][--version][目录或文件]</span><br></pre></td></tr></table></figure><p>参数说明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">a或-all 显示目录中个别文件的大小。</span><br><span class="line">-b或-bytes 显示目录或文件大小时，以byte为单位。</span><br><span class="line">-c或--total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。</span><br><span class="line">-D或--dereference-args 显示指定符号连接的源文件大小。</span><br><span class="line">-h或--human-readable 以K，M，G为单位，提高信息的可读性。</span><br><span class="line">-H或--si 与-h参数相同，但是K，M，G是以1000为换算单位。</span><br><span class="line">-k或--kilobytes 以1024 bytes为单位。</span><br><span class="line">-l或--count-links 重复计算硬件连接的文件。</span><br><span class="line">-L&lt;符号连接&gt;或--dereference&lt;符号连接&gt; 显示选项中所指定符号连接的源文件大小。</span><br><span class="line">-m或--megabytes 以1MB为单位。</span><br><span class="line">-s或--summarize 仅显示总计。</span><br><span class="line">-S或--separate-dirs 显示个别目录的大小时，并不含其子目录的大小。</span><br><span class="line">-x或--one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。</span><br><span class="line">-X&lt;文件&gt;或--exclude-from=&lt;文件&gt; 在&lt;文件&gt;指定目录或文件。</span><br><span class="line">--exclude=&lt;目录或文件&gt; 略过指定的目录或文件。</span><br><span class="line">--max-depth=&lt;目录层数&gt; 超过指定层数的目录后，予以忽略。</span><br><span class="line">--help 显示帮助。</span><br><span class="line">--version 显示版本信息。</span><br></pre></td></tr></table></figure><p>例如：</p><p>统计当前目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#统计当前所在目录大小</span><br><span class="line">du -sh</span><br><span class="line">#统计当前目录内，各个子目录及文件大小</span><br><span class="line">du -sh *</span><br></pre></td></tr></table></figure><p>统计指定目录：（以&#x2F;opt目录为例）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#统计opt目录大小(以/opt目录为例)</span><br><span class="line">du -sh /opt</span><br><span class="line">#统计opt目录下，各子目录及文件大小</span><br><span class="line">du -sh /opt/*</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> du命令 </tag>
            
            <tag> 统计数据大小 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本 read增加一个默认值</title>
      <link href="/posts/1feba45.html"/>
      <url>/posts/1feba45.html</url>
      
        <content type="html"><![CDATA[<p>在使用read做交换处理的时候，需要输入，偶尔需要提供默认值，譬如数字选择，或者yes、no等。</p><p>第一种，使用 ${} 进行赋值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$&#123;file-my.file.txt&#125; ：假如$file 沒有设定，則使用my.file.txt 作传回值。(空值及非空值時不作处理) </span><br><span class="line">$&#123;file:-my.file.txt&#125; ：假如$file 沒有設定或為空值，則使用my.file.txt 作傳回值。(非空值時不作处理)</span><br><span class="line">$&#123;file+my.file.txt&#125; ：假如$file 設為空值或非空值，均使用my.file.txt 作傳回值。(沒設定時不作处理)</span><br><span class="line">$&#123;file:+my.file.txt&#125; ：若$file 為非空值，則使用my.file.txt 作傳回值。(沒設定及空值時不作处理)</span><br><span class="line">$&#123;file=my.file.txt&#125; ：若$file 沒設定，則使用my.file.txt 作傳回值，同時將$file 賦值為my.file.txt 。(空值及非空值時不作处理)</span><br><span class="line">$&#123;file:=my.file.txt&#125; ：若$file 沒設定或為空值，則使用my.file.txt 作傳回值，同時將$file 賦值為my.file.txt 。(非空值時不作处理)</span><br><span class="line">$&#123;file?my.file.txt&#125; ：若$file 沒設定，則將my.file.txt 輸出至STDERR。(空值及非空值時不作处理)</span><br></pre></td></tr></table></figure><p>如上，我们可以使用 ${ 变量 :- 值 }</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">read -p &quot;请输入数字（默认为1）：&quot; num</span><br><span class="line">num=$&#123;num:- 1&#125;</span><br><span class="line">echo &quot;num is $num&quot;</span><br></pre></td></tr></table></figure><p>第二种：使用判断 [ -z ]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">read  -p &quot;请输入数字（默认为1）：&quot; num</span><br><span class="line">#判断num是否为空，空值则执行num=1</span><br><span class="line">if [ -z $num ];then</span><br><span class="line">num=1</span><br><span class="line">fi</span><br><span class="line">echo &quot;num is  $num&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> read </tag>
            
            <tag> read增加默认值 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix 配置钉钉告警</title>
      <link href="/posts/3c11dd21.html"/>
      <url>/posts/3c11dd21.html</url>
      
        <content type="html"><![CDATA[<p>zabbix监控，实现指定的监控内容，进行钉钉告警推送。</p><p>流程：</p><ul><li>钉钉机器人获取webhook及zabbix告警字段</li><li>server上配置钉钉告警脚本</li><li>管理项-添加告警媒介，并赋予给用户（用户添加报警媒介“钉钉告警”）</li><li>配置项-添加动作（监控项状态通过钉钉发送告警）</li><li>测试</li></ul><h2 id="第一步，钉钉机器人获取webhook及zabbix告警字段"><a href="#第一步，钉钉机器人获取webhook及zabbix告警字段" class="headerlink" title="第一步，钉钉机器人获取webhook及zabbix告警字段"></a>第一步，钉钉机器人获取webhook及zabbix告警字段</h2><p>关于创建钉钉机器人，我前面文章有写，或者自行百度也可以</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-41.png"></p><h2 id="第二步，server上配置钉钉告警脚本"><a href="#第二步，server上配置钉钉告警脚本" class="headerlink" title="第二步，server上配置钉钉告警脚本"></a>第二步，server上配置钉钉告警脚本</h2><p>python脚本，需安装python及requests模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#安装epel源</span><br><span class="line">yum -y install epel-release</span><br><span class="line">#安装python及依赖模块</span><br><span class="line">yum -y install python &amp;&amp; yum -y install python-pip  &amp;&amp; pip install requests</span><br></pre></td></tr></table></figure><p>查看zabbix-server脚本路径:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep ^AlertScriptsPath /etc/zabbix/zabbix_server.conf</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-39.png"></p><p>（我的查询：&#x2F;usr&#x2F;lib&#x2F;zabbix&#x2F;alertscripts）</p><p>在此目录下创建钉钉脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/zabbix/alertscripts/dingding.py</span><br></pre></td></tr></table></figure><p>脚本内容如下：</p><ul><li>注意：第1行，查看你的python路径是否一致</li><li>注意：第5行，改为你的webhook路径</li><li>注意：第18行，发消息是@所有人还是只@配置的消息发送人</li><li>注意：dingding.log文件，需提前创建！或者改为自己的log路径</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">#coding:utf-8</span><br><span class="line">import requests,json,sys,os,datetime</span><br><span class="line"># 机器人的Webhook地址</span><br><span class="line">webhook=&quot;你的钉钉webhook&quot;</span><br><span class="line">user=sys.argv[1]</span><br><span class="line">text=sys.argv[3]</span><br><span class="line">data=&#123;</span><br><span class="line"> &quot;msgtype&quot;: &quot;text&quot;,</span><br><span class="line"> &quot;text&quot;: &#123;</span><br><span class="line"> &quot;content&quot;: text</span><br><span class="line"> &#125;,</span><br><span class="line"> &quot;at&quot;: &#123;</span><br><span class="line"> &quot;atMobiles&quot;: [</span><br><span class="line"> # 在web端用户绑定媒介中通过指定用户注册是的手机号，可以通知指定人员，否则只发消息，不艾特具体人</span><br><span class="line"> user</span><br><span class="line"> ],</span><br><span class="line"> &quot;isAtAll&quot;: 1</span><br><span class="line"> # 设置为1，则@所有人</span><br><span class="line"> # &quot;isAtAll&quot;: 1</span><br><span class="line"> # 设置为0，则@一个人</span><br><span class="line"> # &quot;isAtAll&quot;: 0</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">headers = &#123;&#x27;Content-Type&#x27;: &#x27;application/json&#x27;&#125;</span><br><span class="line">x=requests.post(url=webhook,data=json.dumps(data),headers=headers)</span><br><span class="line">if os.path.exists(&quot;/var/log/zabbix/dingding.log&quot;):</span><br><span class="line"> f=open(&quot;/var/log/zabbix/dingding.log&quot;,&quot;a+&quot;)</span><br><span class="line">else:</span><br><span class="line"> f=open(&quot;/var/log/zabbix/dingding.log&quot;,&quot;w+&quot;)</span><br><span class="line">f.write(&quot;\n&quot;+&quot;--&quot;*30)</span><br><span class="line">if x.json()[&quot;errcode&quot;] == 0:</span><br><span class="line"> f.write(&quot;\n&quot;+str(datetime.datetime.now())+&quot;    &quot;+str(user)+&quot;    &quot;+&quot;发送成功&quot;+&quot;\n&quot;+str(text))</span><br><span class="line"> f.close()</span><br><span class="line">else:</span><br><span class="line"> f.write(&quot;\n&quot;+str(datetime.datetime.now()) + &quot;    &quot; + str(user) + &quot;    &quot; + &quot;发送失败&quot; + &quot;\n&quot; + str(text))</span><br><span class="line"> f.close()</span><br></pre></td></tr></table></figure><p>创建dingding.log日志文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#创建dingding.log</span><br><span class="line">touch/var/log/zabbix/dingding.log</span><br><span class="line">#授权给zabbix</span><br><span class="line">chown zabbix:zabbix /var/log/zabbix/dingding.log</span><br></pre></td></tr></table></figure><p>测试dingding.py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#添加执行权限</span><br><span class="line">chmod +x /usr/lib/zabbix/alertscripts/dingding.py</span><br><span class="line">#测试</span><br><span class="line">/usr/lib/zabbix/alertscripts/dingding.py 《钉钉用户名或手机号》test &quot;《带关键字的消息》&quot; </span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-42.png"></p><p>脚本测试没问题，日志和钉钉都查看到消息，ok。</p><h2 id="第三步：管理项-添加告警媒介，并赋予给用户"><a href="#第三步：管理项-添加告警媒介，并赋予给用户" class="headerlink" title="第三步：管理项-添加告警媒介，并赋予给用户"></a>第三步：管理项-添加告警媒介，并赋予给用户</h2><p>登录web管理，管理项添加钉钉告警媒介</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-43.png"></p><p>添加报警媒介类型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">脚本参数：</span><br><span class="line">#对应脚本中的，user=sys.argv[1](发给钉钉群中哪个用户)。</span><br><span class="line">&#123;ALERT.SENDTO&#125;</span><br><span class="line"></span><br><span class="line">#代表发送的信息的标题，在&quot;报表&quot;的&quot;动作日志&quot;中可以看到。</span><br><span class="line">&#123;ALERT.SUBJECT&#125;</span><br><span class="line"></span><br><span class="line">#对应脚本中的，text=sys.argv[3](发送的报警内容)。</span><br><span class="line">&#123;ALERT.MESSAGE&#125;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-44.png"></p><p>添加消息模板：消息模板中加入你钉钉的“关键字”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-45.png"></p><p>通过web平台测试：钉钉媒介</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-46.png"></p><p>用户并赋予钉钉告警媒介权限，选择默认管理员</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-47.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-48.png"></p><h2 id="第四步，配置项-添加动作"><a href="#第四步，配置项-添加动作" class="headerlink" title="第四步，配置项-添加动作"></a>第四步，配置项-添加动作</h2><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-49.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-50.png"></p><p>添加“操作”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-51.png"></p><p>实现效果：监控项发生改变将发送消息给admin赋值的媒介消息。</p><h2 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h2><p>我这个教程中，监控项是nginx的存活状态</p><p>当监控的主机nginx停止和恢复时，钉钉收到的消息</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-52.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 钉钉告警 </tag>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix  监控nginx</title>
      <link href="/posts/99364b05.html"/>
      <url>/posts/99364b05.html</url>
      
        <content type="html"><![CDATA[<p>nginx有status状态模块，可以通过这个模块来反馈状态。</p><p>流程:</p><ul><li>nginx增加status状态</li><li>agent端，自定义key</li><li>web页面，定义模板（模板-应用集-监控项-触发器）</li><li>web页面，为客户机添加模板</li></ul><h2 id="第一步，nginx增加status状态"><a href="#第一步，nginx增加status状态" class="headerlink" title="第一步，nginx增加status状态"></a>第一步，nginx增加status状态</h2><p>对要监控的nginx配置文件进行修改，增加status状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#在server中增加</span><br><span class="line">location /nginx_status &#123;</span><br><span class="line">stub_status on;</span><br><span class="line">access_log off;</span><br><span class="line">allow 127.0.0.1;</span><br><span class="line">deny all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启nginx：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>查看nginx_status</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-18.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#状态解释</span><br><span class="line">Active connections  Nginx正处理的活动链接数个数；重要</span><br><span class="line">server              Nginx启动到现在共处理了多少个连接。</span><br><span class="line">accepts             Nginx启动到现在共成功创建几次握手。 </span><br><span class="line">handled requests    Nginx总共处理了几次请求。</span><br><span class="line">Reading             Nginx读取到客户端的 Header 信息数。</span><br><span class="line">Writing             Nginx返回给客户端的 Header 信息数。</span><br><span class="line">Waiting             Nginx已经处理完正在等候下一次请求指令的驻留链接，开启。</span><br><span class="line">Keep-alive的情况下，Waiting这个值等于active-（reading + writing）。</span><br><span class="line">请求丢失数=(握手数-连接数)可以看出,本次状态显示没有丢失请求。</span><br></pre></td></tr></table></figure><p>nginx状态查询可以编写脚本进行测试：</p><p>提前放zabbix目录方便以后使用</p><p>vi &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d&#x2F;nginx_status.sh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">#cd /etc/zabbix/zabbix_agentd.d/</span><br><span class="line">#vim nginx_monitor.sh</span><br><span class="line">HOST=127.0.0.1</span><br><span class="line">NGINX_STATUS=&#x27;/nginx_status/&#x27;</span><br><span class="line">NGINX_PORT=80  </span><br><span class="line">NGINX_COMMAND=$1</span><br><span class="line"></span><br><span class="line">nginx_ping()&#123;</span><br><span class="line">    /usr/sbin/pidof nginx wc -l</span><br><span class="line">&#125;</span><br><span class="line">nginx_active()&#123;</span><br><span class="line">    /usr/bin/curl -s $HOST:$NGINX_PORT$NGINX_STATUSawk &#x27;/Active/ &#123;print $NF&#125;&#x27;</span><br><span class="line">&#125;</span><br><span class="line">nginx_reading()&#123;</span><br><span class="line">    /usr/bin/curl -s $HOST:$NGINX_PORT$NGINX_STATUSawk &#x27;/Reading/ &#123;print $2&#125;&#x27;</span><br><span class="line">&#125;</span><br><span class="line">nginx_writing()&#123;</span><br><span class="line">    /usr/bin/curl -s $HOST:$NGINX_PORT$NGINX_STATUSawk &#x27;/Writing/ &#123;print $4&#125;&#x27;</span><br><span class="line">       &#125;</span><br><span class="line">nginx_waiting()&#123;</span><br><span class="line">    /usr/bin/curl -s $HOST:$NGINX_PORT$NGINX_STATUSawk &#x27;/Waiting/ &#123;print $6&#125;&#x27;</span><br><span class="line">       &#125;</span><br><span class="line">nginx_accepts()&#123;</span><br><span class="line">    /usr/bin/curl -s $HOST:$NGINX_PORT$NGINX_STATUSawk &#x27;NR==3 &#123;print $1&#125;&#x27;</span><br><span class="line">       &#125;</span><br><span class="line">nginx_handled()&#123;</span><br><span class="line">    /usr/bin/curl -s $HOST:$NGINX_PORT$NGINX_STATUSawk &#x27;NR==3 &#123;print $2&#125;&#x27;</span><br><span class="line">       &#125;</span><br><span class="line">nginx_requests()&#123;</span><br><span class="line">    /usr/bin/curl -s $HOST:$NGINX_PORT$NGINX_STATUSawk &#x27;NR==3 &#123;print $3&#125;&#x27;</span><br><span class="line">       &#125;</span><br><span class="line">  case $NGINX_COMMAND in</span><br><span class="line">ping)</span><br><span class="line">nginx_ping;</span><br><span class="line">;;</span><br><span class="line">active)</span><br><span class="line">nginx_active;</span><br><span class="line">;;</span><br><span class="line">reading)</span><br><span class="line">nginx_reading;</span><br><span class="line">;;</span><br><span class="line">writing)</span><br><span class="line">nginx_writing;</span><br><span class="line">;;</span><br><span class="line">waiting)</span><br><span class="line">nginx_waiting;</span><br><span class="line">;;</span><br><span class="line">accepts)</span><br><span class="line">nginx_accepts;</span><br><span class="line">;;</span><br><span class="line">handled)</span><br><span class="line">nginx_handled;</span><br><span class="line">;;</span><br><span class="line">requests)</span><br><span class="line">nginx_requests;</span><br><span class="line">;;</span><br><span class="line">      *)</span><br><span class="line">echo $&quot;USAGE:$0 &#123;pingactivereadingwritingwaitingacceptshandledrequests&#125;&quot;</span><br><span class="line">    esac</span><br></pre></td></tr></table></figure><p>测试脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#添加执行权限</span><br><span class="line">chmod +x /etc/zabbix/zabbix_agentd.d/nginx_status.sh</span><br><span class="line">#测试ping结果</span><br><span class="line">/etc/zabbix/zabbix_agentd.d/nginx_status.sh ping</span><br><span class="line">返回为1存在，返回0不存在</span><br></pre></td></tr></table></figure><h2 id="第二步，agent端，自定义key"><a href="#第二步，agent端，自定义key" class="headerlink" title="第二步，agent端，自定义key"></a>第二步，agent端，自定义key</h2><p>查看&#x2F;etc&#x2F;zabbix&#x2F;zabbix_agent.conf，可以看到自定义key注释和include路径。</p><p>key语法：UserParameter&#x3D;<key>,<shell command> (UserParameter&#x3D;&lt;键值名称&gt;,&lt;要执行的命令或脚本&gt;)</p><p>include路径：Include&#x3D;&#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d&#x2F;*.conf</p><p>得到，key语法和key路径，我们就可以编辑自定义key了。</p><p>（key执行的脚本，上面写的nginx_status.sh）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#创建自定义key配置文件</span><br><span class="line">vi /etc/zabbix/zabbix_agentd.d/nginx_status.conf</span><br><span class="line">#配置文件，加入以下内容</span><br><span class="line">UserParameter=nginx_status[*],/etc/zabbix/zabbix_agentd.d/nginx_status.sh</span><br></pre></td></tr></table></figure><p>(不推荐，尽量使用脚本)nginx状态单行写键值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UserParameter=nginx_ping,/usr/sbin/pidof nginx wc -l</span><br><span class="line">UserParameter=nginx_active,/usr/bin/curl -s $HOST:$NGINX_PORT$NGINX_STATUSawk &#x27;/Active/ &#123;print $NF&#125;&#x27;</span><br><span class="line">UserParameter=等等等，以此类推很繁琐,所以不是很推荐</span><br></pre></td></tr></table></figure><p>key键定义好后，重启agent</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure><p>到server端，可以通过agent-get测试，我们刚写的键值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#-s 地址 -p 端口号 -k &#x27;键值名称&#x27;</span><br><span class="line">zabbix_get -s 《agent端ip地址》-p 10050 -k &#x27;nginx_status[active]&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-19.png"></p><h2 id="第三步，web页面，定义模板（模板-应用集-监控项-触发器）"><a href="#第三步，web页面，定义模板（模板-应用集-监控项-触发器）" class="headerlink" title="第三步，web页面，定义模板（模板-应用集-监控项-触发器）"></a>第三步，web页面，定义模板（模板-应用集-监控项-触发器）</h2><p>向web添加东西，都需要从“配置”模块开始！</p><p>创建模板，模板可以理解为一个类别。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-20.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-21.png"></p><p>模板中添加应用集（应用集，可以理解为子类别或是一个文件夹）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-22.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-23.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-25.png"></p><p>创建监控项</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-26.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-27.png"></p><p>创建触发器</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-28.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-29.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-30.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-31.png"></p><p>创建图形：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-32.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-33.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-34.png"></p><p>ok，一个监控项完成，以此类推，我们需要重复添加监控项的其他状态</p><h2 id="web页面，agent客户机添加模板"><a href="#web页面，agent客户机添加模板" class="headerlink" title="web页面，agent客户机添加模板"></a>web页面，agent客户机添加模板</h2><p>模板创建好后，我们要返回配置-主机，哪些主机需要使用这个模板，我们就为该主机增加模板即可。</p><p>一个主机可以有N个模板，实现监控N个模块。</p><p>这里为我们的agent客户机：vm-1添加nginx状态</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-35.png"></p><p>添加模板（刚刚创建的app模板）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-36.png"></p><p>添加完成后，就可以通过仪表盘进行查看了。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-37.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-38.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
            <tag> zabbix监控nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix 添加agent</title>
      <link href="/posts/b1d9191a.html"/>
      <url>/posts/b1d9191a.html</url>
      
        <content type="html"><![CDATA[<p>流程</p><ul><li>修改zabbix_agentd.conf</li><li>web添加agent</li></ul><h2 id="修改agent-config"><a href="#修改agent-config" class="headerlink" title="修改agent_config"></a>修改agent_config</h2><p>agent客户机操作</p><p>编辑 &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#server地址</span><br><span class="line">Server=《你的zabbix_server地址》</span><br><span class="line">#server代理地址</span><br><span class="line">Server=《你的zabbix_server代理地址》</span><br><span class="line">#agent主机的hostname</span><br><span class="line">Hostname=《你当前的zabbix_agent的主机名》</span><br></pre></td></tr></table></figure><h2 id="web添加agent"><a href="#web添加agent" class="headerlink" title="web添加agent"></a>web添加agent</h2><p>zabbix管理页面，添加agent客户机</p><p>1.创建主机</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-13.png"></p><p>2.主机信息</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-15.png"></p><p>3.关联模板后，添加即可（一个主机可以管理多个模板）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-16.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-17.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
            <tag> zabbix-agent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos shell脚本设置IP地址</title>
      <link href="/posts/b3c49618.html"/>
      <url>/posts/b3c49618.html</url>
      
        <content type="html"><![CDATA[<p>实现配置静态ip和恢复动态ip及静态IP的合法性，说下思路。</p><p>***因为牵涉到有的主机有多虚拟网卡的情况做的这个脚本***</p><p>***多网卡多IP、单网卡多IP？留到后期再考虑吧***</p><p>1.先要过滤出网卡名称(从&#x2F;sys&#x2F;class&#x2F;net下，可以查看到多个网卡名;或者可以通过ip a ,配合 grep、awk或者cut获取，自己选择）</p><p>2.过滤出的网卡名要和网卡配置文件”ifcfg-网卡名”，做匹配</p><p>3.对匹配的网卡名配置文件进行修改</p><p>4.ip地址合法性（我用了4个while，也可以合并为一个for循环，但是缺点是不能进行单项实时修改）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">echo &quot;1.设置静态IP&quot;</span><br><span class="line">echo &quot;2.恢复动态IP&quot;</span><br><span class="line">echo &quot;按任意键退出&quot;</span><br><span class="line">read -p &quot;输入对应数字：&quot; NUM</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###过滤网卡名称</span><br><span class="line">WC=$(ls /sys/class/net wc -l)</span><br><span class="line">i=1</span><br><span class="line">while [ $i -lt $WC ]</span><br><span class="line">do</span><br><span class="line">#获取网卡名</span><br><span class="line">NET=$(ls /sys/class/netgrep -v lo head -n$itail -n1)</span><br><span class="line">#过滤是否有网卡名结尾的配置文件</span><br><span class="line">ls /etc/sysconfig/network-scripts/ grep ifcfg-$NET$ &gt; /dev/null</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then </span><br><span class="line">#echo &quot;本机网卡为 $NET&quot;</span><br><span class="line">break</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">###过滤网卡名称end</span><br><span class="line"></span><br><span class="line">#网卡文件路径</span><br><span class="line">NETPWD=&#x27;/etc/sysconfig/network-scripts/ifcfg-&#x27;</span><br><span class="line"></span><br><span class="line">case $NUM in</span><br><span class="line">&quot;1&quot;)</span><br><span class="line">echo &quot;-----------设置静态IP-----------&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#设置IP,并严重合法性</span><br><span class="line">while true </span><br><span class="line">do</span><br><span class="line">read -p &quot;输入IP地址：&quot; IPADDR</span><br><span class="line"></span><br><span class="line">    if [[ $IPADDR =~ ^[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;$ ]]; then</span><br><span class="line">        FIELD1=$(echo $IPADDRcut -d. -f1)</span><br><span class="line">        FIELD2=$(echo $IPADDRcut -d. -f2)</span><br><span class="line">        FIELD3=$(echo $IPADDRcut -d. -f3)</span><br><span class="line">        FIELD4=$(echo $IPADDRcut -d. -f4)</span><br><span class="line">        if [ $FIELD1 -le 255 -a $FIELD2 -le 255 -a $FIELD3 -le 255 -a $FIELD4 -le 255 ]; then</span><br><span class="line">            #echo &quot;$IPADDR OK.&quot;</span><br><span class="line">            break</span><br><span class="line">        else</span><br><span class="line">            echo &quot;不合法，请重新输入！&quot;</span><br><span class="line">        fi</span><br><span class="line">    else</span><br><span class="line">        echo &quot;格式错误，请重新输入！&quot;</span><br><span class="line">    fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#设置掩码，并验证合法性</span><br><span class="line">while true </span><br><span class="line">do</span><br><span class="line">read -p &quot;输入掩码：&quot; NETMASK</span><br><span class="line"></span><br><span class="line">    if [[ $NETMASK =~ ^[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;$ ]]; then</span><br><span class="line">        FIELD1=$(echo $NETMASKcut -d. -f1)</span><br><span class="line">        FIELD2=$(echo $NETMASKcut -d. -f2)</span><br><span class="line">        FIELD3=$(echo $NETMASKcut -d. -f3)</span><br><span class="line">        FIELD4=$(echo $NETMASKcut -d. -f4)</span><br><span class="line">        if [ $FIELD1 -le 255 -a $FIELD2 -le 255 -a $FIELD3 -le 255 -a $FIELD4 -le 255 ]; then</span><br><span class="line">            #echo &quot;$NETMASK OK.&quot;</span><br><span class="line">            break</span><br><span class="line">        else</span><br><span class="line">            echo &quot;不合法，请重新输入！&quot;</span><br><span class="line">        fi</span><br><span class="line">    else</span><br><span class="line">        echo &quot;格式错误，请重新输入！&quot;</span><br><span class="line">    fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#设置网关，并验证合法性</span><br><span class="line">while true </span><br><span class="line">do</span><br><span class="line">read -p &quot;输入网关：&quot; GATEWAY</span><br><span class="line"></span><br><span class="line">    if [[ $GATEWAY =~ ^[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;$ ]]; then</span><br><span class="line">        FIELD1=$(echo $GATEWAYcut -d. -f1)</span><br><span class="line">        FIELD2=$(echo $GATEWAYcut -d. -f2)</span><br><span class="line">        FIELD3=$(echo $GATEWAYcut -d. -f3)</span><br><span class="line">        FIELD4=$(echo $GATEWAYcut -d. -f4)</span><br><span class="line">        if [ $FIELD1 -le 255 -a $FIELD2 -le 255 -a $FIELD3 -le 255 -a $FIELD4 -le 255 ]; then</span><br><span class="line">            #echo &quot;$GATEWAY OK.&quot;</span><br><span class="line">            break</span><br><span class="line">        else</span><br><span class="line">            echo &quot;不合法，请重新输入！&quot;</span><br><span class="line">        fi</span><br><span class="line">    else</span><br><span class="line">        echo &quot;格式错误，请重新输入！&quot;</span><br><span class="line">    fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#设置dns，并验证合法性</span><br><span class="line">while true </span><br><span class="line">do</span><br><span class="line">read -p &quot;输入DNS：&quot; DNS</span><br><span class="line"></span><br><span class="line">    if [[ $DNS =~ ^[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;$ ]]; then</span><br><span class="line">        FIELD1=$(echo $DNScut -d. -f1)</span><br><span class="line">        FIELD2=$(echo $DNScut -d. -f2)</span><br><span class="line">        FIELD3=$(echo $DNScut -d. -f3)</span><br><span class="line">        FIELD4=$(echo $DNScut -d. -f4)</span><br><span class="line">        if [ $FIELD1 -le 255 -a $FIELD2 -le 255 -a $FIELD3 -le 255 -a $FIELD4 -le 255 ]; then</span><br><span class="line">            #echo &quot;$DNS OK.&quot;</span><br><span class="line">            break</span><br><span class="line">        else</span><br><span class="line">            echo &quot;不合法，请重新输入！&quot;</span><br><span class="line">        fi</span><br><span class="line">    else</span><br><span class="line">        echo &quot;格式错误，请重新输入！&quot;</span><br><span class="line">    fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#备份网卡配置</span><br><span class="line">cp $NETPWD$NET&#123;,`date &#x27;+%F_%T&#x27;`&#125;</span><br><span class="line">#</span><br><span class="line">cat $NETPWD$NET grep static</span><br><span class="line">#static、dhcp进行判断</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then</span><br><span class="line">#echo &quot;static状态&quot;</span><br><span class="line">sed -i &quot;s/IPADDR=.*/IPADDR=$IPADDR/g&quot;  $NETPWD$NET</span><br><span class="line">sed -i &quot;s/NETMASK=.*/NETMASK=$NETMASK/g&quot;  $NETPWD$NET</span><br><span class="line">sed -i &quot;s/GATEWAY=.*/GATEWAY=$GATEWAY/g&quot;  $NETPWD$NET</span><br><span class="line">sed -i &quot;s/DNS.*/DNS=$DNS/g&quot;  $NETPWD$NET</span><br><span class="line">else</span><br><span class="line">#echo &quot;dhcp状态&quot;</span><br><span class="line">sed -i  &#x27;s/dhcp/static/g&#x27; $NETPWD$NET</span><br><span class="line">echo &quot;IPADDR=$IPADDR&quot; &gt;&gt; $NETPWD$NET</span><br><span class="line">echo &quot;NETMASK=$NETMASK&quot; &gt;&gt; $NETPWD$NET</span><br><span class="line">echo &quot;GATEWAY=$GATEWAY&quot; &gt;&gt; $NETPWD$NET</span><br><span class="line">echo &quot;DNS=$DNS&quot; &gt;&gt; $NETPWD$NET</span><br><span class="line">fi</span><br><span class="line">#显示配置信息</span><br><span class="line">echo &quot;静态IP设置完成，重启网卡&quot;</span><br><span class="line">systemctl restart network</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;2&quot;)</span><br><span class="line">echo &quot;恢复动态IP&quot;</span><br><span class="line">#备份网卡配置</span><br><span class="line">cp $NETPWD$NET&#123;,`date &#x27;+%F_%T&#x27;`&#125;</span><br><span class="line">#修改配置</span><br><span class="line">sed -i  &#x27;s/static/dhcp/g&#x27; $NETPWD$NET</span><br><span class="line">sed -i  &#x27;/IPADDR/d&#x27; $NETPWD$NET</span><br><span class="line">sed -i  &#x27;/NETMASK/d&#x27; $NETPWD$NET</span><br><span class="line">sed -i  &#x27;/GATEWAY/d&#x27; $NETPWD$NET</span><br><span class="line">sed -i  &#x27;/DNS/d&#x27; $NETPWD$NET</span><br><span class="line">echo &quot;动态IP恢复完成，重启网卡&quot;</span><br><span class="line">systemctl restart network</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;*&quot;)</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-6.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> bash </tag>
            
            <tag> 设置ip地址 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 文件备份加入备份日期</title>
      <link href="/posts/45e03087.html"/>
      <url>/posts/45e03087.html</url>
      
        <content type="html"><![CDATA[<p>日期牵涉到date命令</p><p>date</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">%Y：年</span><br><span class="line">%m：月</span><br><span class="line">%d：日</span><br><span class="line">%H：小时</span><br><span class="line">%M：分钟</span><br><span class="line">%S：秒</span><br><span class="line">————————————</span><br><span class="line">%F：年月日</span><br><span class="line">%T：时分秒</span><br></pre></td></tr></table></figure><p>备份命令使用%F和%T：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp 《文件名》&#123;,《通常会加个备份标识》`date &#x27;+%F_%T&#x27;`&#125;</span><br></pre></td></tr></table></figure><p>如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp test&#123;,_back_`date &#x27;+%F_%T&#x27;`&#125;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-4.png"></p><p>备份命令使用%YmdHM：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp 《文件名》&#123;,《通常会加个备份标识》`date &#x27;+%Y-%m-%d_%H:%M:%S&#x27;`&#125;</span><br></pre></td></tr></table></figure><p>如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp test1&#123;,_backup_`date &#x27;+%Y-%m-%d_%H:%M:%S&#x27;`&#125;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-5.png"></p><p>分隔符可以自定义，我习惯日期直接用“-”，时间之间用“：”，日期和时间之间用“_”，可根据自己需求进行更改。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 自动加入备份日期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 7 重置root密码</title>
      <link href="/posts/2853445c.html"/>
      <url>/posts/2853445c.html</url>
      
        <content type="html"><![CDATA[<p>服务器时间久了没人管，忘记密码情况还是有的。</p><p>第一步，重启，进入系统选择，按键盘“e”，编辑引导</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image.png"></p><p>第二步，在liunx16行，追加enforcing&#x3D;0 init&#x3D;&#x2F;bin&#x2F;bash，后ctrl +x</p><p>(此配置解释：关闭selinux，默认启动&#x2F;bin&#x2F;bash)</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-1.png"></p><p>第三步，重新挂载根目录并rw权限，修改root密码，重启</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-2.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> root密码 </tag>
            
            <tag> 忘记密码 </tag>
            
            <tag> 重置密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos kill/killall/pkill结束进程</title>
      <link href="/posts/9385af2c.html"/>
      <url>/posts/9385af2c.html</url>
      
        <content type="html"><![CDATA[<p>因为朋友用我的云服务器搞的中毒了，top了一下，发现有个xmrig占用率很高，且是个test用户，直接干，先结束test用户的所有进程pkill -u test ，再删除用户 useradd test。又查看了下任务，顺便发现sshd配置密码验证竟然开启了？（一直秘钥登录的）</p><p>查看命令由哪个包提供：yum provides 《命令》</p><p>killall属于psmisc包，pkill属于procps-ng</p><p>结束进程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#结束用户相关的所有进程</span><br><span class="line">pkill -u《用户名或用户id》</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#结束server相关的进程</span><br><span class="line">pkill -9 servername</span><br><span class="line">或</span><br><span class="line">killall -9 servername</span><br><span class="line"></span><br><span class="line">#结束单个pid进程</span><br><span class="line">kill -9 pid</span><br></pre></td></tr></table></figure><p>结束终端（踢出在线用户）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#第一步，查看所有登录终端</span><br><span class="line">w</span><br><span class="line">#第二步，查看当前使用终端</span><br><span class="line">tty</span><br><span class="line">#第三步，pkill其他终端(譬如踢掉pts/5终端)</span><br><span class="line">pkill -kill -t pts/5</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kill </tag>
            
            <tag> killall </tag>
            
            <tag> pkill </tag>
            
            <tag> 踢出在线终端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 及VI常用快捷键</title>
      <link href="/posts/14ed7963.html"/>
      <url>/posts/14ed7963.html</url>
      
        <content type="html"><![CDATA[<p>时间久了个别快捷键容易忘记，顺带记录一下。</p><h2 id="Centos快捷键"><a href="#Centos快捷键" class="headerlink" title="Centos快捷键"></a>Centos快捷键</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#历史命令</span><br><span class="line">hostory</span><br><span class="line">！*，history列表中的第*行命令</span><br><span class="line">！！，上条命令</span><br><span class="line">↑</span><br><span class="line">↓</span><br><span class="line"></span><br><span class="line">#清屏</span><br><span class="line">ctrl + l</span><br><span class="line"></span><br><span class="line">#终止</span><br><span class="line">ctrl + c</span><br><span class="line"></span><br><span class="line">#退出</span><br><span class="line">ctrl +d</span><br><span class="line"></span><br><span class="line">#光标行首</span><br><span class="line">ctrl + a</span><br><span class="line"></span><br><span class="line">#光标行尾</span><br><span class="line">ctrl + e</span><br><span class="line"></span><br><span class="line">#后台运行</span><br><span class="line">#一般会在命令后面追加&amp;，如果忘记可以使用</span><br><span class="line">ctrl + z (挂起后台，并处于暂停状态)</span><br><span class="line">#查看后台挂起</span><br><span class="line">jobs -l</span><br><span class="line">#jobs-l，显示结果：第一列《命令编号》，第二列PID</span><br><span class="line">bg 《命令编号》，将后台挂起暂停状态,改为运行状态</span><br><span class="line">fg 《命令编号》，将后台放置前台运行</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="vi快捷方式"><a href="#vi快捷方式" class="headerlink" title="vi快捷方式"></a>vi快捷方式</h2><p>一般模式（默认进入vi后的模式）(下面*号代表数字)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#进入编辑模式</span><br><span class="line">i，光标之后插入</span><br><span class="line">o，光标所在行，下面插入（常用于末尾追加内容时很方便）</span><br><span class="line"></span><br><span class="line">#复制</span><br><span class="line">yy，复制光标所在行</span><br><span class="line">*yy，向下复制*行，譬如3yy，复制光标所在为第一行，向下复制3行。</span><br><span class="line"></span><br><span class="line">#粘贴</span><br><span class="line">p（小写），粘贴到光标所在行下面</span><br><span class="line">P（大写），粘贴到光标所在行上面</span><br><span class="line"></span><br><span class="line">#删除/剪切（不按p进行粘贴时，就是删除了）</span><br><span class="line">dd，删除光标所在行（只删除1行），注：dd=D</span><br><span class="line">*dd，向下删除*行，譬如3dd，删除光标所在为第一行，向下删除3行。</span><br><span class="line">dG，删除从光标开始，向下全部输出。(删除全部ggdG)</span><br><span class="line"></span><br><span class="line">#撤销</span><br><span class="line">u，撤销操作，一直u，可以一直撤销</span><br><span class="line">ctrl+r，反撤销</span><br><span class="line"></span><br><span class="line">####光标移位</span><br><span class="line">↑按键，光标上移</span><br><span class="line">↓按键，光标下移</span><br><span class="line">←按键，光标左移</span><br><span class="line">→按键，光标右移</span><br><span class="line">pageup按键，向上一页</span><br><span class="line">pagedown按键，向下一页</span><br><span class="line">home按键，移动到行首</span><br><span class="line">end按键，移动到行尾</span><br><span class="line"></span><br><span class="line">0(数字)，移动到行首</span><br><span class="line">$,移动到行尾</span><br><span class="line"></span><br><span class="line">*G，光标定位到第*行行首(譬如定位到第11行，11G)</span><br><span class="line">*$，光标定位到第*行行尾(譬如定位到第11行，11G)</span><br><span class="line"></span><br><span class="line">gg，移动到首行！</span><br><span class="line">G，移动到尾部！</span><br><span class="line"></span><br><span class="line">w，下个单词词首（word）</span><br><span class="line">e，下个单词词尾（end）</span><br></pre></td></tr></table></figure><p>末行模式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#&quot;:&quot;命令</span><br><span class="line">:w，保存</span><br><span class="line">:w!，强制保存</span><br><span class="line">:q，退出</span><br><span class="line">:q!，强制退出（不保存退出）</span><br><span class="line">:wq，保存并退出(快捷键shift+zz)</span><br><span class="line">:e!，恢复文件为打开时状态（重新读取文件）</span><br><span class="line"></span><br><span class="line">:set number,显示行号(简写:set nu)</span><br><span class="line">:set nonumber,取消行号(简写 set nonu)</span><br><span class="line"></span><br><span class="line">:f，当前文件属性</span><br><span class="line">:r 《文件路径》，将其他文件内容插入到当前光标处</span><br><span class="line"></span><br><span class="line">:sp，水平分屏，ctrl+ww进行屏幕切换</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#&quot;/&quot;命令</span><br><span class="line">/ 《字符串》，查找字符串（n向下查找，N向上查找）</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cento </tag>
            
            <tag> vi </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 安装java</title>
      <link href="/posts/338b9370.html"/>
      <url>/posts/338b9370.html</url>
      
        <content type="html"><![CDATA[<p>之前安装java习惯yum，这两天研究weblogic发现yum的java版本不能用，懵逼。</p><p>牵涉到java官方tar包，有浮动的小版本号，懒人，做了jdk1.8.0_311脚本。</p><p>顺带写个脚本</p><p>bash &lt;(curl <a href="https://gitee.com/ffing/onekey/raw/master/onekey.sh">https://gitee.com/ffing/onekey/raw/master/onekey.sh</a>)</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-64.png"></p><p>流程：</p><ul><li>下载java</li><li>解压java</li><li>配置环境变量</li><li>验证java</li></ul><h2 id="第一步：下载java"><a href="#第一步：下载java" class="headerlink" title="第一步：下载java"></a>第一步：下载java</h2><p>官网下载：<a href="https://www.oracle.com/java/technologies/downloads/#java8">https://www.oracle.com/java/technologies/downloads/#java8</a></p><p>选择linux平台tar包</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-21.png"></p><p>复选框挂钩，同意协议！（最傻不过协议，不同意不让继续，呵呵呵。。。）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-22.png"></p><p>登录oracle账号，自行免费注册即可。</p><p>得到真实下载地址后，wget到本地（也可浏览器下载后上传到centos，看自己需求）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#地址可能失效,可登录账号自行获取真实地址</span><br><span class="line">wget https://download.oracle.com/otn/java/jdk/8u311-b11/4d5417147a92418ea8b615e228bb6935/jdk-8u311-linux-x64.tar</span><br></pre></td></tr></table></figure><h2 id="第二步：解压"><a href="#第二步：解压" class="headerlink" title="第二步：解压"></a>第二步：解压</h2><p>将java包，解压到&#x2F;usr&#x2F;local&#x2F;java8，做环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#创建/usr/local/java8目录</span><br><span class="line">mkdir /usr/local/java8</span><br><span class="line">#解压包，到/usr/local/java8目录</span><br><span class="line">#包名版本号可能有差异,所有注意自己的tar包名</span><br><span class="line">tar -xf jdk-8u311-linux-x64.tar.gz -C /usr/local/java8 --strip-components 1</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-23.png"></p><h2 id="第三步：配置环境变量"><a href="#第三步：配置环境变量" class="headerlink" title="第三步：配置环境变量"></a>第三步：配置环境变量</h2><p>配置全局变量，编辑&#x2F;etc&#x2F;profile 追加如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#JAVA_HOME必须是我们刚解压的路径</span><br><span class="line">export JAVA_HOME=/usr/local/java8</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure><p>全局环境立即生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>创建软连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/java8/bin/java /usr/bin/java</span><br></pre></td></tr></table></figure><h2 id="第四步：验证"><a href="#第四步：验证" class="headerlink" title="第四步：验证"></a>第四步：验证</h2><p>java -version</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-25.png"></p><p>javac -version</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> java </tag>
            
            <tag> jdk </tag>
            
            <tag> 安装java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本，结束指定脚本</title>
      <link href="/posts/40f72adf.html"/>
      <url>/posts/40f72adf.html</url>
      
        <content type="html"><![CDATA[<p>平时写shell一不小心来个死循环，或是超长等待，需要先进程，再kill，懒人写个脚本。</p><p>第一种，适用于脚本（当然如果知道服务名也可以），通过ps列出进程号（过滤的pid是1列3行），循环结束所有进程号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">r#!/bin/bash</span><br><span class="line">read -p &quot;输入要结束的脚本或服务名称：&quot; NAME</span><br><span class="line">WC=$(ps -ef  grep $NAME grep -v grep  wc -l)</span><br><span class="line">#判断进程是否存在</span><br><span class="line">if [ $WC -eq 0 ];then</span><br><span class="line">echo &quot;$NAME 不存在&quot;</span><br><span class="line">else</span><br><span class="line">        PID=$(ps -ef  grep $NAME grep -v grep  )</span><br><span class="line">        echo &quot;========================== $NAME 相关进程信息=========================&quot;</span><br><span class="line">        echo &quot;$PID&quot;</span><br><span class="line">        echo &quot;=====================================================================&quot;</span><br><span class="line">        #确认是否结束进程</span><br><span class="line">        echo -e &quot;\033[32m y 结束$NAME相关进程 \033[0m&quot;</span><br><span class="line">        echo -e &quot;\033[32m n或按任意键退出\033[0m&quot;</span><br><span class="line">        </span><br><span class="line">        read -p &quot;请输入（默认n）：&quot; NN</span><br><span class="line">        case $NN in</span><br><span class="line">            yesYESyY)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        i=1</span><br><span class="line">        while [ $i -le $WC ]</span><br><span class="line">        do</span><br><span class="line">        kill -9 $( ps -ef grep $NAME grep -v grep awk &#x27;&#123;print $2&#125;&#x27;head -n$itail -n1 ) &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">        let i++</span><br><span class="line">        done</span><br><span class="line">        echo -e &quot;\033[31m $NAME 相关进程结束 \033[0m&quot;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">        *)</span><br><span class="line">        exit</span><br><span class="line">        ;;</span><br><span class="line">        esac</span><br><span class="line"></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>第二种，适用于服务，通过pidof列出服务所有的进程号（过滤的pid是1行3列），循环结束所有进程号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">read -p &quot;输入要结束的服务名称：&quot; NAME</span><br><span class="line">WC=$(pidof  $NAME  wc -w)</span><br><span class="line">#判断进程是否存在</span><br><span class="line">if [ $WC -eq 0 ];then</span><br><span class="line">echo &quot;$NAME 不存在&quot;</span><br><span class="line">else</span><br><span class="line">        PID=$(pidof $NAME)</span><br><span class="line">        echo &quot;进程号:&quot;</span><br><span class="line">        echo &quot;$PID&quot;</span><br><span class="line">        i=1</span><br><span class="line">        while [ $i -le $WC ]</span><br><span class="line">        do</span><br><span class="line">        kill -9 $( pidof $NAMEawk &#x27;&#123;print $i&#125;&#x27; ) &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">        let i++</span><br><span class="line">        done</span><br><span class="line">        echo &quot;$NAME 相关进程结束&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>kill -9 可能会打印错误信息，需要null（譬如先结束了保护进程）</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> shell </tag>
            
            <tag> 结束指定脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell 脚本，ping网段</title>
      <link href="/posts/e708c73c.html"/>
      <url>/posts/e708c73c.html</url>
      
        <content type="html"><![CDATA[<p>ping 网段，打印结果，并将成功结果保存到指定文件</p><p>实现后台运行，需删除if中的echo，并运行脚本后加&amp;</p><p>for循环脚本如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#定义网段</span><br><span class="line">IP=192.168.68.</span><br><span class="line">#定义范围1到255</span><br><span class="line">NUM=$(seq 1 255)</span><br><span class="line">#定义ping成功结果输出文件（默认当前目录）</span><br><span class="line">PINGFILE=./pingyes.txt</span><br><span class="line">#清空结果文件</span><br><span class="line">echo &gt; $PINGFILE</span><br><span class="line">echo &quot;ping成功结果输出文件到 $PINGFILE&quot;</span><br><span class="line">#for循环</span><br><span class="line">for N in  $NUM</span><br><span class="line">do</span><br><span class="line">        ping  -c 2 $IP$N &gt; /dev/null</span><br><span class="line">        if [ $? -eq 0 ];then</span><br><span class="line">                echo &quot;$IP$N yes&quot;</span><br><span class="line">                echo &quot;$IP$N yes&quot; &gt;&gt; $PINGFILE</span><br><span class="line">        else</span><br><span class="line">                echo &quot;$IP$N no&quot;</span><br><span class="line">        fi</span><br><span class="line"></span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>while循环脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#定义网段</span><br><span class="line">IP=192.168.68.</span><br><span class="line">#定义范围（1到255）</span><br><span class="line">N=1</span><br><span class="line">NN=255</span><br><span class="line">#定义ping成功结果输出文件（默认当前目录）</span><br><span class="line">PINGFILE=./pingyes.txt</span><br><span class="line">#清空结果文件</span><br><span class="line">echo &gt; $PINGFILE</span><br><span class="line">echo &quot;ping成功结果输出文件到 $PINGFILE&quot;</span><br><span class="line"></span><br><span class="line">#执行while循环，N&lt;=NN</span><br><span class="line">while [ $N -le $NN ]</span><br><span class="line">do</span><br><span class="line">        ping  -c 2 $IP$N &gt; /dev/null</span><br><span class="line">        if [ $? -eq 0 ];then</span><br><span class="line">                echo &quot;$IP$N yes&quot;</span><br><span class="line">                echo &quot;$IP$N yes&quot; &gt;&gt; $PINGFILE</span><br><span class="line">        else</span><br><span class="line">                echo &quot;$IP$N no&quot;</span><br><span class="line">        fi</span><br><span class="line">let N++</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> shell </tag>
            
            <tag> ping网段 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 服务开机启动状态（工具：ntsysv）</title>
      <link href="/posts/1bb0df69.html"/>
      <url>/posts/1bb0df69.html</url>
      
        <content type="html"><![CDATA[<p>ntsysv，可在centos图形化设置启动服务（和nmtui网络图形化设置类同）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#yum安装ntsysv</span><br><span class="line">yum -y install ntsysv</span><br><span class="line">#启动ntsysv</span><br><span class="line">ntsysv</span><br></pre></td></tr></table></figure><p>操作方法：回车：确认！</p><p>上下键：可以在中间的方框当中，在各个服务之间移动；<br>空格键：可以用来选择你所需要的服务，[*]表示开起启动；<br>tab键：可以在方框、OK、Cancel之间移动；</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-19.png"></p><p>顺带回忆一下nmtui（NetworkManager-tui）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#查看nmtui是那个包提供的</span><br><span class="line">yum provides nmtui</span><br><span class="line">###查到NetworkManager-tui提供</span><br><span class="line">#安装NetworkManager-tui</span><br><span class="line">yum -y install NetworkManager-tui</span><br><span class="line">#启动nmtui</span><br><span class="line">nmtui</span><br></pre></td></tr></table></figure><p>列出所有服务，可通过grep过滤服务状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files</span><br></pre></td></tr></table></figure><p>开机启动&#x2F;禁用服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable/disable 《服务名》</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> ntsysv </tag>
            
            <tag> 图形化 </tag>
            
            <tag> 服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 秘钥登录（免密码登录）</title>
      <link href="/posts/70d2cb1a.html"/>
      <url>/posts/70d2cb1a.html</url>
      
        <content type="html"><![CDATA[<p>原理很简单，本地私钥 –&gt; 远端公钥，秘钥匹配实现免密码登录。（登录git仓库时用的就是公钥）</p><h2 id="流程："><a href="#流程：" class="headerlink" title="流程："></a>流程：</h2><ul><li>生成秘钥对，公钥（id_rsa.pub）和私钥（id_rsa）</li><li>公钥导入到~&#x2F;.ssh&#x2F;authorized_keys</li><li>修改sshd配置，开启秘钥验证</li><li>连接测试</li></ul><h2 id="第一步：生成秘钥对"><a href="#第一步：生成秘钥对" class="headerlink" title="第一步：生成秘钥对"></a>第一步：生成秘钥对</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>一路回车，默认即可。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-18.png"></p><h2 id="第二步：公钥导入-x2F-ssh-x2F-authorized-keys"><a href="#第二步：公钥导入-x2F-ssh-x2F-authorized-keys" class="headerlink" title="第二步：公钥导入~&#x2F;.ssh&#x2F;authorized_keys"></a>第二步：公钥导入~&#x2F;.ssh&#x2F;authorized_keys</h2><p>将刚生成的公钥，导入到~&#x2F;.ssh&#x2F;authorized_keys</p><p>（为什么是~&#x2F;.ssh&#x2F;authorized_keys：因为sshd配置中默认配置是这个，所以为了减少后面操作多此一步，当然你也可以改sshd配置）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub &gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><h2 id="第三步：修改sshd配置，开启秘钥验证"><a href="#第三步：修改sshd配置，开启秘钥验证" class="headerlink" title="第三步：修改sshd配置，开启秘钥验证"></a>第三步：修改sshd配置，开启秘钥验证</h2><p>编辑&#x2F;etc&#x2F;ssh&#x2F;sshd_config</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#开启秘钥验证</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">#默认key路径（第二步操作就是为了这一步）</span><br><span class="line">AuthorizedKeysFile  .ssh/authorized_keys</span><br><span class="line">#禁用密码登录（也可秘钥和密码同时生效，但一般开了秘钥都会禁用密码登录）</span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure><p>编辑完成后，重启sshd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><h2 id="第四步：连接"><a href="#第四步：连接" class="headerlink" title="第四步：连接"></a>第四步：连接</h2><h4 id="通过shell终端远程连接"><a href="#通过shell终端远程连接" class="headerlink" title="通过shell终端远程连接"></a>通过shell终端远程连接</h4><p>需下载服务器生成的私钥（id_rsa），并导入。</p><p>shell终端使用私钥，远程连接服务器，服务器进行公钥匹配，实现免密。</p><h4 id="linux服务器之间的远程连接"><a href="#linux服务器之间的远程连接" class="headerlink" title="linux服务器之间的远程连接"></a>linux服务器之间的远程连接</h4><p>同样需将公钥复制给远端服务器，公钥复制时需要输入远端服务器密码！就可以实现本地到远端免秘钥。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#通过ssh-copy-id将公钥复制给远端服务器</span><br><span class="line">ssh-copy-id 远端服务器</span><br><span class="line">#如果公钥没有在默认路径需加-i指定公钥路径</span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.168.28.128</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 免密码登录 </tag>
            
            <tag> 秘钥登录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 查看修改时间、时区</title>
      <link href="/posts/a548af97.html"/>
      <url>/posts/a548af97.html</url>
      
        <content type="html"><![CDATA[<p>查看时间、时区（CST:China Standard Time UT+8:00）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date</span><br></pre></td></tr></table></figure><p>手动修改时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#将系统时间改为2020年1月1日0点</span><br><span class="line">date -s &quot;2020-01-01 00:00:00&quot;</span><br></pre></td></tr></table></figure><p>同步时间（需安装ntpdate）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#同步阿里云时间</span><br><span class="line">ntpdate ntp.aliyun.com</span><br></pre></td></tr></table></figure><p>修改时区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#第一种通过timedatectl命令</span><br><span class="line">timedatectl set-timezone Asia/Shanghai</span><br><span class="line">#第二种更新/etc/localtime文件</span><br><span class="line">rm -rf /etc/localtime</span><br><span class="line">ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><p>查看硬件（bios）时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hwclock</span><br></pre></td></tr></table></figure><p>系统时间和硬件时间进行同步</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#可通过hwclock --help自行查看</span><br><span class="line">#用系统时间同步硬件时间</span><br><span class="line">hwclock -w 或者 hwclock --systohc      </span><br><span class="line">#用硬件时间同步系统时间</span><br><span class="line">hwclock -s 或者 hwclock --hctosys     </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos时区 </tag>
            
            <tag> centos时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos - top命令详解</title>
      <link href="/posts/9b75bedb.html"/>
      <url>/posts/9b75bedb.html</url>
      
        <content type="html"><![CDATA[<p>centos下top命令类似windows的任务管理器，用来分析服务器性能。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-11.png"></p><p>第一行：运行状态（负载为1.0时满载）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-12.png"></p><p>第二行：进程状态</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-13.png"></p><p>第三行：CPU状态</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-14.png"></p><p>第四~五行：内存状态</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-15.png"></p><p>下面状态区域</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-16.png"></p><h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><p>高亮颜色：z</p><p>内存显示模式：m</p><p>上区域，内存单位切换：shift+e</p><p>下区域，内存单位切换：e</p><p>保存top配置：W（大写）</p><h2 id="排序及显示内容"><a href="#排序及显示内容" class="headerlink" title="排序及显示内容"></a>排序及显示内容</h2><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-17.png"></p><p>键盘f，进入排序编辑页面，最上面有提示。</p><p>高亮为当前的排序字段，*号代表字段显示。</p><p>选择要排序的字段，键盘s后（右上角:whose current sort field is &lt;排序字段&gt;），esc即可，看到排序。</p><p>增加或删除字段：选中字段空格后，*号代表显示，没有*号不显示。</p><p>注：如需长期使用配置，即可W（大学）保存。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>centos-查看命令属于哪个包</title>
      <link href="/posts/e63938c.html"/>
      <url>/posts/e63938c.html</url>
      
        <content type="html"><![CDATA[<p>偶尔遇到使用某个命令提示命令不存在，但又不知道这个命令具体属于哪个包，这里提供两种方法解决。</p><p>第一种：通过yum provides</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum provides */《命令》</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-10.png"></p><p>第二种：通过已安装命令的机器，来反向排查</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#先查询已安装命令的真实路径</span><br><span class="line">which 《命令》</span><br><span class="line">#再通过rpm来查看是哪个安装包</span><br><span class="line">rpm -qf 命令真实路径</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-9.png"></p><p>第三种：使用yum search（有的命令出不来，推荐第一、二种）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum search 《命令》</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-8.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> liunx </tag>
            
            <tag> 命令属于哪个包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql - 事务</title>
      <link href="/posts/7d0f8f47.html"/>
      <url>/posts/7d0f8f47.html</url>
      
        <content type="html"><![CDATA[<p>事务的四大特征：ACID</p><p>（A）原子性:事务是最小的单位,不可以在分割。<br>（C）一致性:事务要求,同一事务中的sqL语句,必须保证同时成功或者同时失败。<br>（ I ）隔离性:事务1和事务2之间是具有隔离性的<br>（D）持久性:事务一旦结束( commit),就不可以返回(rollback)。</p><p>查询事务是否开启自动提交：select @@autocommit;</p><p>打开事务自动提交：set autocommit&#x3D;1</p><p>关闭事务自动提交：set autocommit&#x3D;0;</p><p>手动提交：commit</p><p>事务回滚：rollback</p><p>注：关闭自动提交可以实现操作回滚，但每次操作完数据需要commit手动提交。（和git操作类似）autocommit或commit的数据，都是无法回滚的。</p><p>临时开启一个事务：begin（或start transaction）；</p><p>临时开启是事务，可以在commit前回滚</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">begin;</span><br><span class="line">sql语句</span><br><span class="line">sql语句</span><br><span class="line">sql语句</span><br><span class="line">rollback</span><br></pre></td></tr></table></figure><p>事务隔离级别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">读未提交的：read uncommitted;</span><br><span class="line">查询未commit的数据</span><br><span class="line"></span><br><span class="line">读已经提交的：read committed</span><br><span class="line">读取已commit的数据</span><br><span class="line"></span><br><span class="line">可以重复读：repeatable read</span><br><span class="line">多个人同时对一张表进行操作时，容易幻读。</span><br><span class="line"></span><br><span class="line">串行化：serializable</span><br><span class="line">多个人同时对一张表进行操作时，如果某用户操作表时，其他用户将暂停写入。</span><br></pre></td></tr></table></figure><p>查看隔离级别：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#show变量</span><br><span class="line">show variables like &quot;%isolation%&quot;;</span><br><span class="line"></span><br><span class="line">#也可以通过select查看</span><br><span class="line">#####mysql8.0版本</span><br><span class="line">#查看全局级别</span><br><span class="line">select @@global.transaction_isolation;</span><br><span class="line">#查看回话级别</span><br><span class="line">select @@transaction_isolation;</span><br><span class="line"></span><br><span class="line">#####mysql5.x版本</span><br><span class="line">#查看全局级别</span><br><span class="line">select @@global.tx_isolation;</span><br><span class="line">#查看回话级别</span><br><span class="line">select @@tx_isolation;</span><br></pre></td></tr></table></figure><p>修改隔离级别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#修改全局</span><br><span class="line">set global transaction isolation level 《级别》;</span><br><span class="line">#修改会话级别</span><br><span class="line">set session transaction isolation level 《级别》;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> mysql事务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql 笔记 （查询）</title>
      <link href="/posts/2bc2746f.html"/>
      <url>/posts/2bc2746f.html</url>
      
        <content type="html"><![CDATA[<p>查询所有字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 《表名称》；</span><br></pre></td></tr></table></figure><p>查询指定字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 《字段X》 《字段Y》 from 《表名称》；</span><br></pre></td></tr></table></figure><p>查询结果，排除重复：distinct</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct 《字段》 from 《表名称》；</span><br></pre></td></tr></table></figure><p>查询区间：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#第一种使用：between  ... and ...</span><br><span class="line">select * from 《表名称》 where 《字段》 between 《区间值》and 《区间值》；</span><br><span class="line">#第二种使用运算符： （大于号）&gt;  and &lt;（小于号） </span><br><span class="line">select * from 《表名称》 where 《字段》&gt;《区间值》 and 《字段》&lt;《区间值》；</span><br><span class="line">例列出大于60小于80的成绩单：select * from 成绩表 where 成绩&gt;60 and 成绩&lt;80;</span><br></pre></td></tr></table></figure><p>查询多个值：in，or</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#in：包含</span><br><span class="line">select * from 《表名称》 where 《字段》 in （值1，值2，值3 。。。）;</span><br><span class="line">#not in :不包含</span><br><span class="line">select * from 《表名称》 where 《字段》 not in （值1，值2，值3 。。。）;</span><br><span class="line">#or：或</span><br><span class="line">select * from 《表名称》 where 《字段》=《值》 or 《字段》=《值》；</span><br></pre></td></tr></table></figure><p>查询结果，以某字段进行排序：order by … [asc&#x2F;desc]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#升序：asc（默认升序，一般都可以省略）</span><br><span class="line">select * from 《表名称》order by 《要排序字段》asc;</span><br><span class="line">#降序：desc</span><br><span class="line">select * from 《表名称》order by 《要排序字段》desc;</span><br><span class="line">#混合排序，遇到相同的再次进行排序</span><br><span class="line">#都是升序（如班级相同，再次进行成绩排序）</span><br><span class="line">select * from 《表名称》order by 《要升序字段》asc，《要降序字段》asc;</span><br><span class="line">#先生序后降序</span><br><span class="line">select * from 《表名称》order by 《要升序字段》asc，《要降序字段》desc；</span><br></pre></td></tr></table></figure><p>查询统计：count</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#统计整个表</span><br><span class="line">select count(*) from 《表名称》;</span><br><span class="line">#统计where后</span><br><span class="line">select count(*) from 《表名称》where 《字段》=《值》；</span><br></pre></td></tr></table></figure><p>最大值：max</p><p>最小值：min</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">select max(《字段》) from 《表名称》；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#利用排序取出最大值</span><br><span class="line">解析：</span><br><span class="line">第一步倒序排列：select * from 《表名称》order by 《字段》 desc;</span><br><span class="line">第二步只取1个值:select * from 《表名称》order by 《字段》 desc limit 0,1;</span><br><span class="line"></span><br><span class="line">#拓展：实例：表2中取出在表1中最大值的字段数据。</span><br><span class="line">解析：</span><br><span class="line">第一步最大值思路：select * from 《表名称1》where 《字段》=（最大值）；</span><br><span class="line">第二步替换为语句：select * from 《表名称2》where 《字段》=（select max(《字段》) from 《表名称1》；）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#min最小值，类似</span><br></pre></td></tr></table></figure><p>求和：sum</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select sun (《字段》) from 《表名称》；</span><br></pre></td></tr></table></figure><p>平均数：avg</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#某字段列的平均值</span><br><span class="line">select avg(《字段》) from 《表名称》；</span><br><span class="line">#也可加入where对某条记录求平均值</span><br><span class="line"></span><br><span class="line">#对平均数以某字段分组：group by</span><br><span class="line">select avg(《字段》) from 《表名称》  group by 《字段》；</span><br><span class="line">例：select 学科 avg（成绩）from 成绩表 group by 学生姓名；</span><br></pre></td></tr></table></figure><p>having和where差不多功能，都是后面跟条件，但having只能在where后或group by 后，可理解为并且</p><p>显示数据条目：limit 数字，数字</p><p>（第一个‘数字’代表从几条数据开始（起始0），第二个‘数字’代表显示几条数据）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查询条目中，从第一条数据开始（起始行为0），显示1行数据</span><br><span class="line">select * from 《表名称》 limit 0，1；</span><br><span class="line">#查询条目中，从第二条数据开始，显示3条数据</span><br><span class="line">select * from 《表名称》 limit 1，3；</span><br></pre></td></tr></table></figure><p>合并字段：concat</p><p>实现多个字段为一个字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select concat(字段1，字段2，字段3。。。) from 《表名称》；</span><br></pre></td></tr></table></figure><p>多表查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#两表全部查询，并where一个匹配的字段值</span><br><span class="line">select * from 《表名称1》,《表名称2》 where 《表名称1.字段》=《表名称2.字段》</span><br><span class="line">#两表全部查询，显示指定值，并指定一个匹配的字段值（注where字段不能出现在select中）</span><br><span class="line">select 《字段1》，《字段2》,《字段3。。。》 from 《表名称1》,《表名称2》 where 《表名称1.字段》=《表名称2.字段》</span><br><span class="line"></span><br><span class="line">#两表全部查询，并where一个匹配的字段值,仅显示指定记录</span><br><span class="line">select * from 《表名称1》,《表名称2》 where 《表名称1.字段》=《表名称2.字段》 and 《表名称.字段》=《值》</span><br><span class="line"></span><br><span class="line">#三表查询</span><br><span class="line">select * from 《表名称1》,《表名称2》，《表名称3》 where 《表名称1.字段》=《表名称2.字段》 and 《表名称1.字段》=《表名称3.字段》</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#where后直接加入值！</span><br><span class="line">select * from 《表名称1》,《表名称2》，《表名称3》 where 《表名称1.字段》=《值》《表名称2.字段》=《值》 and 《表名称3.字段》=《值》</span><br><span class="line"></span><br><span class="line">#以此类推：and</span><br><span class="line">如果想把select中把where后的表字段显示，必须加《表.字段》</span><br></pre></td></tr></table></figure><p>模糊查找：like 和 not like 后面通常跟%（通配符）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#以3开头：3%</span><br><span class="line">select * from 《表名称》 where 《字段》 like “3%”；</span><br><span class="line">#以3结尾：%3</span><br><span class="line">select * from 《表名称》 where 《字段》 like “%3”；</span><br><span class="line">#包含3：%3%</span><br><span class="line">select * from 《表名称》 where 《字段》 like “%3%”；</span><br><span class="line">#以此类推 not like</span><br><span class="line">#不以3开头：</span><br><span class="line">select * from 《表名称》 where 《字段》  not like “3%”；</span><br></pre></td></tr></table></figure><p>别名：as</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 《字段》as 《新别名》 from 《表名称》；</span><br></pre></td></tr></table></figure><p>当前时间：now</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select now();</span><br></pre></td></tr></table></figure><p>取年份：year（输出结果只有年份）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#取当前年份</span><br><span class="line">select year (now());</span><br><span class="line">#取字段中的年份</span><br><span class="line">select year(《日期字段》) from 《表名称》;</span><br><span class="line">#例：计算学生当前的年龄</span><br><span class="line">select name as 姓名,year(now())-year(《出生年月字段》) as 年龄 from 学生表；</span><br></pre></td></tr></table></figure><p>拼接并集：union（拼接字段类型无所谓，但字段数量必须相同）</p><p>常用于两个相同的复杂select</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 《表名称》 where 《字段》=值 union select * from 《表名称》 where 《字段》=值</span><br></pre></td></tr></table></figure><p>至少，任意：any</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#例，表1中字段比表2最小值都大</span><br><span class="line">select * from 《表名称1》 where 《字段》&gt;any(select 《比较字段》 form 《表名称2》)</span><br></pre></td></tr></table></figure><p>全部： all</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#例，表1中字段比表2任意一个值都大</span><br><span class="line">select * from 《表名称1》 where 《字段》&gt;all(select 《比较字段》 form 《表名称2》)</span><br></pre></td></tr></table></figure><p>复制表做筛选条件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#例：一张成绩单，需要筛选出每科比平均数分数低的</span><br><span class="line">#同一张表，出现两次，并分别命名为a表和b表</span><br><span class="line">select from 成绩表 a where degree&lt;(select avg(成绩) from 成绩表 b where a.《学号字段》=b.《学号字段》);</span><br></pre></td></tr></table></figure><p>连接查询：</p><p>select 。。。from 《表名称1》 《连接》 《表名称2》 on 《条件》</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#内连接：join （或 inner join）</span><br><span class="line">#将相同的字段值显示出来，不同的不显示</span><br><span class="line">select * from 表1 join 表2 on 表1.字段=表2.字段</span><br><span class="line"></span><br><span class="line">#左外连接查询：left join （或 left outer join）</span><br><span class="line">#左侧表为基准，右侧没有的数据的null（下例表1全部显示）</span><br><span class="line">select * from 表1  left join 表2 on 表1.字段=表2.字段</span><br><span class="line"></span><br><span class="line">#右外连接查询：right join （或 right outer join）</span><br><span class="line">#和left join相反：右侧表为基准，左侧没有的数据的null（下例表2全部显示）</span><br><span class="line">select * from 表1  left join 表2 on 表1.字段=表2.字段</span><br><span class="line">#完全外连接查询：full join</span><br><span class="line">#mysql不支持full join，但可以将left join+right合并实现</span><br><span class="line">select * from 表1  left join 表2 on 表1.字段=表2.字段</span><br><span class="line">union</span><br><span class="line">select * from 表1  right join 表2 on 表1.字段=表2.字段</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-6.png"></p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> mysql查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos-二次验证登录（google-authenticator）</title>
      <link href="/posts/98d52cce.html"/>
      <url>/posts/98d52cce.html</url>
      
        <content type="html"><![CDATA[<p>好几天没写centos的文章了，今天写个二次登录验证（前面写了windows登录二次验证，需要的也可以去看看）</p><p>准备：</p><p>手机安装二次验证app，我使用阿里云app（也可安装其它app很多：Google Authenticator、Microsoft Authenticato、Authy等）</p><p>流程：</p><ul><li>安装epel源</li><li>安装google-authenticator</li><li>配置ssh</li><li>生成google-authenticator配置</li><li>登录测试</li></ul><h2 id="第一步，安装epel源"><a href="#第一步，安装epel源" class="headerlink" title="第一步，安装epel源"></a>第一步，安装epel源</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure><h2 id="第二步，安装google-authenticator"><a href="#第二步，安装google-authenticator" class="headerlink" title="第二步，安装google-authenticator"></a>第二步，安装google-authenticator</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install google-authenticator</span><br></pre></td></tr></table></figure><h2 id="第三步，配置ssh"><a href="#第三步，配置ssh" class="headerlink" title="第三步，配置ssh"></a>第三步，配置ssh</h2><p>需修改两处ssh的配置文件</p><p>1.&#x2F;etc&#x2F;pam.d&#x2F;sshd文件追加pam_google_authenticator.so组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;auth required pam_google_authenticator.so&quot; &gt;&gt;/etc/pam.d/sshd</span><br></pre></td></tr></table></figure><p>2.&#x2F;etc&#x2F;ssh&#x2F;sshd_config文件修改ChallengeResponseAuthentication为yes</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g&#x27; /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>3.重启ssh服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><h2 id="第四步，生成google-authenticator配置"><a href="#第四步，生成google-authenticator配置" class="headerlink" title="第四步，生成google-authenticator配置"></a>第四步，生成google-authenticator配置</h2><p>默认全部y即可！</p><p>配置生成完成后会在当前用户家目录生成.google-authenticator文件，注意保存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查看生成的秘钥，及5个一次性验证，</span><br><span class="line">cat ~/.google-authenticator</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-3.png"></p><p>google-authenticator -h 查看相关帮助。</p><p>可通过生成的二维码进行绑定，或者是秘钥绑定手动绑定app。</p><h2 id="第五步，登录测试"><a href="#第五步，登录测试" class="headerlink" title="第五步，登录测试"></a>第五步，登录测试</h2><p>shell工具配置登录</p><p>验证方式选择：Keyboard Interactive</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-4.png"></p><p>登录提示：password是服务器密码，code是动态验证码</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-5.png"></p><h2 id="其他："><a href="#其他：" class="headerlink" title="其他："></a>其他：</h2><p>本教程默认以时间同步为基准，如果服务器时间和手机时间不同步将导致无法登录服务器。</p><p>时区，时间同步问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#查看当前时区</span><br><span class="line">timedatectl status</span><br><span class="line">#设置上海时区</span><br><span class="line">timedatectl set-timezone Asia/Shanghai</span><br><span class="line">#安装nptdate工具</span><br><span class="line">yum -y install nptdate</span><br><span class="line">#同步时间</span><br><span class="line">ntpdate ntp1.aliyun.com</span><br><span class="line">#同步bios时钟</span><br><span class="line">clock -w</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google-authenticator </tag>
            
            <tag> 二次验证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql 中文乱码</title>
      <link href="/posts/98f0b529.html"/>
      <url>/posts/98f0b529.html</url>
      
        <content type="html"><![CDATA[<h2 id="第一种：修改编码集"><a href="#第一种：修改编码集" class="headerlink" title="第一种：修改编码集"></a>第一种：修改编码集</h2><p>查看当前使用的哪个库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select database ();</span><br></pre></td></tr></table></figure><p>查看当前库字符集：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &quot;%char%&quot;;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image.png"></p><p>修改编码格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set character_set_database=utf8;</span><br><span class="line">mysql&gt; set character_set_server=utf8;</span><br></pre></td></tr></table></figure><p>第二种：修改my.cnf配置文件</p><p>编辑&#x2F;etc&#x2F;my.cnf，后追加下面配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"> </span><br><span class="line">character_set_server = utf8</span><br><span class="line"> </span><br><span class="line">[mysql]</span><br><span class="line"> </span><br><span class="line">default-character-set=utf8</span><br><span class="line"> </span><br><span class="line">[client]</span><br><span class="line"> </span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure><h2 id="其他："><a href="#其他：" class="headerlink" title="其他："></a>其他：</h2><p>创建库、表时，追加 character set &#x3D;utf8 collate &#x3D; utf8_bin；</p><p>characet set:设置编码集</p><p>collate ：排序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#创建库</span><br><span class="line">create database 《库名称》 character set =utf8 collate = utf8_bin;</span><br><span class="line">#创建表</span><br><span class="line">create table 《表名称》 （ 《字段名》《字段类型》《字段约束》）character set =utf8 collate = utf8_bin;</span><br></pre></td></tr></table></figure><p>alter 修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#修改库编码集及排序</span><br><span class="line">alter database 《库名称》 character set =utf8 collate = utf8_bin;</span><br><span class="line">#修改表编码集及排序</span><br><span class="line">alter table 《表名称》character set =utf8 collate = utf8_bin;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> utf8 </tag>
            
            <tag> 中文乱码 </tag>
            
            <tag> 中文编码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql 创建用户及权限</title>
      <link href="/posts/8c579018.html"/>
      <url>/posts/8c579018.html</url>
      
        <content type="html"><![CDATA[<p>创建用户：create user</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#主机地址：可以是本地（localhost）、或某个IP、网段、域名、或任意（%）</span><br><span class="line">create user &#x27;用户名&#x27;@&#x27;主机地址&#x27; identified by ‘密码’；</span><br><span class="line"></span><br><span class="line">#例：创建用户名为test,本地登录，密码为空</span><br><span class="line">create user &#x27;test&#x27;@&#x27;localhost&#x27;</span><br><span class="line">#例：创建用户名为test,仅192.168.1.100登录，密码为空</span><br><span class="line">create user &#x27;test&#x27;@&#x27;192.168.1.100&#x27;</span><br><span class="line">#例：创建用户名为test,仅192.168.1.*网段登录，密码为空</span><br><span class="line">create user &#x27;test&#x27;@&#x27;192.168.1.%&#x27;</span><br><span class="line">#例：创建用户名为test,仅192.*.*.*网段登录，密码为空</span><br><span class="line">create user &#x27;test&#x27;@&#x27;192.%.%.%&#x27;</span><br><span class="line">#例：创建用户名为test,任意地址登录，密码为空</span><br><span class="line">#create user &#x27;test&#x27;@&#x27;%&#x27; </span><br><span class="line">#例：创建用户名为test,任意地址登录，密码123456</span><br><span class="line">create user &#x27;test&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查询mysql库/user中test是否添加成功</span><br><span class="line">select user from mysql.user;</span><br></pre></td></tr></table></figure><p>删除用户：drop user</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">drop user 用户名；</span><br><span class="line">#例：删除test用户</span><br><span class="line">drop user test;</span><br><span class="line">#查询mysql库/user中test是否删除成功</span><br><span class="line">select user from mysql.user;</span><br></pre></td></tr></table></figure><p>查看授权：show grants（后面有个s） for</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查看当前用户权限</span><br><span class="line">show grants</span><br><span class="line">#查看某用户权限</span><br><span class="line">show grants for 用户名</span><br></pre></td></tr></table></figure><p>用户授权：grant … on … to …</p><p>查看select，插入insert , 修改update，删除delect</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">grant 权限 on 数据库.表 to 用户名；</span><br><span class="line">#例：</span><br><span class="line">#用户test授权selct权限，在mysql库/user表</span><br><span class="line">grant select mysql.user to test;</span><br><span class="line">#用户test授权全部权限，在mysql库/user表</span><br><span class="line">grant all mysql.user to test;</span><br><span class="line">#用户test授权全部权限，在mysql库/所有表</span><br><span class="line">grant all mysql.* to test;</span><br><span class="line">用户test授权全部权限，在所有库/所有表</span><br><span class="line">grant all *.* to test;</span><br></pre></td></tr></table></figure><p>取消授权：revoke … on … from …</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#通过查询到的权限进行删除</span><br><span class="line">revoke 权限 on 数据库.表 from 用户名；</span><br></pre></td></tr></table></figure><p>刷新权限：flush privileges;</p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> mysql权限 </tag>
            
            <tag> mysql用户 </tag>
            
            <tag> 权限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql修改密码</title>
      <link href="/posts/dd025b67.html"/>
      <url>/posts/dd025b67.html</url>
      
        <content type="html"><![CDATA[<p>第一种：通过mysql自带工具修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#mysqladmin二进制工具</span><br><span class="line">mysqladmin -u用户名 -p旧密码 password 新密码</span><br><span class="line">#mysql_secure_installation初始化工具（需旧密码）</span><br><span class="line">引导流程</span><br></pre></td></tr></table></figure><p>第二种：set password（需登录数据库）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">######需登录数据库，</span><br><span class="line">#修改当前用户密码</span><br><span class="line">mysql&gt;set password = password (&#x27;新密码&#x27;)；</span><br><span class="line">#修改其他用户密码</span><br><span class="line">mysql&gt;set password for 用户名@localhost = password(&#x27;新密码&#x27;)；</span><br></pre></td></tr></table></figure><p>第三种：update修改数据（需登录数据库）</p><p>mysql用户表都在：mysql库&#x2F;user表中，修改authentication_string字段值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#切换mysql库</span><br><span class="line">mysql&gt; use mysql</span><br><span class="line">#update修改authentication_string，条件root用户</span><br><span class="line">mysql&gt; update user set authentication_string=password(&#x27;新密码&#x27;) where user=&#x27;root&#x27;;</span><br><span class="line">#刷新权限</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><p>其他：忘记密码</p><p>编辑my.cnf，末尾添加跳过密码验证：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip-grant-tables</span><br></pre></td></tr></table></figure><p>修改完密码，不要忘记删除skip配置</p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> mysql修改密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql 笔记（表操作）</title>
      <link href="/posts/2d0e06.html"/>
      <url>/posts/2d0e06.html</url>
      
        <content type="html"><![CDATA[<h2 id="表操作-alter-table"><a href="#表操作-alter-table" class="headerlink" title="表操作:alter table"></a>表操作:alter table</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">alter table 《表名称》</span><br><span class="line">--rename </span><br><span class="line">--add </span><br><span class="line">--drop</span><br><span class="line">--modify</span><br><span class="line">--change</span><br><span class="line"></span><br><span class="line">----after</span><br><span class="line">----first</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-26.png"></p><p>创建表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table 《表名称》 （</span><br><span class="line">字段名 字段类型 （约束条件），</span><br><span class="line">字段名 字段类型 （约束条件），</span><br><span class="line">字段名 字段类型 （约束条件），</span><br><span class="line">）；</span><br><span class="line">       </span><br></pre></td></tr></table></figure><p>删除表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table 《表名称》；</span><br></pre></td></tr></table></figure><p>删除表中全部记录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from 《表名称》；</span><br></pre></td></tr></table></figure><p>删除符合条件的记录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from 《表名称》 where 字段=&#x27;值&#x27;；</span><br></pre></td></tr></table></figure><p>插入数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#所有字段全部插入值</span><br><span class="line">insert into 《表名称》 values (&#x27;字段1值&#x27;，&#x27;字段2值&#x27;，&#x27;字段3值&#x27;...);</span><br><span class="line">#仅插入需要的字段值</span><br><span class="line">insert into 《表名称》（字段X）valuse (&#x27;字段值&#x27;)；</span><br></pre></td></tr></table></figure><p>修改数据：(注：不加条件将导致整个字段值全部为新值)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update 《表名称》 set 修改的字段=&#x27;值&#x27; where 条件字段=&#x27;值&#x27;</span><br></pre></td></tr></table></figure><p>查看表所有记录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 《表名称》；</span><br></pre></td></tr></table></figure><p>仅查看某个或几个字段记录：(字段顺序将是查询后的字段顺序)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段1，字段2 from 《表名称》；</span><br></pre></td></tr></table></figure><h2 id="表结构"><a href="#表结构" class="headerlink" title="表结构"></a>表结构</h2><p>查看表结构：describe</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc 《表名称》；</span><br></pre></td></tr></table></figure><p>修改表名称：</p><p>alter table 《旧表名称》 rename 《新表名称》;</p><p>修改字段类型：modify和change</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#modify小范围修改，仅修改类型、约束</span><br><span class="line">#修改一个字段</span><br><span class="line">alter table 《表名称》 modify 《字段名》 《新字段类型》 《新字段约束》;</span><br><span class="line">#修改多个字段</span><br><span class="line">alter table 《表名称》 modify 《字段名1》 《新字段类型》 《新字段约束》,modify 《字段名2》 《新字段类型》 《新字段约束》;</span><br><span class="line"></span><br><span class="line">##########</span><br><span class="line">#change修改字段名称+类型+约束</span><br><span class="line">alter table 《表名称》 change 《旧字段名》 《新字段名》 《新字段类型》 《新字段约束》；</span><br></pre></td></tr></table></figure><p>修改字段顺序：change(也可以修改字段名称)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#将字段修改到指定字段之后</span><br><span class="line">alter table 《表名称》 change 《旧字段名》 《新字段名》 《新字段类型》 《新字段约束》 after 《指定字段》；</span><br><span class="line">#将字段修改到第一个字段位置</span><br><span class="line">alter table 《表名称》 change 《旧字段名》 《新字段名》 《新字段类型》 《新字段约束》 frist；</span><br></pre></td></tr></table></figure><p>注：modify只可以小范围修改数据类型、约束，change可以修改字段名、数据类型、约束（chang后必须跟新字段名、类型！）</p><p>表中添加字段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#添加一个字段</span><br><span class="line">alter table 《表名称》 add 《字段名》《字段类型》 《字段约束》；</span><br><span class="line">#添加多个字段</span><br><span class="line">alter table 《表名称》 add 《字段名1》《字段类型1》 《字段约束1》，add 《字段名2》《字段类型2》 《字段约束2》；</span><br><span class="line">#添加多个字段，也可以使用括号（）</span><br><span class="line">alter table 《表名称》 add (《字段名1》《字段类型1》 《字段约束1》,《字段名2》《字段类型2》 《字段约束2》....);</span><br><span class="line">#在《指定字段》后面加入新字段</span><br><span class="line">alter tabel 《表名称》 add 《字段名》《字段类型》 《字段约束》after《指定字段》;</span><br><span class="line">#添加字段到第一个字段：first（没有在指定字段之前加入字段）</span><br><span class="line">alter table 《表名称》 add 《字段名》《字段类型》 《字段约束》first;</span><br></pre></td></tr></table></figure><p>表中删除字段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 《表名称》 drop 《字段名》；</span><br></pre></td></tr></table></figure><h2 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h2><p>约束</p><p>说明</p><p>PRIMARY KEY</p><p> 主键约束，唯一的标识对应的元组（不重复且非空）</p><p>FOREIGN KEY</p><p> 外键约束，是与之联系某表的主键</p><p> NOT NULL</p><p> 非空约束，不能为空</p><p>UNIQUE</p><p> 唯一约束，该属性的值是唯一的</p><p>AUTO_INCREMENT</p><p>自增约束，MySQL的SQL语句的特色（自动增加）</p><p>DEFAULT</p><p>默认约束，该属性设置默认值</p><p>删除约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#删除主键约束 primary key </span><br><span class="line">alter table 《表名称》 drop primary key;</span><br><span class="line">#删除外键约束 foreign key</span><br><span class="line"></span><br><span class="line">#删除非空约束</span><br><span class="line">利用modify和change修改为null</span><br><span class="line">#删除唯一约束</span><br><span class="line">alter table 《表名称》 drop 《字段名》;</span><br></pre></td></tr></table></figure><p>后期添加字段约束：（不能忘记括号）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 《表名称》 add 《字段约束》 (《字段名》)；</span><br></pre></td></tr></table></figure><p>后期修改：modify或change</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#modify</span><br><span class="line">alter tabel 《表名称》 modify 《字段名》《新字段类型》 《新字段约束》；</span><br><span class="line">#change</span><br><span class="line">alter tabel 《表名称》 change 《字段名》《新字段名》《新字段类型》 《新字段约束》；</span><br></pre></td></tr></table></figure><p>创建表时候直接添加，不复述。</p><p>主键约束：primary key</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#第一种：主键约束（约束一个主键）</span><br><span class="line">create table 《表名称》 (</span><br><span class="line">id int primary key,</span><br><span class="line">name varchar (20),</span><br><span class="line">Password varchar (20),</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#第二种：联动约束（约束多个主键）</span><br><span class="line">create table 《表名称》 (</span><br><span class="line">id int,</span><br><span class="line">name varchar (20),</span><br><span class="line">Password varchar (20),</span><br><span class="line">Primary key (id ,name)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#注注注：如果前期忘记添加主键约束，可通过alter增加主键</span><br><span class="line">alter table 《表名称》 add primary key (字段名);</span><br><span class="line">#注注注：删除表结构主键约束</span><br><span class="line">alter table 《表名称》 drop primary key；</span><br></pre></td></tr></table></figure><p>自增约束：aute_increment</p><p>通常和主键一起使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table 《表名称》(</span><br><span class="line">id int primary key auto_incerment,</span><br><span class="line">name varchar(20),</span><br><span class="line">password varchar(20),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>删除约束：</p><p>表中添加一个新字段并放置一个字段位置，并唯一约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 《表名称》 add 《字段名》unique first；</span><br></pre></td></tr></table></figure><p>修改字段：添加唯一约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 《表名称》 modify 《字段名》 《新字段类型》unique;</span><br></pre></td></tr></table></figure><p>删除唯一约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter tabel 《表名称》 drop index 《字段名》；</span><br></pre></td></tr></table></figure><p>注：如果多个字段组合唯一约束，需组合的记录不能重复！（key:mul）</p><p>外键约束：子表引用父表</p><p>外键关联的字段必须有唯一性（唯一约束或主键约束）</p><p>作用：父表约束子表信息</p><p>foreign key (《本子表中的字段》) references 《父表》 ( 《父表字段》）；</p><p>注：暴力删除父表外键约束数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#禁用外键约束</span><br><span class="line">set FOREIGN_KEY_CHECKS=0;</span><br><span class="line">#恢复外键约束</span><br><span class="line">set FOREIGN_KEY_CHECKS=1;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> mysql表操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 开机启动脚本（服务）</title>
      <link href="/posts/959bc4b6.html"/>
      <url>/posts/959bc4b6.html</url>
      
        <content type="html"><![CDATA[<p>centos开机配置位于&#x2F;etc&#x2F;rc.d目录下，所以操作都在此目录下进行！</p><h2 id="第一种：修改-x2F-etc-x2F-rc-d-x2F-rc-local文件"><a href="#第一种：修改-x2F-etc-x2F-rc-d-x2F-rc-local文件" class="headerlink" title="第一种：修改&#x2F;etc&#x2F;rc.d&#x2F;rc.local文件"></a>第一种：修改&#x2F;etc&#x2F;rc.d&#x2F;rc.local文件</h2><p>通常只用于开机启动一下脚本。</p><p>1.rc.local添加可执行权限</p><p>2.rc.local末尾添加脚本路径</p><h2 id="第二种：ln-s-软链接，实现开机启动"><a href="#第二种：ln-s-软链接，实现开机启动" class="headerlink" title="第二种：ln -s 软链接，实现开机启动"></a>第二种：ln -s 软链接，实现开机启动</h2><p>适合DIY(弊端：开机和关机都会执行)</p><p>默认脚本都会放在开机脚本目录：&#x2F;etc&#x2F;rc.d&#x2F;init.d目录下</p><p>1.将写好的脚本放置&#x2F;etc&#x2F;rc.d&#x2F;init.d目录下</p><p>2.在对应的启动级别（rc*.d）中，放置软连接,并重命名S开头!(S表示start，K表示kill)</p><h2 id="第三种：使用chkconfig命令添加服务"><a href="#第三种：使用chkconfig命令添加服务" class="headerlink" title="第三种：使用chkconfig命令添加服务"></a>第三种：使用chkconfig命令添加服务</h2><p>1.将写好的脚本放置&#x2F;etc&#x2F;rc.d&#x2F;init.d目录下,并添加执行权限</p><p>2.添加启动脚本到服务命令：chkconfig –add 脚本名称</p><p>chkconfig 默认读取的脚本位于：&#x2F;etc&#x2F;rc.d&#x2F;init.d目录下</p><p>脚本格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line">#chkconfig：2345 66 88</span><br><span class="line">命令或脚本路径</span><br></pre></td></tr></table></figure><p>“#chkconfig：”（chkconfig语法，<strong>冒号不能丢！！！否则提示不支持</strong>）</p><p>“2345”（启动级别）</p><p>“66”（启动优先级，<strong>优先级范围是0－100，数字越大，优先级越低。</strong>）</p><p>“88”（关机优先级，<strong>优先级范围是0－100，数字越大，优先级越低。</strong>）</p><p>chkconfig语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chkconfig [--add][--del][--list][系统服务] 或 chkconfig [--level &lt;等级代号&gt;][系统服务][on/off/reset]</span><br><span class="line">--add   添加服务</span><br><span class="line">--del   删除服务</span><br><span class="line">--list  查看服务</span><br></pre></td></tr></table></figure><p># 缺省的运行级，RHS用到的级别如下：<br>0：关机<br>1：单用户模式<br>2：无网络支持的多用户模式<br>3：有网络支持的多用户模式<br>4：保留，未使用<br>5：有网络支持有X-Window支持的多用户模式<br>6：重新引导系统，即重启</p><h1 id="对各个运行级的详细解释："><a href="#对各个运行级的详细解释：" class="headerlink" title="对各个运行级的详细解释："></a>对各个运行级的详细解释：</h1><p>0 为停机，机器关闭。<br>1 为单用户模式，就像Win下的安全模式类似。<br>2 为多用户模式，但是没有NFS支持。<br>3 为完整的多用户模式，是标准的运行级。<br>4 一般不用，在一些特殊情况下可以用它来做一些事情。例如在笔记本 电脑的电池用尽时，可以切换到这个模式来做一些设置。<br>5  就是X11，进到X Window系统了。<br>6  为重启，运行init 6机器就会重启。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL常用语句</title>
      <link href="/posts/fe6df51c.html"/>
      <url>/posts/fe6df51c.html</url>
      
        <content type="html"><![CDATA[<p>创建数据库：create database &lt;数据库名称&gt;;</p><p>删除数据库：drop database &lt;数据库名称&gt;;</p><p>使用数据库：use &lt;数据库名称&gt;;</p><p>查询库：show databases;</p><p>创建表：create table &lt;表名称&gt; (字段及类型1 ,字段及类型2,字段及类型3 …);</p><p>删除表：drop table &lt;表名称&gt;；</p><p>查询表：show tables;</p><p>查询表结构：describe &lt;表名称&gt; ; 或 desc &lt;表名称&gt;；</p><p>查询表信息：select * form &lt;表名称&gt;；</p><p>筛选某字段中的信息：select * form &lt;表名称&gt; where &lt;字段&gt;&#x3D;&lt;值&gt;;</p><p>插入数据：insert into &lt;表名称&gt; values (‘字段1值’,’字段2值’,’字段3值’…);</p><p>删除数据：delete form &lt;表名称&gt; where &lt;字段&gt;&#x3D;&lt;值&gt;;</p><p>修改数据：update &lt;表名称&gt; set &lt;字段&gt;&#x3D;&lt;新值&gt; where &lt;字段&gt;&#x3D;&lt;旧值&gt; ;</p><p>备份所有数据库：mysqldump -h &lt;数据库地址&gt; -u&lt;用户名&gt; -p&lt;密码&gt; –all-databases &gt; 备份位置.sql ;</p><p>备份指定数据库：mysqldump -h &lt;数据库地址&gt; -u&lt;用户名&gt; -p&lt;密码&gt; –databases 数据库1 数据库2 &gt; 备份文件.sql ;</p><p>恢复数据库：mysql -u&lt;用户名&gt; -p&lt;密码&gt; &lt; 备份文件.sql ;</p><p>登入数据库对本地文件进行恢复：source 本地备份文件.sql ;</p><p>库表操作：</p><p>创建：create</p><p>删除：dorp</p><p>数据操作：</p><p>增：insert</p><p>删：delete</p><p>改：update</p><p>查：select</p><p>查询默认编码集：show variables like “%char%”;</p><p>查询默认导出目录：show variables like “%secure%”</p><p>select查询结果导出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#登录数据库</span><br><span class="line"> select ... [where] ... into outfile &#x27;本地路径&#x27;；</span><br><span class="line">注：linux在/etc/my.conf中添加本地保存路径是，本地目录要有mysql用户的读写权限</span><br><span class="line">#mysql未登录数据库</span><br><span class="line">mysql  -u用户名 -p密码  -e&quot;SQL语句&quot; 数据库名 &gt; filename</span><br><span class="line"># 如果为远程数据库，可以采用如下方式：</span><br><span class="line">mysql -h地址 -P端口 -u用户名 -p密码 -N -e&quot;SQL语句&quot; 数据库名 &gt; filename</span><br></pre></td></tr></table></figure><p>mysql复制数据库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump 《数据库名》 -u用户名 -p密码 -add-drop-table  mysql 《已创建的新库》 -u用户名 -p密码 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESXI7 安装教程</title>
      <link href="/posts/e5c27276.html"/>
      <url>/posts/e5c27276.html</url>
      
        <content type="html"><![CDATA[<p>做个简图方便了解vmware,esxi,docker的区别</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-5.png"></p><p>上图可以看出vmware和docker都可以理解为在已安装（win&#x2F;linux&#x2F;mac）的系统之上安装了一个应用管理app。</p><p>而esxi可以理解为在硬件上直接安装的管理系统。</p><p>无论是安装ESXi 7.0，还是vCenter Server Appliance，与vSphere 6.7都非常相似或者说相同，用安装vSphere 6.7的方法安装7.0就行。无论是在Workstation的虚拟机安装ESXi，还是使用物理机安装ESXi，都很容易。但ESXi已经放弃了对一些网卡的支持，如果以前在ESXi 6.0、6.5、6.7中能正常使用的网卡，在7.0中可能已经不再受到支持。</p><p>附测试秘钥：</p><ul><li>VMware vCenter 7.0 Standard<br>104HH-D4343-07879-MV08K-2D2H2<br>410NA-DW28H-H74K1-ZK882-948L4<br>406DK-FWHEH-075K8-XAC06-0JH08</li><li>VMware vSphere ESXi 7.0 Enterprise Plus<br>JJ2WR-25L9P-H71A8-6J20P-C0K3F<br>HN2X0-0DH5M-M78Q1-780HH-CN214<br>JH09A-2YL84-M7EC8-FL0K2-3N2J2</li></ul><p>安装没什么难度，注意看系统提示就OK.</p><p>注：默认ESXI有密码复杂度，大小写+数字，文章底部有修改密码复杂度</p><p>挂载ISO，开始安装</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-6.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-7.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-8.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-9.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-10.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-11.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-12.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-13.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-14.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-15.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-18.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-22.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-23.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-24.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-25.png"></p><p>打开浏览器访问配置的IP</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-19.png"></p><p>秘钥</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-20.png"></p><p>OK,折腾吧。</p><p>———————————————————————————————————————————</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h4 id="关闭密码复杂度：需要修改pam认证配置"><a href="#关闭密码复杂度：需要修改pam认证配置" class="headerlink" title="关闭密码复杂度：需要修改pam认证配置"></a>关闭密码复杂度：需要修改pam认证配置</h4><p>第一步，打开ssh</p><p>esxi安装后，就可以打开（第一种方法）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-9.png"></p><p>web页面也可以打开（第二种方法，根据自己情况，自行选择）</p><p>在服务列表中向下滑动，找到ssh，右键“启动”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-8.png"></p><p>第二步,ssh登录</p><p>编辑 &#x2F;etc&#x2F;pam.d&#x2F;passwd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注释掉：password   requisite    /lib/security/$ISA/pam_passwdqc.so retry=3 min=disabled,disabled,disabled,7,7</span><br><span class="line"></span><br><span class="line">再添加：password   required    /lib/security/$ISA/pam_passwdqc.so retry=3 min=disabled,disabled,7,7,7 max=30 match=4 similar=deny enforce=users</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-7.png"></p><p>保存后就可以通过passwd进行root密码修改，或者再web页面修改。</p><h4 id="vmrc访问"><a href="#vmrc访问" class="headerlink" title="vmrc访问"></a>vmrc访问</h4><p>vmrc:&#x2F;&#x2F;主机IP:端口号&#x2F;?moid&#x3D;虚拟主机ID</p><p>注：当前查看虚拟主机ID为2</p><p>所以：vmrc:&#x2F;&#x2F;192.168.68.222&#x2F;?moid&#x3D;2</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-12.png"></p><h4 id="vmrc连接小技巧"><a href="#vmrc连接小技巧" class="headerlink" title="vmrc连接小技巧"></a>vmrc连接小技巧</h4><p>偶尔需要将单个vm分享给别人，就需要获取vmrc地址后，再告知对方要贴在浏览器中并收藏，懒人，做个bat，直接双击更方便。</p><p>首先vmrc格式：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-10.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#第一个，这是esxi自动生成的，第2个vm（moid=2）</span><br><span class="line">start iexplore &quot;vmrc://clone:cst-52653d6b-caa5-854b-136b-9d2906b466f3--tp-15-68-53-CA-EF-86-F5-DD-23-4C-F8-80-5E-DD-0E-B2-5D-EE-27-B3@192.168.68.222/?moid=2&quot;</span><br><span class="line"> </span><br><span class="line">#ESXI地址vm编号（第几个vm）</span><br><span class="line">start iexplore &quot;vmrc://192.168.68.222/?moid=2&quot;</span><br><span class="line">#或者给出esxi给vm分配的用户名</span><br><span class="line">start iexplore &quot;vmrc://centos@192.168.68.222/?moid=2&quot;</span><br></pre></td></tr></table></figure><p>因此bat启动格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#使用ie浏览器打开</span><br><span class="line">start iexplore &quot;vmrc://《vmrc生成的地址》&quot;</span><br><span class="line">#如果google浏览器打开（以此类推）</span><br><span class="line">start chrome &quot;vmrc://《vmrc生成的地址》&quot;</span><br></pre></td></tr></table></figure><p>所以，但为了更好的完善“一键”，需要客户机装vmrc，可以将vmrc和bat使用rar工具封装为一个exe，让客户机去执行。</p><p>包内就2个文件：vmrc.exe和这个bat</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/12/image-11.png"></p><p>附上我封装exe时用的bat（如果vmrc存在就直接启动，不存在则安装vmrc）</p><p>注：如果你还想懒，还可以使用rar工具在桌面生成快捷方式！！！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">@echo off &amp; title 启动VMRC</span><br><span class="line"></span><br><span class="line">REM 保存bat时，请使用ANSI编码，否则报错！！</span><br><span class="line">REM 保存bat时，请使用ANSI编码，否则报错！！</span><br><span class="line">REM 保存bat时，请使用ANSI编码，否则报错！！</span><br><span class="line"></span><br><span class="line">REM 将引号内部分改成你要查找的服务名称 </span><br><span class="line">REM 后面这个方法无效： sc query find /i &quot;serviceName&quot; &gt;nul 2&gt;nul</span><br><span class="line">SC QUERY &quot;VMUSBArbService&quot; &gt; NUL</span><br><span class="line">IF not ERRORLEVEL 1 GOTO EXIST</span><br><span class="line">GOTO NOTEXIST</span><br><span class="line">REM（另外，上方的if这里好像不识别无需else）</span><br><span class="line"></span><br><span class="line">:NOTEXIST</span><br><span class="line">REM 这里写服务不存在时用的代码</span><br><span class="line">ECHO  &quot;VMUSBArbService&quot; service 不存在</span><br><span class="line"></span><br><span class="line">REM 延申：服务不存在可以执行安装操作！（VMRC静默安装）</span><br><span class="line">ECHO  正在安装VMRC，请等待。。。</span><br><span class="line">vmrc《写你的vmrc具体名称》.exe  /s /v &quot;/qn EULAS_AGREED=1  AUTOSOFTWAREUPDATE=0 DATACOLLECTION=0&quot;</span><br><span class="line">GOTO END</span><br><span class="line"></span><br><span class="line">:EXIST</span><br><span class="line">REM 这里写服务存在时用的代码</span><br><span class="line">ECHO  &quot;VMUSBArbService&quot; service 已存在</span><br><span class="line">GOTO END</span><br><span class="line"></span><br><span class="line">:END</span><br><span class="line">start iexplore &quot;vmrc://192.168.68.222/?moid=2&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> esxi </tag>
            
            <tag> vmware </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>已有LNMP环境下搭建Zabbix5</title>
      <link href="/posts/e0bf8538.html"/>
      <url>/posts/e0bf8538.html</url>
      
        <content type="html"><![CDATA[<p>zabbix官方手册：<a href="https://www.zabbix.com/documentation/5.0/zh/manual">https://www.zabbix.com/documentation/5.0/zh/manual</a></p><p>官方项目地址：<a href="https://cdn.zabbix.com/zabbix/sources/stable/">https://cdn.zabbix.com/zabbix/sources/stable/</a></p><p>网上看到教程大多是使用zabbix官方环境下搭建的，但我们已经有了LNMP的情况下，再去使用官方的环境就有些许的多余了。</p><p>所以这里我写个已有lnmp+zabbix5.0</p><p>背景环境：</p><ul><li>centos7.6</li><li>已安装LNMP（nginx1.16，mysql5.7,php7.2）</li></ul><p>如果没有安装lnmp，可使用我的脚本：</p><p>bash &lt;(curl <a href="https://gitee.com/ffing/onekey/raw/master/onekey.sh">https://gitee.com/ffing/onekey/raw/master/onekey.sh</a>)</p><p>流程：</p><ul><li>一，安装zabbix服务端客户端</li><li>二，安装web界面</li><li>三，配置</li><li>四，测试</li></ul><h2 id="一，安装zabbix服务端客户端"><a href="#一，安装zabbix服务端客户端" class="headerlink" title="一，安装zabbix服务端客户端"></a>一，安装zabbix服务端客户端</h2><h4 id="1-下载zabbix源"><a href="#1-下载zabbix源" class="headerlink" title="1.下载zabbix源"></a>1.下载zabbix源</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#安装官方源</span><br><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span><br><span class="line">#替换阿里源</span><br><span class="line">sed -i &#x27;s#http://repo.zabbix.com#https://mirrors.aliyun.com/zabbix#&#x27; /etc/yum.repos.d/zabbix.repo</span><br></pre></td></tr></table></figure><h4 id="2-安装服务端、客户端、测试命令"><a href="#2-安装服务端、客户端、测试命令" class="headerlink" title="2.安装服务端、客户端、测试命令"></a>2.安装服务端、客户端、测试命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install zabbix-server-mysql zabbix-agent zabbix-get</span><br></pre></td></tr></table></figure><h2 id="二，安装web界面"><a href="#二，安装web界面" class="headerlink" title="二，安装web界面"></a>二，安装web界面</h2><h4 id="1-下载zabbix项目"><a href="#1-下载zabbix项目" class="headerlink" title="1.下载zabbix项目"></a>1.下载zabbix项目</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#安装wget（如有可忽略）</span><br><span class="line">yum -y install wget</span><br><span class="line">#下载官方zabbix项目（根据自己版本需求下载，我这里下载5.0.15）</span><br><span class="line">wget https://cdn.zabbix.com/zabbix/sources/stable/5.0/zabbix-5.0.15.tar.gz</span><br></pre></td></tr></table></figure><h4 id="2-解压出zabbix包的web界面到nginx站点目录"><a href="#2-解压出zabbix包的web界面到nginx站点目录" class="headerlink" title="2.解压出zabbix包的web界面到nginx站点目录"></a>2.解压出zabbix包的web界面到nginx站点目录</h4><p>（压缩包内“ui”的文件夹）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#解压刚刚下载的zabbix项目包</span><br><span class="line">tar -xvf zabbix-5.0.15.tar.gz</span><br><span class="line">#zabbix-5.0.15目录下的“ui”目录，复制并重命名为zabbix-web到/usr/share/nginx下</span><br><span class="line">cp -r ./zabbix-5.0.15/ui /usr/share/nginx/zabbix-web</span><br><span class="line">#修改目录权限（php写入权限，可自行查看php用户，我这里是apache）</span><br><span class="line">chown -R apache:apache /usr/share/nginx/zabbix-web</span><br></pre></td></tr></table></figure><h2 id="三，修改配置"><a href="#三，修改配置" class="headerlink" title="三，修改配置"></a>三，修改配置</h2><h4 id="1-mysql相关"><a href="#1-mysql相关" class="headerlink" title="1.mysql相关"></a>1.mysql相关</h4><p>登陆mysql，创建默认数据库zabbix（也可以根据自己需求修改）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#创建数据库zabbix</span><br><span class="line">create database zabbix character set utf8 collate utf8_bin;</span><br><span class="line">#创建用户zabbix，并设置密码为“password”</span><br><span class="line">create user zabbix@localhost identified by &#x27;password&#x27;;</span><br><span class="line">#配置zabbix权限</span><br><span class="line">grant all privileges on zabbix.* to zabbix@localhost;</span><br></pre></td></tr></table></figure><p>修改zabbix服务端配置文件&#x2F;etc&#x2F;zabbix&#x2F;zabbix_server.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#填写刚刚创建的zabbix数据库密码&quot;password&quot;</span><br><span class="line">DBPassword=password</span><br></pre></td></tr></table></figure><p>导入zabbix初始数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz  mysql -uzabbix -ppassword zabbix</span><br></pre></td></tr></table></figure><h4 id="2-nginx相关"><a href="#2-nginx相关" class="headerlink" title="2.nginx相关"></a>2.nginx相关</h4><p>创建zabbix站点配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/conf.d/zabbix.80.conf</span><br></pre></td></tr></table></figure><p>脚本内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name zabbix.ffing.cn; #根据自己情况填写域名</span><br><span class="line">root /usr/share/nginx/zabbix-web; #zabbix-web的目录</span><br><span class="line">index index.php;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ \.php$        &#123;</span><br><span class="line">fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">fastcgi_index  index.php;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">include        fastcgi_params;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：如果使用locatlhost时，需要修改端口，防止端口冲突。</p><h4 id="3-php相关"><a href="#3-php相关" class="headerlink" title="3.php相关"></a>3.php相关</h4><p>修改&#x2F;etc&#x2F;php.ini，环境监测的时候会提示信息，也可以提前修改</p><p>默认的php配置通常需要修改4处：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s#post_max_size = 8M#post_max_size = 16M #&#x27; /etc/php.ini</span><br><span class="line">sed -i &#x27;s#max_execution_time = 30#max_execution_time = 300#&#x27; /etc/php.ini</span><br><span class="line">sed -i &#x27;s#max_input_time = 60#max_input_time = 300#&#x27; /etc/php.ini</span><br><span class="line">sed -i &#x27;s#;date.timezone =#date.timezone = Asia/Shanghai#&#x27; /etc/php.ini</span><br></pre></td></tr></table></figure><p>PHP version</p><p>7.2.0</p><p>PHP option “memory_limit”</p><p>128M</p><p>PHP option “post_max_size”</p><p>16M</p><p>PHP option “upload_max_filesize”</p><p>2M</p><p>PHP option “max_execution_time”</p><p>300</p><p>PHP option “max_input_time”</p><p>300</p><p>PHP option “date.timezone”</p><p>Asia&#x2F;Shanghai</p><p>PHP databases support</p><p>PHP bcmath</p><p>PHP mbstring</p><p>PHP option “mbstring.func_overload”</p><p>off</p><p>PHP sockets</p><p>PHP gd</p><p>2</p><p>PHP gd PNG support</p><p>PHP gd JPEG support</p><p>PHP gd GIF support</p><p>PHP gd FreeType support</p><p>PHP libxml</p><p>2.6.15</p><p>PHP xmlwriter</p><p>PHP xmlreader</p><p>PHP LDAP</p><p>PHP OpenSSL</p><p>PHP ctype</p><p>PHP session</p><p>PHP option “session.auto_start”</p><p>off</p><p>PHP gettext</p><p>PHP option “arg_separator.output”</p><p>&amp;</p><h4 id="4-关闭selinux、放行端口"><a href="#4-关闭selinux、放行端口" class="headerlink" title="4.关闭selinux、放行端口"></a>4.关闭selinux、放行端口</h4><p>端口根据自己情况开放</p><p>10050-客户端端口</p><p>10051-服务器端口</p><p>关闭selinux</p><h2 id="四，测试"><a href="#四，测试" class="headerlink" title="四，测试"></a>四，测试</h2><p>重启lnmp和zabbix-server</p><p>systemctl restart nginx mysqld php-fpm zabbix-server</p><p>打开你的服务器地址：http:&#x2F;&#x2F;域名</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-7.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-8.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-9.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-10.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-11.png"></p><p>默认用户名：Admin</p><p>默认密码：zabbix</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-12.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-2.png"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>在用户配置中设置中文后，字体乱码问题：</p><p>因为zabbix使用了自己的字体库： zabbix-web站点目录&#x2F;assets&#x2F;fonts&#x2F;DejaVuSans.ttf</p><p>两种方法解决：（提前备份原有字体）</p><p>1.上传中文字体，覆盖zabbix-web站点目录&#x2F;assets&#x2F;fonts&#x2F;DejaVuSans.ttf</p><p>2.yum中文字体库，后覆盖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#安装字体</span><br><span class="line">yum install wqy-microhei-fonts -y</span><br><span class="line">#覆盖字体</span><br><span class="line">\cp /usr/share/fonts/wqy-microhei/wqy-microhei.ttc zabbix-web站点目录/assets/fonts/DejaVuSans.ttf</span><br></pre></td></tr></table></figure><p>覆盖完成后，重启zabbix-server</p><p>付nginx检测脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">#!bin/bash</span><br><span class="line">#nginx监控地址</span><br><span class="line">NGINX_HOST=127.0.0.1</span><br><span class="line">NGINX_PORT=80</span><br><span class="line">nginx</span><br><span class="line">NGINX_STATUS=status</span><br><span class="line">NGINX_COMMAND=$1</span><br><span class="line"></span><br><span class="line"># 检测nginx进程是否存在</span><br><span class="line">nginx_ping() &#123;</span><br><span class="line">    /sbin/pidof nginx  wc -l</span><br><span class="line">&#125;</span><br><span class="line">nginx_active()&#123;</span><br><span class="line">    /usr/bin/curl -s &quot;http://$NGINX_HOST:&quot;$NGINX_PORT&quot;/$NGINX_STATUS/&quot; awk &#x27;/Active/ &#123;print $NF&#125;&#x27;</span><br><span class="line">&#125;</span><br><span class="line">nginx_reading()&#123;</span><br><span class="line">    /usr/bin/curl -s &quot;http://$NGINX_HOST:&quot;$NGINX_PORT&quot;/$NGINX_STATUS/&quot; awk &#x27;/Reading/ &#123;print $2&#125;&#x27;</span><br><span class="line">&#125;</span><br><span class="line">nginx_writing()&#123;</span><br><span class="line">    /usr/bin/curl -s &quot;http://$NGINX_HOST:&quot;$NGINX_PORT&quot;/$NGINX_STATUS/&quot; awk &#x27;/Writing/ &#123;print $4&#125;&#x27;</span><br><span class="line">       &#125;</span><br><span class="line">nginx_waiting()&#123;</span><br><span class="line">    /usr/bin/curl -s &quot;http://$NGINX_HOST:&quot;$NGINX_PORT&quot;/$NGINX_STATUS/&quot; awk &#x27;/Waiting/ &#123;print $6&#125;&#x27;</span><br><span class="line">       &#125;</span><br><span class="line">nginx_accepts()&#123;</span><br><span class="line">    /usr/bin/curl -s &quot;http://$NGINX_HOST:&quot;$NGINX_PORT&quot;/$NGINX_STATUS/&quot; awk &#x27;NR==3 &#123;print $1&#125;&#x27;</span><br><span class="line">       &#125;</span><br><span class="line">nginx_handled()&#123;</span><br><span class="line">    /usr/bin/curl -s &quot;http://$NGINX_HOST:&quot;$NGINX_PORT&quot;/$NGINX_STATUS/&quot; awk &#x27;NR==3 &#123;print $2&#125;&#x27;</span><br><span class="line">       &#125;</span><br><span class="line">nginx_requests()&#123;</span><br><span class="line">    /usr/bin/curl -s &quot;http://$NGINX_HOST:&quot;$NGINX_PORT&quot;/$NGINX_STATUS/&quot; awk &#x27;NR==3 &#123;print $3&#125;&#x27;</span><br><span class="line">       &#125;</span><br><span class="line">  case $NGINX_COMMAND in</span><br><span class="line">ping)</span><br><span class="line">nginx_ping</span><br><span class="line">;;</span><br><span class="line">active)</span><br><span class="line">nginx_active;</span><br><span class="line">;;</span><br><span class="line">reading)</span><br><span class="line">nginx_reading;</span><br><span class="line">;;</span><br><span class="line">writing)</span><br><span class="line">nginx_writing;</span><br><span class="line">;;</span><br><span class="line">waiting)</span><br><span class="line">nginx_waiting;</span><br><span class="line">;;</span><br><span class="line">accepts)</span><br><span class="line">nginx_accepts;</span><br><span class="line">;;</span><br><span class="line">handled)</span><br><span class="line">nginx_handled;</span><br><span class="line">;;</span><br><span class="line">requests)</span><br><span class="line">nginx_requests;</span><br><span class="line">;;</span><br><span class="line">      *)</span><br><span class="line">echo $&quot;USAGE:$0 &#123;pingactivereadingwritingwaitingacceptshandledrequests&#125;&quot;</span><br><span class="line">    esac</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
            <tag> lnmp </tag>
            
            <tag> 监控平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx做负载均衡</title>
      <link href="/posts/3e12cf1e.html"/>
      <url>/posts/3e12cf1e.html</url>
      
        <content type="html"><![CDATA[<p>贴个图，就差不多看懂了。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-97.png"></p><p>说简单点，原来nginx仅指向本地一个单站点，而现在指向负载集群。</p><p>编辑站点conf文件实现负载均衡。</p><h2 id="1-定义负载集群"><a href="#1-定义负载集群" class="headerlink" title="1.定义负载集群"></a>1.定义负载集群</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">upstream &lt;集群名称&gt; &#123;</span><br><span class="line">server &lt;web1&gt;；</span><br><span class="line">server &lt;wer2&gt;；</span><br><span class="line">server &lt;web3&gt;；</span><br><span class="line">server &lt;werb...&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-nginx-做反代"><a href="#2-nginx-做反代" class="headerlink" title="2.nginx 做反代"></a>2.nginx 做反代</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://&lt;集群名称&gt;；</span><br><span class="line">#如果服务器要获取客户端真实IP，可以用下三句设置主机头和客户端真实地址</span><br><span class="line">#proxy_set_header Host $host;</span><br><span class="line">#proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-其他参数"><a href="#3-其他参数" class="headerlink" title="3.其他参数"></a>3.其他参数</h2><p>weight ：负载轮询权重，默认都为1省略，值越大越容易被访问，通常用于资源不等的服务器。</p><p>下例中：客户访问server顺序：web1、web2、web2、web3、web3、web3。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream &lt;集群名称&gt; &#123;</span><br><span class="line">server &lt;web1&gt; Weight=1；</span><br><span class="line">server &lt;wer2&gt; Weight=2；</span><br><span class="line">server &lt;web3&gt; Weight=3；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ip_hash:客户端第一次访问哪个server，后期就一直访问这个server，有效解决session问题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">upstream &lt;集群名称&gt; &#123;</span><br><span class="line">server &lt;web1&gt; Weight=1；</span><br><span class="line">server &lt;wer2&gt; Weight=2；</span><br><span class="line">server &lt;web3&gt; Weight=3；</span><br><span class="line">ip_hash；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>down：表示这个server不参与负载</p><p>下例中：web1不再参与负载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">upstream &lt;集群名称&gt; &#123;</span><br><span class="line">server &lt;web1&gt; Weight=1 down；</span><br><span class="line">server &lt;wer2&gt; Weight=2；</span><br><span class="line">server &lt;web3&gt; Weight=3；</span><br><span class="line">ip_hash；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>backup：表示中个server作为备用，平时不参与负载，当某个server故障时，才会请求backup的server。</p><p>下例中：web3只有在web1或web2故障或忙碌时才会响应。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">upstream &lt;集群名称&gt; &#123;</span><br><span class="line">server &lt;web1&gt; Weight=1；</span><br><span class="line">server &lt;wer2&gt; Weight=2；</span><br><span class="line">server &lt;web3&gt; Weight=3 backup；</span><br><span class="line">ip_hash；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> 反代 </tag>
            
            <tag> 负载均衡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云盘列表程序Alist</title>
      <link href="/posts/e8074451.html"/>
      <url>/posts/e8074451.html</url>
      
        <content type="html"><![CDATA[<p>前面写了基于onedrive的oneindexn列表程序，流程有些许的复杂，但是长期稳定没问题，我比较喜欢。</p><p>上篇又写了“开箱即用”的网盘kiftd，基于个人或小团体的网盘。</p><p>今天写一个阿里云盘搭建的个人网盘，不过不是很推荐，玩玩就可以。（阿里的很多项目都是做一半凉凉，譬如雅虎中国、口碑、豌豆荚、虾米音乐等等，所以本人对于阿里云盘也是持有怀疑态度）</p><p>优点：满速下载</p><p>确定：每次更新文件需要重建目录。</p><p>流程：</p><ul><li>注册阿里云盘账号</li><li>获取阿里云盘<code>refresh_token</code></li><li>部署alsit</li><li>运行测试</li><li>其它</li></ul><h2 id="第一步，注册阿里云盘账号"><a href="#第一步，注册阿里云盘账号" class="headerlink" title="第一步，注册阿里云盘账号"></a>第一步，注册阿里云盘账号</h2><p>自行注册</p><p>阿里云盘官网：<a href="https://www.aliyundrive.com/">https://www.aliyundrive.com</a></p><h2 id="第二步，获取阿里云盘refresh-token"><a href="#第二步，获取阿里云盘refresh-token" class="headerlink" title="第二步，获取阿里云盘refresh_token"></a>第二步，获取阿里云盘<code>refresh_token</code></h2><p>通过PC浏览器F12开发者获取的refreshtoken不可用！！！</p><p>使用网易模拟器（MuMu）或者安卓手机，安装ES文件浏览器app和阿里云盘app，来获取阿里云盘日志中的<code>refresh_token</code>。</p><p>手机和模拟器操作差不多，这里以网易模拟器为例：</p><h4 id="1-先安装ES文件浏览器app和阿里云盘app"><a href="#1-先安装ES文件浏览器app和阿里云盘app" class="headerlink" title="1.先安装ES文件浏览器app和阿里云盘app"></a>1.先安装ES文件浏览器app和阿里云盘app</h4><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-82-545x1024.png"></p><h4 id="2-登录阿里云盘app"><a href="#2-登录阿里云盘app" class="headerlink" title="2.登录阿里云盘app"></a>2.登录阿里云盘app</h4><p>略</p><h4 id="3-打开ES文件浏览器app-分析文件"><a href="#3-打开ES文件浏览器app-分析文件" class="headerlink" title="3.打开ES文件浏览器app,分析文件"></a>3.打开ES文件浏览器app,分析文件</h4><p>（通过获取最新文件，我们可以得到刚刚安装并登录的阿里云盘app的日志文件）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-83-571x1024.png"></p><h4 id="4-查看最新文件"><a href="#4-查看最新文件" class="headerlink" title="4.查看最新文件"></a>4.查看最新文件</h4><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-84-544x1024.png"></p><h4 id="5-找到以安装阿里云盘app当天时间命名的log文件"><a href="#5-找到以安装阿里云盘app当天时间命名的log文件" class="headerlink" title="5.找到以安装阿里云盘app当天时间命名的log文件"></a>5.找到以安装阿里云盘app当天时间命名的log文件</h4><p>（会发现有3个以日期命名的文件，找到最大的文件，里面有我们需要的refresh_token）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-85-566x1024.png"></p><h4 id="6-打开我们找到日期命名的日志文件"><a href="#6-打开我们找到日期命名的日志文件" class="headerlink" title="6.打开我们找到日期命名的日志文件"></a>6.打开我们找到日期命名的日志文件</h4><p>从文件内容中搜索“refreshtoken”即可，如果没有文本编辑工具可以上传到阿里云盘后，再下载本地搜索关键字。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-86-572x1024.png"></p><h4 id="7-搜索关键字refreshtoken"><a href="#7-搜索关键字refreshtoken" class="headerlink" title="7.搜索关键字refreshtoken"></a>7.搜索关键字refreshtoken</h4><p>将获取到值保存好，一会要用到</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-87.png"></p><h2 id="第三步，部署alist"><a href="#第三步，部署alist" class="headerlink" title="第三步，部署alist"></a>第三步，部署alist</h2><h4 id="1-下载这两个项目，放在一个目录中"><a href="#1-下载这两个项目，放在一个目录中" class="headerlink" title="1.下载这两个项目，放在一个目录中"></a>1.下载这两个项目，放在一个目录中</h4><p>alist-服务程序：<a href="https://github.com/Xhofe/alist">https://github.com/Xhofe/alist</a></p><p>alist-web页面：<a href="https://github.com/Xhofe/alist-web">https://github.com/Xhofe/alist-web</a></p><p>alist-服务程序项目：alist和conf.yml(配置模板example修改)</p><p>alist-web页面项目：dist目录</p><p>最终目录树如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ tree</span><br><span class="line">.</span><br><span class="line">├── alist</span><br><span class="line">├── conf.yml</span><br><span class="line">└── dist</span><br><span class="line">    ├── favicon.ico</span><br><span class="line">    ├── index.html</span><br><span class="line">    └── static</span><br><span class="line">        ├── css</span><br><span class="line">        │   ├── about.f0b54b1c.css</span><br><span class="line">        │   ├── app.4f0c3e9a.css</span><br><span class="line">        │   └── chunk-vendors.8f913079.css</span><br><span class="line">        ├── img</span><br><span class="line">        │   └── alist.bcb68ba0.png</span><br><span class="line">        └── js</span><br><span class="line">            ├── about.8108f65b.js</span><br><span class="line">            ├── app.34cb39e5.js</span><br><span class="line">            └── chunk-vendors.131f0f41.js</span><br></pre></td></tr></table></figure><h4 id="2-修改配置文件conf-yml"><a href="#2-修改配置文件conf-yml" class="headerlink" title="2.修改配置文件conf.yml"></a>2.修改配置文件conf.yml</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">info:</span><br><span class="line">  title: AList #标题</span><br><span class="line">  logo: &quot;&quot; #网站logo 如果填写,则会替换掉默认的</span><br><span class="line">  footer_text: Xhofe&#x27;s Blog #网页底部文字</span><br><span class="line">  footer_url: https://www.nn.ci #网页底部文字链接</span><br><span class="line">  music_img: https://img.oez.cc/2020/12/19/0f8b57866bdb5.gif #预览音乐文件时的图片</span><br><span class="line">  check_update: true #前端是否显示更新</span><br><span class="line">  script: #自定义脚本,可以是脚本的链接，也可以直接是脚本内容,如document.querySelector(&#x27;body&#x27;).style=&quot;background-image:url(&#x27;https://api.mtyqx.cn/api/random.php&#x27;);background-attachment:fixed&quot;</span><br><span class="line">  autoplay: true #视频是否自动播放</span><br><span class="line">  preview:</span><br><span class="line">    text: [txt,htm,html,xml,java,properties,sql,js,md,json,conf,ini,vue,php,py,bat,gitignore,yml,go,sh,c,cpp,h,hpp] #要预览的文本文件的后缀，可以自行添加</span><br><span class="line">server:</span><br><span class="line">  address: &quot;0.0.0.0&quot;</span><br><span class="line">  port: &quot;5244&quot;</span><br><span class="line">  search: true</span><br><span class="line">  static: dist</span><br><span class="line">  site_url: &#x27;*&#x27;</span><br><span class="line">  password: password #自行修改！用于网页底部重建目录！！！</span><br><span class="line">ali_drive:</span><br><span class="line">  api_url: https://api.aliyundrive.com/v2</span><br><span class="line">  max_files_count: 50 #重建目录时每次请求的文件</span><br><span class="line">  drives:</span><br><span class="line">  - refresh_token: xxx #refresh_token！！！</span><br><span class="line">    root_folder: root #根目录的file_id</span><br><span class="line">    name: drive0 #盘名，多个盘不可重复</span><br><span class="line">    password: pass #自行修改！该盘密码，空则不设密码，修改需要重建生效！！！</span><br><span class="line">    hide: false #是否在主页隐藏该盘，不可全部隐藏，至少暴露一个</span><br><span class="line">  - refresh_token: xxx</span><br><span class="line">    root_folder: root</span><br><span class="line">    name: drive1</span><br><span class="line">    password: pass</span><br><span class="line">    hide: false</span><br><span class="line">database:</span><br><span class="line">  type: sqlite3</span><br><span class="line">  dBFile: alist.db</span><br></pre></td></tr></table></figure><p>配置文件中需要修改3个重要部分(紫色标注项) ，其他默认也可以自行查看作者文档</p><p>refresh_token：需要把刚刚获取到refreshtoken值</p><p>password：用来重建目录使用，密码错误将不能重构目录</p><h4 id="3-将alist添加可执行权限"><a href="#3-将alist添加可执行权限" class="headerlink" title="3.将alist添加可执行权限"></a>3.将alist添加可执行权限</h4><p>chmod +x alist</p><h4 id="4-添加systemctl服务"><a href="#4-添加systemctl服务" class="headerlink" title="4.添加systemctl服务"></a>4.添加systemctl服务</h4><p>创建服务文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/alist.service</span><br></pre></td></tr></table></figure><p>脚本内容如下：（Alist路径填写自己的！！！）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=alist</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=Alist项目路径</span><br><span class="line">ExecStart=Alist项目路径/alist -conf conf.yml</span><br><span class="line">Restart=on-failure</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>重新加载配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><ul><li>启动: <code>systemctl start alist</code></li><li>关闭: <code>systemctl stop alist</code></li><li>自启: <code>systemctl enable alist</code></li><li>状态: <code>systemctl status alist</code></li></ul><h4 id="5-防火墙放行端口（默认5244，可在配置文件中自行修改）"><a href="#5-防火墙放行端口（默认5244，可在配置文件中自行修改）" class="headerlink" title="5.防火墙放行端口（默认5244，可在配置文件中自行修改）"></a>5.防火墙放行端口（默认5244，可在配置文件中自行修改）</h4><p>放行5244（懒人也可以直接关闭防火墙）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=5244/tcp --permanent</span><br></pre></td></tr></table></figure><h2 id="第四步，运行测试"><a href="#第四步，运行测试" class="headerlink" title="第四步，运行测试"></a>第四步，运行测试</h2><h4 id="1-启动alist"><a href="#1-启动alist" class="headerlink" title="1.启动alist"></a>1.启动alist</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start alist</span><br></pre></td></tr></table></figure><h4 id="2-浏览器打开alist"><a href="#2-浏览器打开alist" class="headerlink" title="2.浏览器打开alist"></a>2.浏览器打开alist</h4><p>http:&#x2F;&#x2F;你的服务器域名或IP:5244,第一次打开提示404，我们需要点击底部的“重构目录”来初始化目录列表。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-90-1024x678.png"></p><h4 id="3-“重构目录”初始化目录列表"><a href="#3-“重构目录”初始化目录列表" class="headerlink" title="3.“重构目录”初始化目录列表"></a>3.“重构目录”初始化目录列表</h4><p>需要输入我们配置中的两个密码（如果是公开云盘，建议将两个密码都设置为空）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-92-1024x692.png"></p><h4 id="4-OK"><a href="#4-OK" class="headerlink" title="4.OK"></a>4.OK</h4><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-93-1024x622.png"></p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><ul><li>为什么新上传的文件不显示&#x2F;删除了的文件还在？</li></ul><p>列表展示的是本地数据库里的数据，更新文件之后需要重建。</p><ul><li>重构目录失败</li></ul><p>可删除目录下的alist.db数据库后，重新运行alist</p><ul><li>反代</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header Host $http_host;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_redirect off;</span><br><span class="line">    proxy_pass http://127.0.0.1:5244;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>目录列表默认目录</li></ul><p>修改配置文件中的<code>root_folder</code> 值：为想要设置的文件夹的<code>file_id</code>即可。</p><p>文件夹的file_id是什么？根目录就是root，其他目录为点进文件夹之后的url中<code>folder/</code>后面那一串（登录阿里云盘网页版获取）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-94-1024x549.png"></p><ul><li><p>如何给文件夹设置密码？<br>在要加密的目录名称后面加上<code>.password-密码</code>，列表中会自动消除后面的密码部分。</p></li><li><p>如何隐藏文件夹<br>在要隐藏的文件夹名称后面加上<code>.hide</code>即可。</p></li><li><p>如何重建目录树<br>点击网页底部的rebuild按钮，输入配置文件中设置的password确定即可。</p></li><li><p>如何自定义网页底部链接？<br>修改配置文件中的<code>footer_text</code>和<code>footer_url</code>为要设置的内容，或者不填则不会显示。</p></li><li><p>怎么复制文件直链？<br>点进文件，右上角有复制直链的按钮。</p></li><li><p>修改网站icon？<br>替换掉<code>dist</code>目录下的<code>favicon.ico</code>即可。</p></li><li><p>修改网站左上角图片<br>替换掉<code>dist</code>&#x2F;static&#x2F;img目录下的<code>alist.bcb68ba0.png</code>即可。</p></li><li><p>修改网站底部<br><code>可修改dist</code>&#x2F;static&#x2F;js目录下的app.402841f5.js。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
            <tag> alist </tag>
            
            <tag> 目录列表程序 </tag>
            
            <tag> 阿里网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小众网盘kiftd（3分钟搭建适合个人或小团队的网盘）</title>
      <link href="/posts/c360478d.html"/>
      <url>/posts/c360478d.html</url>
      
        <content type="html"><![CDATA[<p>适合个人及小团体使用，作者有详细的操作安装文档可自行查看。</p><p>我上篇文章写的onedirve网盘，冗长的搭建流程。。。</p><p>今天这篇问题就写个“几乎”一键搭建的网盘——kiftd</p><p>推荐理由：多平台（win&#x2F;mac&#x2F;linux）、几乎做到开箱即用（仅需java环境）、开源！</p><p>kiftd官网：<a href="https://kohgylw.gitee.io/">https://kohgylw.gitee.io/</a></p><p>痛点：原来测试搭建过Owncloud、nextcloud、可道云、seafile（有兴趣的也可以看下Filerun和h5ai），这些开源都需要http、php、mysql环境支持，且部分对环境版本也有要求、故障排查麻烦。。。（seafile文件上传端口跳转搞了我好几天，印象深刻！！！），总而言之适合企业的网盘，接口再多、支持几千用户量然并卵。平时我们个人使用或者小团队使用时用不到那么多功能，那么这个kiftd就比较适合了。</p><p>所以，总而言之、言而总之适合自己的才是好的。</p><p>流程很简单：</p><ul><li>安装java(8以上)</li><li>下载kiftd</li><li>启动kiftd</li></ul><h2 id="Mac、Win平台"><a href="#Mac、Win平台" class="headerlink" title="Mac、Win平台"></a>Mac、Win平台</h2><p>1.下载安装java，下载后双击安装程序下一步下一步即可。</p><p>通过java官方下载地址：<a href="https://www.java.com/zh-CN/download/">https://www.java.com/zh-CN/download/</a></p><p>2.下载kiftd，并解压</p><p>下载地址：<a href="https://code.aliyun.com/kohgylw/kiftd/repository/archive.zip?ref=v1.0.35-release">https://code.aliyun.com/kohgylw/kiftd/repository/archive.zip?ref=v1.0.35-release</a></p><p>3.启动kiftd</p><p>进入解压后的kiftd目录</p><p>双击运行kiftd-1.0.35-RELEASE.jar即可</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-74.png"></p><h2 id="linux平台"><a href="#linux平台" class="headerlink" title="linux平台"></a>linux平台</h2><p>1.安装java</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh https://javadl.oracle.com/webapps/download/AutoDL?BundleId=245049_d3c52aa6bfa54d3ca74e617f18309292</span><br></pre></td></tr></table></figure><p>(注：如安装解压版java可自行配置环境变量&#x2F;etc&#x2F;profile)</p><p>2.下载kiftd，并解压</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://code.aliyun.com/kohgylw/kiftd/repository/archive.zip?ref=v1.0.35-release -O kiftd.zip &amp;&amp; yum -y install unzip &amp;&amp; unzip kiftd.zip</span><br></pre></td></tr></table></figure><p>3.启动kiftd</p><p>进入解压后的kiftd目录</p><p>命令行模式下启动：java -jar kiftd-1.0.35-RELEASE.jar -console</p><p>也可后台运行：nohup java -jar kiftd-1.0.35-RELEASE.jar -start &amp; echo $!</p><p>OK</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-75.png"></p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>java解压包配置环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#在/etc/profile文件最后追加</span><br><span class="line">export PATH=/你的JAVA解压路径/bin:$PATH</span><br><span class="line">#使配置文件生效</span><br><span class="line">. /etc/profile</span><br></pre></td></tr></table></figure><p>测试java（显示版本即表示安装成功），命令行界面输入：java -version</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-73.png"></p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kiftd </tag>
            
            <tag> 个人网盘 </tag>
            
            <tag> 多平台 </tag>
            
            <tag> 开箱即用 </tag>
            
            <tag> 网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建个人5T网盘（OneindexN+OneDrive）</title>
      <link href="/posts/6ed33d25.html"/>
      <url>/posts/6ed33d25.html</url>
      
        <content type="html"><![CDATA[<p>Demo：<a href="http://cloud.ffing.cn/">cloud.ffing.cn</a></p><p>使用motrix下载工具，满速下载香，真香！</p><p><img src="https://cloud.ffing.cn/0-%E8%AF%B7%E4%BD%BF%E7%94%A8Motrix%E5%B7%A5%E5%85%B7%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%EF%BC%8C%E5%90%A6%E5%88%99%E5%AE%B9%E6%98%93%E4%B8%8B%E8%BD%BD%E5%A4%B1%E8%B4%A5%20%5B%E5%AE%89%E8%A3%85%E5%8C%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%5D-0/Motrix%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.gif"></p><p>因为牵涉内容较多，篇幅较长。</p><p>oneindex作者已经删库，这里我以OneindexN稍做修改作为我的前端。</p><p>当个网盘、图床都可以，尽量不要当电影库，避免被封。</p><p>优势：</p><ul><li>oneindex 不走服务器流量，直连国内世纪互联数据中心</li><li>满速下载（速度优于国产网盘）</li><li>空间1-5 T , 自定义页面，可玩性大</li><li>微软官方解释：<br>我们为中国用户提供了 Office 365 全球版和 Office 365 中国版两种版本。主要区别在于： Office 365 中国版由世纪互联负责运营，数据中心位于北京、上海，可以提供增值税发票。 目前仅 Office 365 全球版提供 Yammer、Microsoft Planner、Microsoft Teams 以及 Sway 等产品。</li></ul><p>准备工作：</p><ul><li>微软账号</li><li>手机号</li><li>科学上网</li><li>云服务器（nginx+php5.6以上）</li></ul><p>流程：</p><ul><li>onedrive business 账号 (订阅office开发者E5账号) </li><li>onedrive（调整5T空间）</li><li>创建OneDriveAPP</li><li>部署OneindexN程序（前端，利用OneDrive的API，列出OneDrive目录）</li><li>安装aria2并配置自动上传至onedrive</li><li>测试</li><li>E5账户续约</li><li>其他</li></ul><h2 id="第一步：onedrive-business-账号"><a href="#第一步：onedrive-business-账号" class="headerlink" title="第一步：onedrive business 账号"></a>第一步：onedrive business 账号</h2><p>通过微软账号，订阅office开发者E5权益，获取onedrive business 账号（需要科学上网否则无法获取手机验证码）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-28.png"></p><p>国内office开发者：<a href="https://developer.microsoft.com/zh-cn/microsoft-365/dev-program">https://developer.microsoft.com/zh-cn/microsoft-365/dev-program</a></p><p>或百度搜索：“office开发人员计划”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-30.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-31.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-33.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-34.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-35.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-36.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-37.png"></p><p>###创建onedrive business 账号</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-38.png"></p><p>###需要科学上网，否则无法收到验证码</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-39.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-40.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-41.png"></p><p>#onedrive business 账号创建完成</p><p>注：3个月有效期，到期手工续订，或者利用api的频繁使用自动续订</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-42.png"></p><h2 id="第二步，调整onedrive空间（默认1T，调整为5T）"><a href="#第二步，调整onedrive空间（默认1T，调整为5T）" class="headerlink" title="第二步，调整onedrive空间（默认1T，调整为5T）"></a>第二步，调整onedrive空间（默认1T，调整为5T）</h2><p>Onedirve空间管理：**<a href="https://admin.onedrive.com/#v=StorageSettings">https://admin.onedrive.com/#v=StorageSettings</a>**</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-43-1024x769.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-44-1024x705.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-45-1024x612.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-46-1024x669.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-47-1024x635.png"></p><h2 id="第三步，创建OneDriveAPP"><a href="#第三步，创建OneDriveAPP" class="headerlink" title="第三步，创建OneDriveAPP"></a>第三步，创建OneDriveAPP</h2><p>国际 Azure：<a href="https://portal.azure.com/">https://portal.azure.com/</a></p><p>国内世纪互联：<a href="https://portal.azure.cn/">https://portal.azure.cn</a>）</p><p>因是E5权益账号，需打开国际 Azure：<a href="https://portal.azure.com/">https://portal.azure.com/</a></p><p>需要获取APPID、APP秘钥，配置API权限</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-48-1024x447.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-49-1024x580.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-50-1024x556.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-53-1024x831.png"></p><p>###复制获取到APPID进行保存，一会要用到。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-54.png"></p><p>###创建秘钥，秘钥只会出现一次，必须保存好，一会要用到。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-56-1024x822.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-57-1024x550.png"></p><p>###添加api权限</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-58-1024x706.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-59-1024x568.png"></p><p>OK，刚创建的app统计信息</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-63.png"></p><h2 id="第四步，部署OneindexN"><a href="#第四步，部署OneindexN" class="headerlink" title="第四步，部署OneindexN"></a>第四步，部署OneindexN</h2><p>服务器需nginx+php5.6以上,如没环境可使用我的脚本进行环境搭建。</p><p>一键脚本：bash &lt;(curl <a href="https://gitee.com/ffing/onekey/raw/master/onekey.sh">https://gitee.com/ffing/onekey/raw/master/onekey.sh</a>)</p><p>1.克隆OneindexN前端到指定目录</p><p>我的gitee项目地址：<a href="https://gitee.com/ffing/oneindexn.git">https://gitee.com/ffing/oneindexn.git</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#懒人，直接git到nginx站点目录</span><br><span class="line">git clone https://gitee.com/ffing/oneindexn.git /usr/share/nginx/oneindexn</span><br></pre></td></tr></table></figure><p>2.对OneindexN目录进行授权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R apache:apache /usr/share/nginx/oneindexn</span><br></pre></td></tr></table></figure><p>3.配置nginx</p><p>新增oneindexn配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/oneindex.conf</span><br></pre></td></tr></table></figure><p>oneindex.conf内容如下：（请更改自己域名、oneindexn路径、证书路径）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name cloud.ffing.cn;</span><br><span class="line">rewrite ^(.*)$ https://$host$1 permanent;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 443 ssl;</span><br><span class="line">server_name cloud.ffing.cn;</span><br><span class="line">root /usr/share/nginx/oneindexn;</span><br><span class="line">index index.php;</span><br><span class="line"></span><br><span class="line">#ssl证书(修改为自己证书路径)</span><br><span class="line">ssl_certificate /opt/cert/cloud.ffing.cn.pem;</span><br><span class="line">ssl_certificate_key /opt/cert/cloud.ffing.cn.key;</span><br><span class="line">ssl_protocols TLSv1.1 TLSv1.2;</span><br><span class="line">ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line">ssl_session_cache shared:SSL:10m;</span><br><span class="line">ssl_session_timeout 10m;</span><br><span class="line"></span><br><span class="line">#去除地址栏？，伪静态</span><br><span class="line">location / &#123;</span><br><span class="line">        if (!-f $request_filename)&#123;</span><br><span class="line">                set $rule_0 1$rule_0;</span><br><span class="line">                         &#125;</span><br><span class="line">        if (!-d $request_filename)&#123;</span><br><span class="line">                 set $rule_0 2$rule_0;</span><br><span class="line">                         &#125;</span><br><span class="line">        if ($rule_0 = &quot;21&quot;)&#123;</span><br><span class="line">                 rewrite ^/(.*) /?/$1 last;</span><br><span class="line">                         &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#aria2 反代</span><br><span class="line">location /jsonrpc &#123;</span><br><span class="line">        proxy_pass http://localhost:6800/jsonrpc;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header        X-Real-IP       $remote_addr;</span><br><span class="line">        proxy_set_header        X-Forwarded-For</span><br><span class="line">        $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">#PHP</span><br><span class="line">location ~ \.php$        &#123;</span><br><span class="line">        fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.配置完成后重启nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>5.浏览器打开oneindexn前端，进行配置</p><p>我在nginx中配置的域名：cloud.ffing.cn</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-51-1024x486.png"></p><p>###输入我们上面获取的appid和秘钥</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-64-1024x715.png"></p><p>###绑定我的business账号<a href="mailto:&#x66;&#x66;&#105;&#x6e;&#103;&#99;&#110;&#64;&#x66;&#x66;&#x69;&#110;&#x67;&#x63;&#110;&#x2e;&#x6f;&#110;&#x6d;&#105;&#99;&#114;&#111;&#x73;&#x6f;&#102;&#x74;">&#x66;&#x66;&#105;&#x6e;&#103;&#99;&#110;&#64;&#x66;&#x66;&#x69;&#110;&#x67;&#x63;&#110;&#x2e;&#x6f;&#110;&#x6d;&#105;&#99;&#114;&#111;&#x73;&#x6f;&#102;&#x74;</a>（如果刚清除过浏览器缓存或者不在同个浏览器，则需要我们重新绑定刚申请的business账号）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-62-1024x351.png"></p><p>OK，部署结束。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-65-1024x414.png"></p><p>后台内容自行修改</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-66-1024x503.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-67-1024x868.png"></p><h2 id="第五步，安装aria2并配置自动上传至onedrive"><a href="#第五步，安装aria2并配置自动上传至onedrive" class="headerlink" title="第五步，安装aria2并配置自动上传至onedrive"></a>第五步，安装aria2并配置自动上传至onedrive</h2><p>实现效果：通过yaaw面板下载完成的文件自动上传至onedrive</p><p>可以自行安装aria2也可以使用我的一键脚本。</p><p>一键脚本：bash &lt;(curl <a href="https://gitee.com/ffing/onekey/raw/master/onekey.sh">https://gitee.com/ffing/onekey/raw/master/onekey.sh</a>)</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-68.png"></p><p>检查aria2配置&#x2F;etc&#x2F;aria2&#x2F;aria2.conf,最后是否添加上传脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#上传配置(上传脚本路径，我默认放置在oneindxn中)</span><br><span class="line">on-download-complete=/usr/share/nginx/oneindexn/onedirver_upload.sh</span><br></pre></td></tr></table></figure><p>检查上传脚本，&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;oneindexn&#x2F;onedirver_upload.sh</p><p>onedrive上传脚本，脚本内容如下：（标准颜色路径自行修改）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">###根据自己情况修改###</span><br><span class="line"></span><br><span class="line">#Onedirve上传目录(在web上onedrive显示的目录和本地没关系)</span><br><span class="line">UPpath=&#x27;/Yaaw_Upload&#x27;</span><br><span class="line">#Yaaw下载目录</span><br><span class="line">DOWNpath=&#x27;/aria2_download&#x27;</span><br><span class="line">#PHP路径</span><br><span class="line">PHPpath=&#x27;/bin/php&#x27;</span><br><span class="line">#oneindexn路径</span><br><span class="line">ONEpath=&#x27;/usr/share/nginx/oneindexn&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###无需修改###</span><br><span class="line">path=$3</span><br><span class="line">if [ $2 -eq 0 ]</span><br><span class="line">        then</span><br><span class="line">                exit 0</span><br><span class="line">fi</span><br><span class="line">while true; do</span><br><span class="line">filepath=$path</span><br><span class="line">path=$&#123;path%/*&#125;;</span><br><span class="line">if [ &quot;$path&quot; = &quot;$DOWNpath&quot; ] &amp;&amp; [ $2 -eq 1 ]</span><br><span class="line">    #如果下载的是单个文件</span><br><span class="line">    then</span><br><span class="line">    $PHPpath &quot;$ONEpath&quot;/one.php upload:file &quot;$filepath&quot; &quot;$UPpath&quot;/</span><br><span class="line">    rm -rf &quot;$filepath&quot;</span><br><span class="line">    exit 0</span><br><span class="line">elif [ &quot;$path&quot; = &quot;$DOWNpath&quot; ]</span><br><span class="line">    #下载的是文件夹</span><br><span class="line">    then</span><br><span class="line">    $PHPpath &quot;$ONEpath&quot;/one.php upload:folder &quot;$filepath&quot;/ &quot;$UPpath&quot;/&quot;$&#123;filepath##*/&#125;&quot;/</span><br><span class="line">    rm -rf &quot;$filepath&quot;/</span><br><span class="line">    exit 0</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>添加执行权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/share/nginx/oneindexn/onedirver_upload.sh</span><br></pre></td></tr></table></figure><h2 id="第六步，测试"><a href="#第六步，测试" class="headerlink" title="第六步，测试"></a>第六步，测试</h2><p>本地onedrive上传文件，测试oneindex前端</p><p>yaaw远程下载，测试oneindex前端及本地onedrive客户端</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-79.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-69-1024x789.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-70-1024x785.png"></p><h2 id="E5账户续约"><a href="#E5账户续约" class="headerlink" title="E5账户续约"></a>E5账户续约</h2><p>a，绑定github账户，通过github的活动来增加微软账户的活跃度</p><p>如果你经常登陆github是个不错的选择</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-77.png"></p><p>b，通过大神开发的api模拟开发者动作</p><p>outlook的api模拟开发者：<a href="https://e5.qyi.io/">https://e5.qyi.io/</a></p><p><a href="mailto:&#x78;&#120;&#x78;&#x40;&#120;&#120;&#x78;&#46;&#x6f;&#110;&#x6d;&#105;&#99;&#x72;&#x6f;&#115;&#x6f;&#102;&#116;&#46;&#99;&#111;&#x6d;">&#x78;&#120;&#x78;&#x40;&#120;&#120;&#x78;&#46;&#x6f;&#110;&#x6d;&#105;&#99;&#x72;&#x6f;&#115;&#x6f;&#102;&#116;&#46;&#99;&#111;&#x6d;</a>建个子账号做outlookapi的账号</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-78.png"></p><h2 id="其他："><a href="#其他：" class="headerlink" title="其他："></a>其他：</h2><p>1.onedrive business 账号，通过oneindexn列表前端无法删除目录，可以通过office.com进入onedrive删除（客户端删除文件会有个先下载到本地、再删除、最后同步云端流程。。。尤其是大文件）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-80.png"></p><p>2.修改 oneindexn前端程序验证地址</p><p>编辑文件：oneindexn&#x2F;controller&#x2F;AdminController.php</p><p>将我的云盘地址cloud.ffing.cn，替换为你自己搭建地址</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-81.png"></p><p>3.修改oneindexn前端主题以nexmoe为例</p><p>编辑文件：oneindexn&#x2F;view&#x2F;themes&#x2F;nexmoe&#x2F;layout.php</p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
            <tag> 5T空间 </tag>
            
            <tag> onedrive </tag>
            
            <tag> oneindex </tag>
            
            <tag> 满速下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3分钟搭建免费静态主机</title>
      <link href="/posts/fdb43bb5.html"/>
      <url>/posts/fdb43bb5.html</url>
      
        <content type="html"><![CDATA[<p>最近没状态，写下原来懒得写的东西吧。</p><p>免费是真的免费，但免费也是有些许的限制的，主要分为两种：无限流量有限带宽 和 有限流量无限带宽，两种免费模式自行选择。</p><p>鉴于局限性也就让我们玩玩就可以了，或者做个简单的门户首页就行了。（搭建博客不好用，因为是静态网页就会导致每次先备份，再更新、全部更新。。。）</p><p>无限流量有限带宽：利用托管平台page服务搭建静态网页，如：gitee平台（gitee.io）、github平台（github.io）、coding平台（conding.io）听说coding支持动态了，还没去看呢</p><p>有限流量无限带宽：利用CDN的免费存储空间做静态网页发布，如：又拍云（10G空间+15G流量）、七牛云（10G空间+10流量）</p><h2 id="第一种：无限流量，有限带宽"><a href="#第一种：无限流量，有限带宽" class="headerlink" title="第一种：无限流量，有限带宽"></a>第一种：无限流量，有限带宽</h2><p>利用page服务搭建静态网页。</p><p>gitee、github、coding这3个代码平台的操作都差不多，毕竟都可以使用git的，我这里以github为例做个演示。</p><p><strong>流程：</strong></p><ul><li>注册github账号</li><li>创建仓库（仓库名：你的用户名+github.io）</li><li>上传静态网页</li><li>配置github page项</li><li>测试</li><li>解析到个人域名（可选）</li></ul><h4 id="第一步，注册github账号"><a href="#第一步，注册github账号" class="headerlink" title="第一步，注册github账号"></a>第一步，注册github账号</h4><p>Github官网：<a href="https://github.com/">https://github.com</a></p><p>邮箱注册很简单，我前面文章有写，也可以自行百度</p><h4 id="第二步，创建仓库（仓库名：你的用户名-github-io）"><a href="#第二步，创建仓库（仓库名：你的用户名-github-io）" class="headerlink" title="第二步，创建仓库（仓库名：你的用户名+github.io）"></a>第二步，创建仓库（仓库名：你的用户名+github.io）</h4><p>仓库名格式：你的用户名+github.io</p><p>其它命名格式，就会变成你域名下的二级目录，如：你的仓库访问地址就会变成：你的用户名+github.io&#x2F;你随意命名的仓库名（当然如果你有二级目录的需求的话。。。）</p><p>登录账号，点击右上角“New repository”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image.png"></p><p>仓库名格式：用户名+github.io</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-3.png"></p><h4 id="第三步，上传静态网页"><a href="#第三步，上传静态网页" class="headerlink" title="第三步，上传静态网页"></a>第三步，上传静态网页</h4><p>仓库创建完成后，自动进入仓库，因为静态网页都比较小所以直接用网页端直接上传即可（如果文件太大建议使用git工具上传，不推荐视频，因为带宽有限）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-1-1024x433.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-2-1024x641.png"></p><h4 id="第四步，配置github-page项"><a href="#第四步，配置github-page项" class="headerlink" title="第四步，配置github page项"></a>第四步，配置github page项</h4><p>点击setting，配置pages页，更改目录所在位置，保存后即可放你的githui.io</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-5-1024x585.png"></p><h4 id="第五步，测试"><a href="#第五步，测试" class="headerlink" title="第五步，测试"></a>第五步，测试</h4><p>在浏览器打开：你的用户名+github.io，即可正常访问。</p><p>我的地址：ffingcn.github.io</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-6-1024x629.png"></p><h4 id="第六步，解析到个人域名（可选）"><a href="#第六步，解析到个人域名（可选）" class="headerlink" title="第六步，解析到个人域名（可选）"></a>第六步，解析到个人域名（可选）</h4><p>先到自己的域名供应商添加CNAME解析，再Github pages 配置CNAME（配置后你的仓库会自动生成CNAME文件）</p><p>域名供应商添加CNAME解析(注：如果是修改的域名，需要等待10分钟DNS刷新生效，默认TTL为10分钟)</p><p>我这里添加个二级测试域名：test.ffing.cn</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-7-1024x492.png"></p><p>Github pages配置个人域名</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-8-1024x626.png"></p><p>访问我的二级域名，已经成功跳转：test.ffing.cn</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-9-1024x550.png"></p><h2 id="第二种：有限流量，无限带宽"><a href="#第二种：有限流量，无限带宽" class="headerlink" title="第二种：有限流量，无限带宽"></a>第二种：有限流量，无限带宽</h2><p>利用免费的存储空间做静态发布。</p><p>不限制带宽的限制流量，可以让我们适当的放些展览性的小视频玩玩。</p><p>免费CDN送空间送流量，但是有限啊。。。</p><p>这里以又拍云为例，七牛云也是差不多的操作</p><p><strong>流程：</strong></p><ul><li>又拍云账号注册</li><li>创建操作员（用户管理存储）</li><li>创建存储空间</li><li>配置存储空间</li><li>上传静态网页</li><li>测试</li><li>绑定个人域名（测试域名只有30天）</li></ul><h4 id="第一步，又拍云账号注册"><a href="#第一步，又拍云账号注册" class="headerlink" title="第一步，又拍云账号注册"></a>第一步，又拍云账号注册</h4><p>前面文章有些，也可以自行百度，略……</p><h4 id="第二步，创建操作员（用户管理存储）"><a href="#第二步，创建操作员（用户管理存储）" class="headerlink" title="第二步，创建操作员（用户管理存储）"></a>第二步，创建操作员（用户管理存储）</h4><p>也可以在创建空间的时候一起创建，怕后面忘记保持密码，提前创建</p><p>登录账号，进入控制台，右上角点击你的用户名，创建操作员，将用户名和密码保存，我们后面要用到</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-10-1024x274.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-13-1024x385.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-12-1024x670.png"></p><h4 id="第三步，创建存储空间"><a href="#第三步，创建存储空间" class="headerlink" title="第三步，创建存储空间"></a>第三步，创建存储空间</h4><p>我擦，我也想略……前面文章有写。。。</p><p>登录控制台，选择云产品—&gt;云存储—&gt;创建服务—&gt;</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-14-1024x269.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-11-1024x422.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-15-1024x852.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-16-1024x838.png"></p><h4 id="第四步，配置存储空间"><a href="#第四步，配置存储空间" class="headerlink" title="第四步，配置存储空间"></a>第四步，配置存储空间</h4><p>配置存储空间，主要查看首页访问是否打开（https、图片水印设置可查看我前面文章）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-17-1024x839.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-18-1024x417.png"></p><h4 id="第五步，上传静态网页"><a href="#第五步，上传静态网页" class="headerlink" title="第五步，上传静态网页"></a>第五步，上传静态网页</h4><p>又拍云官方web文件管理：<a href="https://uptool.tingfun.net/">https://uptool.tingfun.net/</a></p><p>又拍云官方sdk工具下载：<a href="https://docs.upyun.com/download/">https://docs.upyun.com/download/</a></p><p>web端不支持上传目录，推荐官方客户端</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/09/image-1.png"></p><hr><p>或者FTP工具上传，FTP账号登录，将静态网页上传至云存储根目录</p><p>注意用户名格式：操作员名&#x2F;服务名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">主机名：v0.ftp.upyun.com</span><br><span class="line"></span><br><span class="line">用户名：操作员名/服务名</span><br><span class="line"></span><br><span class="line">密码：云存储操作员密码</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-19.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-20-1024x830.png"></p><h4 id="第六步，测试"><a href="#第六步，测试" class="headerlink" title="第六步，测试"></a>第六步，测试</h4><p>打开测试域名：<a href="http://testypy-ffing-cn.test.upcdn.net/">http://testypy-ffing-cn.test.upcdn.net/</a></p><p>访问正常，就可以免费试用测试域名30天了，如果需要长期使用建议绑定个人域名</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-21-1024x533.png"></p><h4 id="第七步，绑定个人域名（测试域名只有30天）"><a href="#第七步，绑定个人域名（测试域名只有30天）" class="headerlink" title="第七步，绑定个人域名（测试域名只有30天）"></a>第七步，绑定个人域名（测试域名只有30天）</h4><p>绑定域名两部分操作：又拍云绑定个人域名、域名供应商添加CNAME解析（没有先后顺序但要保持一致）</p><p>又拍云绑定个人域名，回到云存储，找到刚刚建立的服务名进行配置</p><p>这里添加个人域名testypy.ffing.cn为例</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-22-1024x342.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-23-1024x840.png"></p><p>域名供应商添加CNAME解析（上图有CNAME跳转地址）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-24-1024x445.png"></p><p>测试testypy.ffing.cn，OK结束</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-25-1024x558.png"></p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> coding </tag>
            
            <tag> gitee </tag>
            
            <tag> github </tag>
            
            <tag> 七牛云 </tag>
            
            <tag> 免费静态服务器 </tag>
            
            <tag> 又拍云 </tag>
            
            <tag> 静态网页 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 函数定义</title>
      <link href="/posts/b485d268.html"/>
      <url>/posts/b485d268.html</url>
      
        <content type="html"><![CDATA[<p>别名：单个命令</p><p>函数：可以理解为多个或多组命令的集合</p><p>系统默认函数，可自行查看：&#x2F;etc&#x2F;init.d&#x2F;functions</p><p>别名和函数都是为了实现变量替换，且函数文件也可以实现嵌套，也就说我们可以将写好的函数文件备份到任意电脑上进行调用，方便运维工作。（函数可以写入脚本也可以单独文件，可根据情况自行选择）</p><p><strong>定义函数语法</strong></p><p>语法一（常用）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[函数名]()&#123;</span><br><span class="line">...函数体...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>语法二：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function [函数名]()&#123;</span><br><span class="line">...函数体...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>语法三：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function [函数名]&#123;</span><br><span class="line">...函数体...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以删除文件为例，定义”删除成功”、”删除失败”函数，并调用系统action函数提示。</p><p>脚本如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#激活系统函数</span><br><span class="line">. /etc/init.d/functions</span><br><span class="line"></span><br><span class="line">#定义del_success函数</span><br><span class="line">del_success () &#123;</span><br><span class="line">action &quot;删除成功&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#定义定义del_fail函数</span><br><span class="line">del_fail () &#123;</span><br><span class="line">#false参数放在最后</span><br><span class="line">action &quot;删除失败&quot; false</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#删除文件操作</span><br><span class="line">rm /root/1.txt</span><br><span class="line"></span><br><span class="line">#通过上条删除命令执行结果进行判断</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then</span><br><span class="line">#返回值等于0，则执行del_success函数</span><br><span class="line">del_success</span><br><span class="line">else</span><br><span class="line">#返回值不等于0，则执行del_fail函数</span><br><span class="line">del_fail</span><br><span class="line">fi</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> funcont </tag>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过win10  、mac下终端ssh到服务器</title>
      <link href="/posts/fa8e788e.html"/>
      <url>/posts/fa8e788e.html</url>
      
        <content type="html"><![CDATA[<p>原生工具：win10 或 mac下的终端，临时满足个人使用。（win7需要安装ssh）</p><h2 id="ssh命令连接服务器："><a href="#ssh命令连接服务器：" class="headerlink" title="ssh命令连接服务器："></a>ssh命令连接服务器：</h2><p>ssh [-p 端口号] [-i 证书名] 服务器用户名@服务器IP或域名</p><p>注：win10:证书需放置在用户目录下%HOMEPATH%;也可以做个配置文件：用户目录&#x2F;.ssh&#x2F;config</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-43.png"></p><h2 id="SPC传输"><a href="#SPC传输" class="headerlink" title="SPC传输"></a>SPC传输</h2><p>scp 文件或目录 –到–&gt; 文件或目录</p><p>scp命令上传文件或目录：scp [-r] 本地文件或目录 服务器用户名@地址:目录</p><p>scp下载命令格式和上传是反过来。</p><p>小技巧：文件路径太深的时候，直接将文件或目录拖入终端框即可出现路径</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-29.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-30.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-31.png"></p><h2 id="小提示："><a href="#小提示：" class="headerlink" title="小提示："></a>小提示：</h2><p>如需长期使用，可以保存为脚本文件。</p><p>windows下做个批处理，懒人懒事</p><p>Mac也可以做个shell脚本。</p><p>注：mac下shell脚本想实现双击打开，需要满足两点：</p><p>1.添加执行权限：chmod +x 你的脚本文件</p><p>2.默认打开方式为“终端”:右键更改默认打开方式，在选择应用程序时选择“启用：所有应用程序”，选择”终端.app”。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-25.png"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
          <category> 教程 </category>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
            <tag> 原生终端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7下swap (删除、创建、扩容)</title>
      <link href="/posts/f142b42f.html"/>
      <url>/posts/f142b42f.html</url>
      
        <content type="html"><![CDATA[<p>查看swap</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br></pre></td></tr></table></figure><p>查看swap的位置及uuid</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blkid</span><br></pre></td></tr></table></figure><p>查看swap路径及优先级</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon -s</span><br></pre></td></tr></table></figure><p>启用所有swap</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon -a</span><br></pre></td></tr></table></figure><p>禁用所有swap</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-41.png"></p><h2 id="删除SWAP"><a href="#删除SWAP" class="headerlink" title="删除SWAP"></a>删除SWAP</h2><p>1.停止swap分区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapoff  ”swap分区位置“</span><br></pre></td></tr></table></figure><p>2.删除swap分区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf “swap分区位置“</span><br></pre></td></tr></table></figure><p>3.在&#x2F;etc&#x2F;fstab中，删除或注释掉swap行</p><p>vi &#x2F;etc&#x2F;fstab</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#/dev/mapper/centos-swap swap swap defaults 0 0</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-42.png"></p><h2 id="创建swap"><a href="#创建swap" class="headerlink" title="创建swap"></a>创建swap</h2><p>1.使用dd命令创建swap交换文件</p><p>下例：创建swap分区&#x2F;var&#x2F;swapfile，容量为1M*4096&#x3D;4096M&#x3D;4G</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#命令格式：dd if=/dev/zero of=&quot;swap文件&quot; bs=&quot;块大小&quot; count=”块数量“</span><br><span class="line"></span><br><span class="line">dd  if=/dev/zero  of=/var/swapfile  bs=1M  count=4096</span><br></pre></td></tr></table></figure><p>2.格式化swap分区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkswap  /var/swapfile</span><br></pre></td></tr></table></figure><p>3.激活swap分区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon /var/swapfile</span><br></pre></td></tr></table></figure><p>4.更改swap权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 0600 /var/swapfile</span><br></pre></td></tr></table></figure><p>5.配置&#x2F;etc&#x2F;fstab,添加swap分区开机自动挂载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo  &quot;/var/swapfile   swap  swap  defaults  0  0&quot; &gt;&gt;  /etc/fstab</span><br></pre></td></tr></table></figure><h2 id="扩容swap"><a href="#扩容swap" class="headerlink" title="扩容swap"></a>扩容swap</h2><p>扩容其实就是创建一个新的swap分区并激活。</p><p>脚本实例：</p><p>以M为单位！推荐！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#检测并设置swap</span><br><span class="line">#如果swap不存在，则创建,SETSWAP为指定的swap大小值</span><br><span class="line"></span><br><span class="line">#read键盘输入固定值</span><br><span class="line">read -p &quot;输入swap固定值(单位G)：&quot; GSETSWAP</span><br><span class="line"></span><br><span class="line">#swap固定值,单位G</span><br><span class="line">#GSETSWAP=8</span><br><span class="line"></span><br><span class="line">################以下无需修改##################</span><br><span class="line">echo &quot;当前设置SWAP固定值为$GSETSWAP G&quot;</span><br><span class="line"></span><br><span class="line">#G转换为M</span><br><span class="line">MSETSWAP=`echo &quot;1024*$GSETSWAP&quot;bc`</span><br><span class="line">#swap文件名</span><br><span class="line">RANDOM=`date +%N`</span><br><span class="line">SWAPFILE=&quot;/var/swapfile$RANDOM&quot;</span><br><span class="line">#获取swap</span><br><span class="line">OLDSWAP=`free -mawk &#x27;/Swap/ &#123;print $2&#125;&#x27;`</span><br><span class="line">OLDSWAPG=`free -hawk &#x27;/Swap/ &#123;print $2&#125;&#x27;`</span><br><span class="line"></span><br><span class="line">###判断swap</span><br><span class="line">#判断是否存在swap分区</span><br><span class="line">if [ &quot;$OLDSWAP&quot; = &quot;0B&quot; ] ;then</span><br><span class="line">#0B表示不存在swap，则创建swap</span><br><span class="line">echo  &quot;正在创建swap，请等待 ……&quot;</span><br><span class="line">dd  if=/dev/zero  of=$SWAPFILE  bs=1M  count=$MSETSWAP &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">#否则，扩容</span><br><span class="line">#判断当前设置swap是否大于原有swap</span><br><span class="line">if [ &quot;$MSETSWAP&quot; -gt &quot;$OLDSWAP&quot; ] ;then</span><br><span class="line">ADDSWAP=`echo &quot;$MSETSWAP-$OLDSWAP&quot;bc`</span><br><span class="line">echo  &quot;正在创建swap，请等待 ……&quot;</span><br><span class="line">dd  if=/dev/zero  of=$SWAPFILE  bs=1M  count=$ADDSWAP &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">else</span><br><span class="line">echo &quot;已存在SWAP: $OLDSWAPG&quot;</span><br><span class="line">echo &quot;错误！设置的swap需大于已有swap，请确认！&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#格式化swap</span><br><span class="line">mkswap  $SWAPFILE</span><br><span class="line">#启动swap</span><br><span class="line">swapon $SWAPFILE</span><br><span class="line">#swap权限</span><br><span class="line">chmod -R 0600 $SWAPFILE</span><br><span class="line">#开机挂载swap</span><br><span class="line">echo  &quot;$SWAPFILE   swap  swap  defaults  0  0&quot; &gt;&gt;  /etc/fstab</span><br><span class="line">echo</span><br><span class="line">echo &quot;----------------------当前交换分区----------------------&quot;</span><br><span class="line">swapon -s</span><br><span class="line">echo &quot;----------------------当前内存信息----------------------&quot;</span><br><span class="line">free -h</span><br></pre></td></tr></table></figure><p>____________________________________________________________</p><p>以G为单位，会出现些许偏差，推荐上面的脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#检测并设置swap</span><br><span class="line">#如果swap不存在，则创建,SETSWAP为指定的swap大小值</span><br><span class="line">SETSWAP=8</span><br><span class="line"></span><br><span class="line">###################################</span><br><span class="line">#swap文件名</span><br><span class="line">RANDOM=`date +%N`</span><br><span class="line">SWAPFILE=&quot;/var/swapfile$RANDOM&quot;</span><br><span class="line">#获取swap</span><br><span class="line">OLDSWAP=`free -mawk &#x27;/Swap/ &#123;print $2&#125;&#x27;`</span><br><span class="line">#OLDSWAP转换单位为G，并取整数部分</span><br><span class="line">OLDINTSWAP=`echo &quot;$OLDSWAP&quot;awk  &#x27;&#123;printf &quot;%.0f &quot;, $OLDSWAP/1024&#125;&#x27;`</span><br><span class="line"></span><br><span class="line">###判断swap</span><br><span class="line">#判断是否为空</span><br><span class="line">if [ &quot;$OLDINTSWAP&quot; = &quot;0B&quot; ] ;then</span><br><span class="line">#空则创建swap</span><br><span class="line">echo  &quot;正在创建swap，请等待 ……&quot;</span><br><span class="line">dd  if=/dev/zero  of=$SWAPFILE  bs=1G  count=$SETSWAP</span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">#不为空，则扩容</span><br><span class="line">#判断当前设置swap是否大于原有swap</span><br><span class="line">if [ &quot;$SETSWAP&quot; -gt &quot;$OLDINTSWAP&quot; ] ;then</span><br><span class="line">ADDSWAP=`echo &quot;$SETSWAP-$OLDINTSWAP&quot;bc`</span><br><span class="line">echo  &quot;正在创建swap，请等待 ……&quot;</span><br><span class="line">dd  if=/dev/zero  of=$SWAPFILE  bs=1G  count=$ADDSWAP</span><br><span class="line">else</span><br><span class="line">echo &quot;设置的swap比当前swap小，请确认&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#格式化swap</span><br><span class="line">mkswap  $SWAPFILE</span><br><span class="line">#启动swap</span><br><span class="line">swapon $SWAPFILE</span><br><span class="line">#swap权限</span><br><span class="line">chmod -R 0600 $SWAPFILE</span><br><span class="line">#开机挂载swap</span><br><span class="line">echo  &quot;$SWAPFILE   swap  swap  defaults  0  0&quot; &gt;&gt;  /etc/fstab</span><br><span class="line">echo</span><br><span class="line">echo &quot;----------------------当前交换分区----------------------&quot;</span><br><span class="line">swapon -s</span><br><span class="line">echo &quot;----------------------当前内存信息----------------------&quot;</span><br><span class="line">free -h</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> swap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows 一键共享</title>
      <link href="/posts/6c807a65.html"/>
      <url>/posts/6c807a65.html</url>
      
        <content type="html"><![CDATA[<p>OKshare代码，自行bat</p><p>俩字，好用！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">color 2f</span><br><span class="line">mode con cols=50 lines=30</span><br><span class="line">title  OKShare  【制作：wnsdt】</span><br><span class="line">ver  findstr &quot;5.&quot;&gt;nul  set bulid=nt6 &amp;&amp; goto sc_yhbl</span><br><span class="line">set bulid=nt5</span><br><span class="line">:sc_yhbl</span><br><span class="line">reg query &quot;HKCU\Environment&quot; /v temp &gt;nul 2&gt;nulset &quot;usertemp=%USERPROFILE%\&quot; &amp;&amp; goto sc_top</span><br><span class="line">set usertemp=%temp%\</span><br><span class="line">:sc_top</span><br><span class="line">cls</span><br><span class="line">del /q %temp%\info.txt&gt;nul 2&gt;nul</span><br><span class="line">:sc_menu</span><br><span class="line">echo.&amp;echo.&amp;echo.</span><br><span class="line">echo             局域网共享一键修复 17.9.11</span><br><span class="line">echo.</span><br><span class="line">echo    --------------------------------------------</span><br><span class="line">echo.&amp;echo.&amp;echo.</span><br><span class="line">echo               1、查看网络信息</span><br><span class="line">echo.</span><br><span class="line">echo               2、简单共享（无密码）</span><br><span class="line">echo.</span><br><span class="line">echo               3、密码共享</span><br><span class="line">echo.</span><br><span class="line">echo               4、共享和权限设置</span><br><span class="line">echo.</span><br><span class="line">echo               5、设置权限指南（图文）</span><br><span class="line">echo.</span><br><span class="line">echo               6、打印机共享指南（图文）</span><br><span class="line">echo.</span><br><span class="line">echo               7、软件更新与反馈</span><br><span class="line">echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.</span><br><span class="line">set select=</span><br><span class="line">set str1=1234567</span><br><span class="line">set /p select= 输入数字，按回车:</span><br><span class="line">if not defined select goto sc_wrong</span><br><span class="line">echo %select%findstr &quot;[%str1%]&quot;&gt;nulgoto sc_wrong</span><br><span class="line">if %select%==1 (goto sc_info)</span><br><span class="line">if %select%==2 (goto sc_zd)</span><br><span class="line">if %select%==3 (goto sc_sd)</span><br><span class="line">if %select%==4 (goto sc_gl) </span><br><span class="line">if %select%==5 (goto sc_help) </span><br><span class="line">if %select%==6 (goto sc_print) </span><br><span class="line">if %select%==7 (goto sc_update) </span><br><span class="line">:sc_wrong</span><br><span class="line">mshta vbscript:msgbox(&quot;只能输入1-7的数字&quot;,64,&quot;提示&quot;)(window.close) </span><br><span class="line">goto sc_top</span><br><span class="line">:sc_info</span><br><span class="line">cls</span><br><span class="line">echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.</span><br><span class="line">echo                  正在处理信息....</span><br><span class="line">if &quot;%bulid%&quot;==&quot;nt6&quot; goto sc_nt6</span><br><span class="line">:sc_nt5</span><br><span class="line">(echo.</span><br><span class="line">echo.)&gt;&gt;%usertemp%info.txt</span><br><span class="line">ping www.baidu.com -n 1 &gt;nul  echo              互联网状态：       [ 离线 ]&gt;&gt;%usertemp%info.txt &amp;&amp; goto sc_ver_nt5</span><br><span class="line">echo              互联网状态：       [ 在线 ]&gt;&gt;%usertemp%info.txt</span><br><span class="line">:sc_ver_nt5</span><br><span class="line">(echo ----------------------------------------------------------</span><br><span class="line">echo.)&gt;&gt;%usertemp%info.txt</span><br><span class="line">for /f &quot;skip=1 tokens=2-4 delims=, &quot; %%a in (&#x27;wmic os get caption&#x27;) do (</span><br><span class="line">if exist %windir%\SysWOW64 echo         系统版本：       %%a %%b %%c  64位&gt;&gt;%usertemp%info.txt &amp; goto sc_ver_nt5_next</span><br><span class="line">echo         系统版本：       %%a %%b %%c  32位&gt;&gt;%usertemp%info.txt</span><br><span class="line">)</span><br><span class="line">:sc_ver_nt5_next</span><br><span class="line">(echo.</span><br><span class="line">echo         计算机名：            %COMPUTERNAME%</span><br><span class="line">echo.)&gt;&gt;%usertemp%info.txt</span><br><span class="line">for /f &quot;tokens=2 delims= &quot; %%a in (&#x27;net config workstation^findstr /c:&quot;工作站域&quot;&#x27;) do echo         工作组：              %%a&gt;&gt;%usertemp%info.txt &amp; goto sc_info_nt5</span><br><span class="line">:sc_info_nt5</span><br><span class="line">(echo.</span><br><span class="line">echo         当前用户：            %USERNAME%</span><br><span class="line">echo.)&gt;&gt;%usertemp%info.txt</span><br><span class="line">for /f &quot;delims=&quot; %%a in (&#x27;date /t&#x27;) do echo         本机日期：            %%a&gt;&gt;%usertemp%info.txt</span><br><span class="line">echo.&gt;&gt;%usertemp%info.txt</span><br><span class="line">for /f &quot;delims=&quot; %%a in (&#x27;time /t&#x27;) do echo         本机时间：            %%a&gt;&gt;%usertemp%info.txt</span><br><span class="line">echo ----------------------------------------------------------&gt;&gt;%usertemp%info.txt</span><br><span class="line">goto sc_info_more</span><br><span class="line">:sc_nt6</span><br><span class="line">(echo.</span><br><span class="line">echo.)&gt;&gt;%usertemp%info.txt</span><br><span class="line">ping www.baidu.com -n 1 &gt;nul  echo          互联网状态：       [ 离线 ]&gt;&gt;%usertemp%info.txt &amp;&amp; goto sc_ver_nt6</span><br><span class="line">echo          互联网状态：       [ 在线 ]&gt;&gt;%usertemp%info.txt</span><br><span class="line">:sc_ver_nt6</span><br><span class="line">(echo --------------------------------------------------</span><br><span class="line">echo.)&gt;&gt;%usertemp%info.txt</span><br><span class="line">for /f &quot;skip=1 tokens=2-5 delims=?, &quot; %%a in (&#x27;wmic os get caption&#x27;) do (</span><br><span class="line">if exist %windir%\SysWOW64 echo    系统版本：      %%a %%b %%c %%d 64位&gt;&gt;%usertemp%info.txt &amp; goto sc_ver_nt6_next</span><br><span class="line">echo    系统版本：       %%a %%b %%c %%d 32位&gt;&gt;%usertemp%info.txt</span><br><span class="line">)</span><br><span class="line">:sc_ver_nt6_next</span><br><span class="line">(echo.</span><br><span class="line">echo    计算机名：            %COMPUTERNAME%</span><br><span class="line">echo.)&gt;&gt;%usertemp%info.txt</span><br><span class="line">for /f &quot;tokens=2 delims= &quot; %%a in (&#x27;net config workstation^findstr /c:&quot;工作站域&quot;&#x27;) do echo    工作组：              %%a&gt;&gt;%usertemp%info.txt</span><br><span class="line">(echo.</span><br><span class="line">echo    当前用户：            %USERNAME%</span><br><span class="line">echo.)&gt;&gt;%usertemp%info.txt</span><br><span class="line">for /f &quot;delims=&quot; %%a in (&#x27;date /t&#x27;) do echo    本机日期：            %%a&gt;&gt;%usertemp%info.txt</span><br><span class="line">echo.&gt;&gt;%usertemp%info.txt</span><br><span class="line">for /f &quot;delims=&quot; %%a in (&#x27;time /t&#x27;) do echo    本机时间：            %%a&gt;&gt;%usertemp%info.txt</span><br><span class="line">echo --------------------------------------------------&gt;&gt;%usertemp%info.txt</span><br><span class="line">:sc_info_more</span><br><span class="line">if &quot;%bulid%&quot;==&quot;nt5&quot; ipconfig /allfindstr /v /c:&quot;Windows IP Configuration&quot;findstr /v /c:&quot;Host Name&quot;findstr /v /c:&quot;Primary Dns Suffix&quot;findstr /v /c:&quot;Node Type&quot;findstr /v /c:&quot;IP Routing Enabled&quot;findstr /v /c:&quot;WINS Proxy Enabled&quot;&gt;&gt;%usertemp%info.txt &amp;&amp; goto sc_info_next</span><br><span class="line">ipconfig /allfindstr /v /c:&quot;Windows IP 配置&quot;findstr /v /c:&quot;主机名&quot;findstr /v /c:&quot;主 DNS 后缀&quot;findstr /v /c:&quot;节点类型&quot;findstr /v /c:&quot;IP 路由已启用&quot;findstr /v /c:&quot;WINS 代理已启用&quot;&gt;&gt;%usertemp%info.txt</span><br><span class="line">:sc_info_next</span><br><span class="line">start /w notepad %temp%\info.txt</span><br><span class="line">del /q %temp%\info.txt&gt;nul 2&gt;nul</span><br><span class="line">goto sc_top</span><br><span class="line">:sc_zd</span><br><span class="line">call :sc_qxfix</span><br><span class="line">cls</span><br><span class="line">echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.</span><br><span class="line">echo                    开始修复......</span><br><span class="line">net user guest /active:yes&gt;nul 2&gt;nul</span><br><span class="line">net user guest &quot;&quot;&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa&quot; /v forceguest /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa&quot; /v LimitBlankPasswordUse /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul</span><br><span class="line">goto sc_main</span><br><span class="line">:sc_sd</span><br><span class="line">call :sc_qxfix</span><br><span class="line">cls</span><br><span class="line">echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.</span><br><span class="line">echo                    开始修复......</span><br><span class="line">net user guest /active:no&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa&quot; /v forceguest /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0&quot; /v NtlmMinClientSec /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0&quot; /v NtlmMinServerSec /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul</span><br><span class="line">goto sc_main</span><br><span class="line">:sc_main</span><br><span class="line">sc config LanmanWorkstation start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config LanmanServer start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config Winmgmt start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config RpcSs start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config Netman start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config RasMan start= demand&gt;nul 2&gt;nul</span><br><span class="line">sc config SSDPSRV start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config BFE start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config ALG start= demand&gt;nul 2&gt;nul</span><br><span class="line">sc config SharedAccess start= auto&gt;nul 2&gt;nul</span><br><span class="line">net start SharedAccess /y&gt;nul 2&gt;nul</span><br><span class="line">sc config Browser start= auto&gt;nul 2&gt;nul</span><br><span class="line">net start Browser /y&gt;nul 2&gt;nul</span><br><span class="line">sc config Dnscache start= auto&gt;nul 2&gt;nul</span><br><span class="line">net start Dnscache /y&gt;nul 2&gt;nul</span><br><span class="line">sc config Dhcp start= auto&gt;nul 2&gt;nul</span><br><span class="line">net start Dhcp /y&gt;nul 2&gt;nul</span><br><span class="line">sc config lmhosts start= auto&gt;nul 2&gt;nul</span><br><span class="line">net start lmhosts /y&gt;nul 2&gt;nul</span><br><span class="line">sc config Spooler start= auto&gt;nul 2&gt;nul</span><br><span class="line">net start Spooler /y&gt;nul 2&gt;nul</span><br><span class="line">sc config upnphost start= demand&gt;nul 2&gt;nul</span><br><span class="line">net start upnphost /y&gt;nul 2&gt;nul</span><br><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\Netlogon&quot; /v Startfindstr &quot;0x4&quot;&gt;nul 2&gt;nul &amp;&amp; sc config Netlogon start= demand&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKLM\SYSTEM\CurrentControlSet\services\NetBT\Parameters&quot; /v TransportBindName /t REG_SZ /d \Device\ /f&gt;nul 2&gt;nul</span><br><span class="line">reg delete &quot;HKLM\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters&quot; /v SMB1 /F&gt;nul 2&gt;nul</span><br><span class="line">reg delete &quot;HKLM\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters&quot; /v SMB2 /F&gt;nul 2&gt;nul</span><br><span class="line">reg delete &quot;HKLM\SYSTEM\CurrentControlSet\services\NetBT\Parameters&quot; /v SMBDeviceEnabled /F&gt;nul 2&gt;nul</span><br><span class="line">sc config netbt start= system&gt;nul 2&gt;nul</span><br><span class="line">net start netbt&gt;nul 2&gt;nul</span><br><span class="line">if &quot;%bulid%&quot;==&quot;nt6&quot; goto sc_sernt6</span><br><span class="line">:sc_sernt5</span><br><span class="line">sc config PlugPlay start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config TapiSrv start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config Nla start= auto&gt;nul 2&gt;nul</span><br><span class="line">net start Nla /y&gt;nul 2&gt;nul</span><br><span class="line">netsh firewall set opmode mode=disable&gt;nul 2&gt;nul</span><br><span class="line">goto sc_main2_etc</span><br><span class="line">:sc_sernt6</span><br><span class="line">sc config DcomLaunch start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config RpcEptMapper start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config SamSs start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config nsi start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config SstpSvc start= demand&gt;nul 2&gt;nul</span><br><span class="line">sc config MpsSvc start= auto&gt;nul 2&gt;nul</span><br><span class="line">net start MpsSvc /y&gt;nul 2&gt;nul</span><br><span class="line">sc config NlaSvc start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config netprofm start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config fdPHost start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config FDResPub start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config HomeGroupListener start= auto&gt;nul 2&gt;nul</span><br><span class="line">sc config WMPNetworkSvc start= auto&gt;nul 2&gt;nul</span><br><span class="line">net start WMPNetworkSvc /y&gt;nul 2&gt;nul</span><br><span class="line">sc config HomeGroupProvider start= auto&gt;nul 2&gt;nul</span><br><span class="line">net start HomeGroupProvider /y&gt;nul 2&gt;nul</span><br><span class="line">netsh advfirewall set allprofiles state off&gt;nul 2&gt;nul</span><br><span class="line">:sc_main2_etc</span><br><span class="line">(echo [Unicode]</span><br><span class="line">echo Unicode=yes</span><br><span class="line">echo [Version]</span><br><span class="line">echo signature=&quot;$CHICAGO$&quot;</span><br><span class="line">echo Revision=1</span><br><span class="line">echo [Privilege Rights]</span><br><span class="line">echo sedenynetworklogonright = </span><br><span class="line">echo senetworklogonright = Everyone,Administrators,Users,Power Users,Backup Operators,guest)&gt;&gt;%usertemp%zcl.inf</span><br><span class="line">secedit /configure /db %usertemp%zcl.sdb /cfg %usertemp%zcl.inf /log %usertemp%zcl.log /quiet</span><br><span class="line">del /q %usertemp%zcl.*&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0&quot; /v LmCompatibilityLevel /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa&quot; /v restrictanonymous /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa&quot; /v restrictanonymoussam /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa&quot; /v everyoneincludesanonymous /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa&quot; /v NoLmHash /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters&quot; /v AutoShareServer /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters&quot; /v AutoShareWks /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters&quot; /v restrictnullsessaccess /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Browser\Parameters&quot; /v MaintainServerList /t REG_SZ /d Auto /f&gt;nul 2&gt;nul</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Browser\Parameters&quot; /v IsDomainMaster /t REG_SZ /d FALSE /f&gt;nul 2&gt;nul</span><br><span class="line">for /f &quot;delims=&quot; %%a in (&#x27;reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\NetBT\Parameters\Interfaces&quot; /s /e /f &quot;0x2&quot;^findstr &quot;\Tcpip_&quot;&#x27;) do reg add &quot;%%a&quot; /v NetbiosOptions /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul</span><br><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\NetBT\Parameters&quot; /v EnableLMHOSTSfindstr &quot;0x0&quot;&gt;nul 2&gt;nul &amp;&amp; reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\NetBT\Parameters&quot; /v EnableLMHOSTS /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul</span><br><span class="line">reg delete &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\RemoteComputer\NameSpace\&#123;D6277990-4C6A-11CF-8D87-00AA0060F5BF&#125;&quot; /f&gt;nul 2&gt;nul</span><br><span class="line">net use * /del /y&gt;nul 2&gt;nul</span><br><span class="line">net config server /hidden:no&gt;nul 2&gt;nul</span><br><span class="line">net share ipc$&gt;nul 2&gt;nul</span><br><span class="line">goto sc_tip</span><br><span class="line">:sc_gl</span><br><span class="line">cls</span><br><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa&quot; /v forceguestfindstr &quot;0x1&quot;&gt;nul 2&gt;nulgoto classic</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa&quot; /v forceguest /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul</span><br><span class="line">set jlb=y</span><br><span class="line">:classic</span><br><span class="line">echo.&amp;echo.&amp;echo.&amp;echo.</span><br><span class="line">echo         功能：管理共享，修改共享文件夹权限</span><br><span class="line">echo   ----------------------------------------------</span><br><span class="line">echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.</span><br><span class="line">echo                    【使用说明】</span><br><span class="line">echo.&amp;echo.</span><br><span class="line">echo        点左侧“共享”可查看本机所有共享；</span><br><span class="line">echo.</span><br><span class="line">echo        右键点左侧“共享”可“新建共享”；</span><br><span class="line">echo.</span><br><span class="line">echo        右键点右侧共享可“停止共享”（能多选）；</span><br><span class="line">echo.</span><br><span class="line">echo        右键点右侧共享选“属性”可修改权限；</span><br><span class="line">echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.</span><br><span class="line">fsmgmt.msc</span><br><span class="line">if &quot;%jlb%&quot;==&quot;y&quot; reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa&quot; /v forceguest /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul</span><br><span class="line">cls</span><br><span class="line">echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.</span><br><span class="line">echo                     设置完成！</span><br><span class="line">echo.&amp;echo.&amp;echo.</span><br><span class="line">echo            按键盘任意键返回，或直接关闭！</span><br><span class="line">pause&gt;nul 2&gt;nul</span><br><span class="line">goto sc_top</span><br><span class="line">:sc_tip</span><br><span class="line">mshta vbscript:msgbox(&quot;修复完成，请重启计算机&quot;,64,&quot;提示&quot;)(window.close) </span><br><span class="line">goto sc_exit</span><br><span class="line">:sc_help</span><br><span class="line">cls</span><br><span class="line">start &quot;%ProgramFiles%\Internet Explorer\iexplore.exe&quot; &quot;https://zhuanlan.zhihu.com/p/24285252&quot;</span><br><span class="line">goto sc_top</span><br><span class="line">:sc_print</span><br><span class="line">cls</span><br><span class="line">start &quot;%ProgramFiles%\Internet Explorer\iexplore.exe&quot; &quot;https://zhuanlan.zhihu.com/p/24187152&quot;</span><br><span class="line">goto sc_top</span><br><span class="line">:sc_update</span><br><span class="line">cls</span><br><span class="line">start &quot;%ProgramFiles%\Internet Explorer\iexplore.exe&quot; &quot;https://zhuanlan.zhihu.com/p/24178142&quot;</span><br><span class="line">goto sc_top</span><br><span class="line">goto :eof</span><br><span class="line">:sc_qxfix</span><br><span class="line">cls</span><br><span class="line">echo.&amp;echo.&amp;echo.</span><br><span class="line">echo                    【使用说明】</span><br><span class="line">echo    --------------------------------------------</span><br><span class="line">echo.</span><br><span class="line">echo       鼠标复制共享文件夹地址栏路径粘贴到下方</span><br><span class="line">echo.</span><br><span class="line">echo         如果只共享打印机，就按下回车键跳过</span><br><span class="line">echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.</span><br><span class="line">echo 粘贴路径，按回车:</span><br><span class="line">echo.&amp;echo.</span><br><span class="line">set /p lj=</span><br><span class="line">for %%a in (&quot;%lj%&quot;) do set name=%%~na</span><br><span class="line">net share &quot;%name%&quot;=&quot;%lj%&quot;&gt;nul 2&gt;nul</span><br><span class="line">if &quot;%bulid%&quot;==&quot;nt5&quot; cacls &quot;%lj%&quot; /t /e /p everyone:f &gt;nul 2&gt;nul &amp;&amp; goto :eof</span><br><span class="line">icacls &quot;%lj%&quot; /grant everyone:(oi)(ci)f&gt;nul 2&gt;nul</span><br><span class="line">goto :eof</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> 一键共享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows 开机自动登录（免去密码输入环节）</title>
      <link href="/posts/c5ca7821.html"/>
      <url>/posts/c5ca7821.html</url>
      
        <content type="html"><![CDATA[<p>背景：</p><p>办公室电脑需要被远程、还随时win+l，就必须设置密码。但每次开机又懒得输入密码。</p><p>so</p><p><strong>netplwiz</strong>或<strong>control userpasswords2</strong></p><p>第一步：打开“用户账户”</p><p>“运行”或dos（黑框）输入：<strong>netplwiz</strong>或<strong>control userpasswords2</strong></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-34.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-35.png"></p><p>第二步，取消“输入密码”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-37.png"></p><p>第三步，点击“确定”，输入需要自动登录都用户名、密码，确认。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-39.png"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows开机自动登录 </tag>
            
            <tag> 免密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一分钟申请xshell免费版</title>
      <link href="/posts/7a05da75.html"/>
      <url>/posts/7a05da75.html</url>
      
        <content type="html"><![CDATA[<p>前几天朋友让我帮忙找xshell的破解版，我很懵逼，个人免费版不可以用吗？？？</p><p>免费版和商业版最大区别就是在于一个前端最多打开4个标签，超过4个后，就自动再打开下一个前端程序，个人使用已经可以满足了。</p><p>当然，懒人还可以使用系统自带的终端连接服务器，文章结尾有介绍。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-21.png"></p><p>介于朋友的这种情况，写个1分钟申请流程吧。</p><p><strong>官网–&gt;免费授权–&gt;填写你的邮箱–&gt;登录你的邮箱–&gt;打开邮件链接下载–&gt;ok</strong></p><p>1.打开xshell的官网：<a href="https://www.netsarang.com/zh/xshell/">https://www.netsarang.com/zh/xshell/</a></p><p>（注：带cn的那个是国内代理商的网站，是不会放免费的东东的。）</p><p>2.点击下载</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-17-1024x497.png"></p><p>3.选择免费授权</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-18-1024x662.png"></p><p>4.邮箱必须正确，下载链接会发送到你填写的邮箱（这里一般选择两者，可以把xshell和xftp都发给你）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-19.png"></p><p>5.到你自己填写的邮箱，会有xshell发送的邮件，点击链接下载即可</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-20-1024x161.png"></p><p>6.安装流程我就不讲了吧，下一步即可。</p><p>注：xshell需要vc++环境，如果缺省xxx.dll，就安装一下微软常用运行库吧。</p><p>-———————————————————————————–</p><p>顺便推荐下finalshell，支持mac、win、linux平台，需要java环境。</p><p>-———————————————————————————–</p><h2 id="懒人秘籍："><a href="#懒人秘籍：" class="headerlink" title="懒人秘籍："></a>懒人秘籍：</h2><p>原生工具：win10 或 mac下的终端，临时满足个人使用。（win7需要安装ssh）</p><p>ssh命令连接服务器：ssh [-p 端口号] [-i 证书名] 服务器用户名@服务器IP或域名</p><p>注：win10:证书需放置在用户目录下%HOMEPATH%，证书放其它位置需要配置文件，较为麻烦</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-43.png"></p><p>SPC传输：scp 文件或目录 –到–&gt; 文件或目录</p><p>scp命令上传文件或目录：scp [-r] 本地文件或目录 服务器用户名@地址:目录</p><p>scp下载命令格式和上传是反过来。</p><p>小技巧：文件路径太深的时候，直接将文件或目录拖入终端框即可出现路径</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-29.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-30.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-31.png"></p><p>如需长期使用，可以保存为脚本文件。</p><p>windows下做个批处理</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-22.png"></p><p>Mac也可以做个shell脚本</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-24.png"></p><p>注：mac下shell脚本想实现双击打开，需要满足两点：</p><p>1.添加执行权限：chmod +x 你的脚本文件</p><p>2.默认打开方式为“终端”:右键更改默认打开方式，在选择应用程序时选择“启用：所有应用程序”，选择”终端.app”。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-25.png"></p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xshell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用X协议实现linux图像转发</title>
      <link href="/posts/a121e4d7.html"/>
      <url>/posts/a121e4d7.html</url>
      
        <content type="html"><![CDATA[<p>安装oracle数据库，必须要有图像安装，而我的centos没有装gnome桌面，但我又不想装桌面，浪费资源。所以就懵逼着百度看到了着个X协议。</p><p>x11端口：默认 DISPLAY&#x3D;IP:0.0 使用端口 6000，DISPLAY&#x3D;IP:1.0 使用端口6001，以此类推。</p><p>X协议:实现在没有安装图像的主机上，将图像转发到可以展示图像的主机上。</p><h2 id="流程："><a href="#流程：" class="headerlink" title="流程："></a>流程：</h2><ul><li>图解</li><li>配置客户端</li><li>配置服务端</li><li>测试</li></ul><h2 id="一，图解："><a href="#一，图解：" class="headerlink" title="一，图解："></a>一，图解：</h2><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-2.png"></p><p>从上图可以看出：</p><p>最终将图像转发到我们的个人电脑上，免去服务器安装桌面。</p><p>centos为客户端，而我们的个人PC为服务端，所以我们需要对客户端和服务端这两个地方操作。（这里的客户端和服务端很别扭，有历史原因可以自行百度）</p><p>客户端为centos7：配置sshd_config，安装xorg-x11-apps，安装 Fonts（如果没有字体会出现中文乱码）</p><p>服务端为个人PC：为windos时，安装Xming；为MAC时，安装Xquartz</p><h2 id="二，客户端配置"><a href="#二，客户端配置" class="headerlink" title="二，客户端配置"></a>二，客户端配置</h2><p>本地ssh远程到centos做操作。</p><h4 id="1-配置-x2F-etc-x2F-ssh-x2F-sshd-config，在最后添加X11转发、Tcp转发"><a href="#1-配置-x2F-etc-x2F-ssh-x2F-sshd-config，在最后添加X11转发、Tcp转发" class="headerlink" title="1.配置&#x2F;etc&#x2F;ssh&#x2F;sshd_config，在最后添加X11转发、Tcp转发"></a><strong>1.配置&#x2F;etc&#x2F;ssh&#x2F;sshd_config</strong>，<strong>在最后添加X11转发、Tcp转发</strong></h4><p>vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X11Forwarding yes</span><br><span class="line">AllowTcpForwarding yes</span><br></pre></td></tr></table></figure><p>编辑完成后，重启ssh服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><h4 id="2-安装xorg-x11-apps（X11协议与客户端应用程序进行交互的应用程序）"><a href="#2-安装xorg-x11-apps（X11协议与客户端应用程序进行交互的应用程序）" class="headerlink" title="2.安装xorg-x11-apps（X11协议与客户端应用程序进行交互的应用程序）"></a>2.安装xorg-x11-apps（X11协议与客户端应用程序进行交互的应用程序）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install xorg-x11-apps</span><br></pre></td></tr></table></figure><h4 id="3-安装-Fonts（如果没有字体会出现中文乱码）"><a href="#3-安装-Fonts（如果没有字体会出现中文乱码）" class="headerlink" title="3.安装 Fonts（如果没有字体会出现中文乱码）"></a>3.安装 Fonts（如果没有字体会出现中文乱码）</h4><p>两种方法：推荐第一种方法</p><p>第一种：上传中文字体</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#创建字体目录</span><br><span class="line">mkdir -p /usr/share/fonts/zh_CN/TrueType </span><br><span class="line">#将中易宋体字体文件上传 </span><br><span class="line">scp zysong.ttf 服务器用户名@地址:/usr/share/fonts/zh_CN/TrueType </span><br><span class="line">#注：中易宋体方便后期安装oracle，百度自行下载字体文件。</span><br></pre></td></tr></table></figure><p>第二种：懒人方法</p><p>yum安装字体，但安装后部分软件仍然有中文乱码,即使更改默认语言环境也不行，懵逼啊。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#安装字体（默认英文语言环境）</span><br><span class="line">yum -y groupinstall fonts</span><br><span class="line">#如果是中文语言环境使用下面命令</span><br><span class="line">yum -y groupinstall 字体</span><br></pre></td></tr></table></figure><p>注：如果依然有中文乱码情况，可更改默认语言环境：localectl set-locale LANG&#x3D;zh_CN.utf8</p><h4 id="4-配置DISPLAY变量"><a href="#4-配置DISPLAY变量" class="headerlink" title="4.配置DISPLAY变量"></a>4.配置DISPLAY变量</h4><p>临时变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export DISPLAY=你的PC电脑IP地址:0.0</span><br></pre></td></tr></table></figure><p>如需永久变量，可将变量添加到全局&#x2F;etc&#x2F;profile或用户文件~&#x2F;.bash_profile</p><h2 id="三，服务端配置"><a href="#三，服务端配置" class="headerlink" title="三，服务端配置"></a>三，服务端配置</h2><h4 id="1-配置window服务端：Xming"><a href="#1-配置window服务端：Xming" class="headerlink" title="1.配置window服务端：Xming"></a>1.配置window服务端：Xming</h4><h5 id="a-下载Xming："><a href="#a-下载Xming：" class="headerlink" title="a.下载Xming："></a>a.下载Xming：</h5><p>官网<a href="http://www.straightrunning.com/XmingNotes/">http://www.straightrunning.com/XmingNotes/</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-3.png"></p><h5 id="b-安装Xming"><a href="#b-安装Xming" class="headerlink" title="b.安装Xming"></a>b.安装Xming</h5><p>安装很简单，注意2点就可以了（也可以一直下一步到安装结束）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-6.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-5.png"></p><p>安装完成后，桌面就会多出2个图标</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-7.png"></p><h5 id="c-配置Xming"><a href="#c-配置Xming" class="headerlink" title="c.配置Xming"></a>c.配置Xming</h5><p>打开Xlaunch，进行Xming配置</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-10.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-8.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-9.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-11.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-12.png"></p><p>将配置文件保存到桌面，以后就可以双击生成的配置文件，直接打开Xming。</p><h4 id="2-配置Mac服务端：Xquartz"><a href="#2-配置Mac服务端：Xquartz" class="headerlink" title="2.配置Mac服务端：Xquartz"></a>2.配置Mac服务端：Xquartz</h4><h5 id="a-下载安装Xquartz"><a href="#a-下载安装Xquartz" class="headerlink" title="a.下载安装Xquartz"></a>a.下载安装Xquartz</h5><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2022/04/image-1.png"></p><p>Xquartz官网：<a href="https://www.xquartz.org/">https://www.xquartz.org/</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-14.png"></p><h5 id="b-配置Xquartz"><a href="#b-配置Xquartz" class="headerlink" title="b.配置Xquartz"></a>b.配置Xquartz</h5><p>打开Xquartz.app，配置访问权限，根据自己需求选择配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#任何人都能连接MAC的X server</span><br><span class="line">xhost +  </span><br><span class="line">#只有对应ip可以连接MAC的X server</span><br><span class="line">xhost + ip</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-13.png"></p><h2 id="四，测试"><a href="#四，测试" class="headerlink" title="四，测试"></a>四，测试</h2><p>远程ssh登录到centos，输入xclock（如果没有xclock，先yum安装xclock），在你设置的DISPLAY对应的服务端就会出现一个时钟。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-15.png"></p><p>也可以使用火狐浏览器进行测试，注意安装字体 ，否则会中文乱码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#安装火狐浏览器</span><br><span class="line">yum -y install firefox</span><br></pre></td></tr></table></figure><p>其它测试：利用内网映射，科学上网也可以实现。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Windows </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> X11 </tag>
            
            <tag> Xming </tag>
            
            <tag> XQuartz </tag>
            
            <tag> X协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>U盘安装centos，无法找到U盘安装源，最简单的解决方法</title>
      <link href="/posts/cd69956f.html"/>
      <url>/posts/cd69956f.html</url>
      
        <content type="html"><![CDATA[<p>每年都丢U盘，每年都买U盘。</p><p>今年买了2个U盘备用，顺带重装centos7发现使用网上通用的方法无法发现U盘，额。当时在想是不是新U盘（金士顿）是不是主控版本太高。。。后发现是现在的金士顿太垃圾。。。</p><p>然后就百度有了新发现，最简单的操作，实在是NB，只需要删除“6_64”即可。</p><p>原始的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmlinuz initrd=initrd.img inst.stage2=hd:LABEL=CentOS\x207\x20x86_64 quiet</span><br></pre></td></tr></table></figure><p>更改后：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmlinuz initrd=initrd.img inst.stage2=hd:LABEL=CentOS\x207\x20x8 quiet</span><br></pre></td></tr></table></figure><p>ctrl+x保存，就顺利安装系统了。切记只需要删除“6_64”即可</p><p>忘记了哪位大神写了，做个记录吧。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> U盘安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>按键精灵-实现自动刷视频</title>
      <link href="/posts/d5da22f3.html"/>
      <url>/posts/d5da22f3.html</url>
      
        <content type="html"><![CDATA[<p>按键精灵官网：<a href="http://www.anjian.com/">http://www.anjian.com/</a></p><p>手机助手下载：<a href="http://download.myanjian.com/">http://download.myanjian.com/</a></p><p>使用“按键精灵-手机助手”版本，进行安卓调试。</p><p>注：安卓手机精灵需安卓手机需要root，root方式建议：TWRP+Magisk</p><p>TWRP:<a href="https://twrp.me/Devices/">https://twrp.me/Devices/</a></p><p>Magisk：<a href="https://github.com/topjohnwu/Magisk/releases">https://github.com/topjohnwu/Magisk/releases</a></p><p>历时1天半完善脚本，适配所有屏幕尺寸，随机观看6~16秒。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line">//实现功能：</span><br><span class="line">//1.适配所有屏幕</span><br><span class="line">//2.防检测：区域随机从下往上滑，且滑动延迟随机</span><br><span class="line">//3.防检测：区域随机双击点赞，且点赞双击浮动随机、双击延迟随机</span><br><span class="line">//4.防检测：随机点赞，以播放时长为基数，且点赞视频延时一倍时长</span><br><span class="line">//5.防检测：每次打开app观看视频数量随机</span><br><span class="line">//6.支持多个app连续刷视频</span><br><span class="line">//7.随机观看6~16秒</span><br><span class="line">//8.提示剩余数量、播放时长、滑动时长</span><br><span class="line">//9.提示app总播放时长</span><br><span class="line"></span><br><span class="line">/////////////唯一需要修改app值，可根据自己手机app增加！//////////////</span><br><span class="line">//定义app（默认app顺序：刷宝、点淘、快手极速版、抖音极速版）</span><br><span class="line">dim app = array(&quot;com.jm.video&quot;, &quot;com.taobao.live&quot;,&quot;com.kuaishou.nebula&quot;,&quot;com.ss.android.ugc.aweme.lite&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">///////////////////////可改可不改，不影响使用////////////////////////</span><br><span class="line">///////////////////////可改可不改，不影响使用////////////////////////</span><br><span class="line">///////////////////////可改可不改，不影响使用////////////////////////</span><br><span class="line"></span><br><span class="line">//定义最多视频个数和最少视频个数，进行随机(默认最多50个，最少30个)</span><br><span class="line">Dim nummax,nummin</span><br><span class="line">nummax=50</span><br><span class="line">nummin=30</span><br><span class="line"></span><br><span class="line">//定义点赞视频时长（默认随机出12~14秒视频进行点赞）</span><br><span class="line">Dim langmax,langmin</span><br><span class="line">langmax = 14000</span><br><span class="line">langmin = 12000</span><br><span class="line"></span><br><span class="line">////////////////////////下面不需要修改内容////////////////////////////</span><br><span class="line">////////////////////////下面不需要修改内容////////////////////////////</span><br><span class="line">////////////////////////下面不需要修改内容////////////////////////////</span><br><span class="line">////////////////////////下面不需要修改内容////////////////////////////</span><br><span class="line"></span><br><span class="line">//遍历app数组</span><br><span class="line">For Each value In app</span><br><span class="line">TracePrint &quot;---------------------&quot;</span><br><span class="line">app = value</span><br><span class="line">TracePrint &quot;app当前值&quot;</span><br><span class="line">TracePrint app</span><br><span class="line">TracePrint &quot;---------------------&quot;</span><br><span class="line"></span><br><span class="line">//定义初始已执行次数（已播放数量）</span><br><span class="line">Dim number=0</span><br><span class="line"></span><br><span class="line">//定义视频随机个数</span><br><span class="line">Dim sprndnum=Int(((nummax-(nummin)+1) * Rnd()) + (nummin))</span><br><span class="line">TracePrint &quot;视频随机个数&quot;</span><br><span class="line">TracePrint sprndnum</span><br><span class="line"></span><br><span class="line">//先关闭，再打开app，防止重复后台</span><br><span class="line">KillApp app</span><br><span class="line">KeyPress &quot;Home&quot;</span><br><span class="line">Delay 2000</span><br><span class="line">RunApp app</span><br><span class="line">ShowMessage &quot;正在打开&quot; &amp; app</span><br><span class="line">Delay 5000</span><br><span class="line">ShowMessage &quot;正在打开&quot; &amp; app</span><br><span class="line">Delay 5000</span><br><span class="line">ShowMessage &quot;正在打开&quot; &amp; app</span><br><span class="line">Delay 5000</span><br><span class="line"></span><br><span class="line">//获取屏幕分辨率</span><br><span class="line">Dim screenX,screenY</span><br><span class="line">screenX = GetScreenX()</span><br><span class="line">screenY = GetScreenY()</span><br><span class="line">TracePrint &quot;屏幕分辨率&quot;</span><br><span class="line">TracePrint screenX,screenY</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//定义纵向滑动区间</span><br><span class="line">//滑动起点</span><br><span class="line">Dim x1,y1</span><br><span class="line">x1=screenX/2</span><br><span class="line">y1=screenY/5*4</span><br><span class="line">//滑动终点</span><br><span class="line">Dim x2,y2</span><br><span class="line">x2=screenX/2</span><br><span class="line">y2=screenY/5</span><br><span class="line"></span><br><span class="line">//定义点赞区间</span><br><span class="line">Dim dianzanx,dianzany</span><br><span class="line">dianzanx= screenX/2</span><br><span class="line">dianzany= screenY/3</span><br><span class="line"></span><br><span class="line">//定义播放总时长</span><br><span class="line">Dim langlang</span><br><span class="line"></span><br><span class="line">For sprndnum</span><br><span class="line"></span><br><span class="line">//定义浮动漂移范围随机数</span><br><span class="line">//大范围浮动</span><br><span class="line">Dim fdrnd=Int(((100-(-100)+1) * Rnd()) + (-100))</span><br><span class="line">//小范围浮动</span><br><span class="line">Dim fdrnd1=Int(((10-(-10)+1) * Rnd()) + (-10))</span><br><span class="line"></span><br><span class="line">//点赞时长300~150毫秒</span><br><span class="line">Dim dzlangrnd=Int(((200-(100)+1) * Rnd()) + (100))</span><br><span class="line"></span><br><span class="line">//滑动时长600~300毫秒</span><br><span class="line">Dim hdlangrnd=Int(((600-(300)+1) * Rnd()) + (300))</span><br><span class="line"></span><br><span class="line">//视频时长16000毫秒~6000毫秒</span><br><span class="line">Dim splangrnd=Int(((16000-(6000)+1) * Rnd()) + (6000)) </span><br><span class="line"></span><br><span class="line">//随机滑动浮动坐标</span><br><span class="line">Dim hdrndx1,hdrndy1,hdrndx2,hdrndy2</span><br><span class="line">hdrndx1 =x1 + fdrnd</span><br><span class="line">hdrndy1 =y1 + fdrnd</span><br><span class="line">hdrndx2 =x2 + fdrnd</span><br><span class="line">hdrndy2 =y2 + fdrnd</span><br><span class="line"></span><br><span class="line">//双击点赞</span><br><span class="line">dim dzrndx1,dzrndy1,dzrndx2,dzrndy2</span><br><span class="line">dzrndx1 = dianzanx + fdrnd</span><br><span class="line">dzrndy1 = dianzany + fdrnd </span><br><span class="line">dzrndx2 = dzrndx1 + fdrnd1</span><br><span class="line">dzrndy2 = dzrndy1 + fdrnd1</span><br><span class="line"></span><br><span class="line">//已播放视频数量</span><br><span class="line">number=number+1</span><br><span class="line">TracePrint &quot;=================&quot;</span><br><span class="line">TracePrint &quot;随机视频&quot;</span><br><span class="line">TracePrint sprndnum</span><br><span class="line">TracePrint &quot;已播放视频&quot;</span><br><span class="line">TracePrint number</span><br><span class="line">TracePrint &quot;剩余视频&quot;</span><br><span class="line">TracePrint sprndnum-number</span><br><span class="line"></span><br><span class="line">//////////////////////流程开始</span><br><span class="line">//随机滑动</span><br><span class="line">TouchDown hdrndx1, hdrndy1, 1</span><br><span class="line">TouchMove hdrndx2, hdrndy2, 1, hdlangrnd</span><br><span class="line">TouchUp 1</span><br><span class="line">TracePrint &quot;滑动坐标&quot;</span><br><span class="line">TracePrint hdrndx1, hdrndy1,hdrndx2, hdrndy2</span><br><span class="line">TracePrint &quot;滑动时长&quot;</span><br><span class="line">TracePrint hdlangrnd</span><br><span class="line"></span><br><span class="line">//定义点赞</span><br><span class="line">//播放时长符合14000~12000内随机点赞</span><br><span class="line">If langmax &gt; splangrnd &gt; langmin Then </span><br><span class="line">ShowMessage &quot;随机点赞，剩余&quot; &amp; sprndnum - number &amp; &quot;个，播放时长&quot; &amp; splangrnd * 2 /1000 &amp; &quot;秒，滑动时长&quot; &amp; hdlangrnd /1000&amp; &quot;秒&quot;</span><br><span class="line">TracePrint &quot;-----------------&quot;</span><br><span class="line">TracePrint &quot;符合条件，执行点赞&quot;</span><br><span class="line">TracePrint &quot;视频时长(秒)&quot;</span><br><span class="line">TracePrint splangrnd*2/1000</span><br><span class="line">TracePrint &quot;滑动时长（秒）&quot;</span><br><span class="line">TracePrint hdlangrnd/1000</span><br><span class="line">TracePrint &quot;两次点赞坐标&quot;</span><br><span class="line">TracePrint dzrndx1,dzrndy1</span><br><span class="line">TracePrint dzrndx2,dzrndy2</span><br><span class="line">TracePrint &quot;两次点击间隔&quot;</span><br><span class="line">TracePrint dzlangrnd</span><br><span class="line">TracePrint &quot;-----------------&quot;</span><br><span class="line">//视频时长</span><br><span class="line">Delay splangrnd</span><br><span class="line">//点赞动作</span><br><span class="line">Tap dzrndx1,dzrndy1</span><br><span class="line">Delay dzlangrnd</span><br><span class="line">Tap dzrndx2,dzrndy2</span><br><span class="line">    //点赞视频，双倍播放时长</span><br><span class="line">Delay splangrnd</span><br><span class="line">Else </span><br><span class="line"> //视频时长</span><br><span class="line"> ShowMessage &quot;剩余&quot; &amp; sprndnum - number &amp; &quot;个，播放时长&quot; &amp; splangrnd / 1000 &amp; &quot;秒，滑动时长&quot; &amp; hdlangrnd / 1000 &amp; &quot;秒&quot;</span><br><span class="line">Delay splangrnd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">End If</span><br><span class="line">langlang = langlang + splangrnd</span><br><span class="line"></span><br><span class="line">Next</span><br><span class="line">TracePrint &quot;已观看时长（秒）&quot;</span><br><span class="line">TracePrint langlang</span><br><span class="line"></span><br><span class="line">//观察总时长提醒</span><br><span class="line">ShowMessage &quot;已观看时长&quot; &amp; langlang / 1000 &amp; &quot;秒&quot;</span><br><span class="line">Delay 1000</span><br><span class="line">ShowMessage &quot;已观看时长&quot; &amp; langlang / 1000 &amp; &quot;秒&quot;</span><br><span class="line">Delay 1000</span><br><span class="line">ShowMessage &quot;已观看时长&quot; &amp; langlang / 1000 &amp; &quot;秒&quot;</span><br><span class="line">Delay 1000</span><br><span class="line">ShowMessage &quot;已观看时长&quot; &amp; langlang / 1000 &amp; &quot;秒&quot;</span><br><span class="line">Delay 1000</span><br><span class="line">ShowMessage &quot;已观看时长&quot; &amp; langlang / 1000 &amp; &quot;秒&quot;</span><br><span class="line">Delay 1000</span><br><span class="line"></span><br><span class="line">//关闭app</span><br><span class="line">KeyPress &quot;Home&quot;</span><br><span class="line">Delay Int(((2000)+1000) * Rnd()) + (1000))</span><br><span class="line">KillApp app</span><br><span class="line"></span><br><span class="line">Next</span><br></pre></td></tr></table></figure><p>下面是百度了一天资料，写的脚本，比较粗糙，做个记录，可根据自己手机分辨率重新定位坐标（滑动坐标、点赞坐标），适合新手查看</p><p>刷宝视频app实现功能：随机观看时长（5<del>16秒）、随机从下往上滑切换视频、随机点赞（12</del>14秒范围，点赞视频观看时长延长1倍）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">//返回home键</span><br><span class="line">KeyPress &quot;Home&quot;</span><br><span class="line">Delay 5000</span><br><span class="line"></span><br><span class="line">RunApp &quot;com.jm.video&quot;</span><br><span class="line">ShowMessage &quot;正在打开刷宝短视频&quot;</span><br><span class="line"></span><br><span class="line">Delay 15000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Import &quot;zm.luae&quot; //导入插件,只需执行一次</span><br><span class="line">zm.Init  //初始化插件,只需执行一次</span><br><span class="line"></span><br><span class="line">zm.RndInitSeed() //初始化随机种子，只需执行一次，也可以使用zm.Init()初始化</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//循环刷视频次数</span><br><span class="line">For 100</span><br><span class="line"></span><br><span class="line">// 变量 xxx=滑动起点，下坐标</span><br><span class="line">// 变量 yyy=滑动起点，下坐标</span><br><span class="line">// 变量 xxx1=滑动结束，上坐标</span><br><span class="line">// 变量 yyy1=滑动结束，上坐标</span><br><span class="line"></span><br><span class="line">// 变量 nnn=执行次数，第几个视频</span><br><span class="line">// 变量 ttt=观看时长（毫秒）</span><br><span class="line">// 变量 ht=滑动时长（毫秒）</span><br><span class="line">// 变量 gt=观看时长（秒）</span><br><span class="line"></span><br><span class="line">// 变量 dzx=点赞坐标</span><br><span class="line">// 变量 dzy=点赞坐标</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Dim xxx,yyy,xxx1,yyy1,nnn,ttt,ht,gt,dzx,dzy,ooo</span><br><span class="line"></span><br><span class="line">xxx = Int(((320 - 220 + 1) * Rnd()) + 220)</span><br><span class="line">yyy = Int(((1010 - 980 + 1) * Rnd()) + 980)</span><br><span class="line">xxx1 = Int(((400 - 300 + 1) * Rnd()) + 300)</span><br><span class="line">yyy1 = Int(((260 - 180 + 1) * Rnd()) + 180)</span><br><span class="line"></span><br><span class="line">nnn = nnn+1</span><br><span class="line">ttt = Int(((16000 - 5000 + 1) * Rnd()) + 5000)</span><br><span class="line">ht = Int(((860 - 480 + 1) * Rnd()) + 380)</span><br><span class="line">gt = ttt/1000</span><br><span class="line"></span><br><span class="line">dzx =Int (((671 - 629 + 1) * Rnd()) + 629)</span><br><span class="line">dzy =Int (((666 - 615 + 1) * Rnd()) + 615)</span><br><span class="line">  </span><br><span class="line">//以下是多点触控的例子</span><br><span class="line">TouchDown xxx,yyy, 1</span><br><span class="line"></span><br><span class="line">TouchMove xxx1,yyy1, 1, ht</span><br><span class="line"></span><br><span class="line">TouchUp 1//松开弹起ID=1的触点</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//当前执行点赞</span><br><span class="line"></span><br><span class="line">If 14000&gt;ttt&gt;12000 Then</span><br><span class="line">    TracePrint &quot;条件判断符合被通过!执行点赞&quot;</span><br><span class="line">    ShowMessage &quot;条件判断符合被通过!执行点赞&quot;</span><br><span class="line">//点赞时间点为观看时长减去滑动时间</span><br><span class="line">Delay ttt-ht</span><br><span class="line">Tap dzx,dzy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Traceprint xxx,yyy,xxx1,yyy1</span><br><span class="line">Traceprint  &quot;---------------&quot;</span><br><span class="line">Traceprint &quot;当前执行次数&quot;</span><br><span class="line">Traceprint nnn</span><br><span class="line">Traceprint &quot;&quot;</span><br><span class="line"></span><br><span class="line">Traceprint &quot;观看时长&quot;</span><br><span class="line">Traceprint gt</span><br><span class="line">Traceprint &quot;&quot;</span><br><span class="line"></span><br><span class="line">Traceprint &quot;滑动时长&quot;</span><br><span class="line">Traceprint ht</span><br><span class="line">Traceprint &quot;&quot;</span><br><span class="line"></span><br><span class="line">Traceprint  &quot;---------------&quot;</span><br><span class="line"></span><br><span class="line">ShowMessage &quot;当前第&quot;&amp;nnn&amp;&quot;个视频，观看时长&quot; &amp; gt &amp; &quot;秒x2倍，滑动时长&quot;&amp; ht&amp;&quot;毫秒&quot;</span><br><span class="line">Delay ttt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ELSE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Traceprint xxx,yyy,xxx1,yyy1</span><br><span class="line">Traceprint  &quot;---------------&quot;</span><br><span class="line">Traceprint &quot;当前执行次数&quot;</span><br><span class="line">Traceprint nnn</span><br><span class="line">Traceprint &quot;&quot;</span><br><span class="line"></span><br><span class="line">Traceprint &quot;观看时长&quot;</span><br><span class="line">Traceprint gt</span><br><span class="line">Traceprint &quot;&quot;</span><br><span class="line"></span><br><span class="line">Traceprint &quot;滑动时长&quot;</span><br><span class="line">Traceprint ht</span><br><span class="line">Traceprint &quot;&quot;</span><br><span class="line"></span><br><span class="line">Traceprint  &quot;---------------&quot;</span><br><span class="line"></span><br><span class="line">ShowMessage &quot;当前第&quot;&amp;nnn&amp;&quot;个视频，观看时长&quot; &amp; gt &amp; &quot;秒，滑动时长&quot;&amp; ht&amp;&quot;毫秒&quot;</span><br><span class="line">Delay ttt</span><br><span class="line"></span><br><span class="line">End If</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Delay 5000</span><br><span class="line">ShowMessage &quot;正在关闭app&quot;</span><br><span class="line"></span><br><span class="line">KillApp &quot;com.jm.video&quot;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动刷视频 </tag>
            
            <tag> 按键精灵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>auto.js 实现自动刷视频</title>
      <link href="/posts/48964934.html"/>
      <url>/posts/48964934.html</url>
      
        <content type="html"><![CDATA[<p>auto.js官网：<a href="https://pro.autojs.org/">https://pro.autojs.org/</a></p><p>优势：免ROOT</p><p>弊端：依赖无障碍功能，在内存不足容易闪退，无障碍丢失。</p><p>推荐新手学习B站视频：<a href="https://www.bilibili.com/video/BV19a4y1h7TZ?from=search&seid=8887107538792845661">道无涯auto.js</a></p><p>因为评论和关注需要安卓7.0以上版本，我这里就删除了</p><p>刷宝视频100次，随机点赞脚本，下音量停止脚本！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">auto();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//var a= dialogs.rawInput(&quot;输入刷视频的最大次数&quot;,&quot;100&quot;);</span><br><span class="line"></span><br><span class="line">//app.launchApp(&quot;刷宝短视频&quot;);</span><br><span class="line">//sleep(1000);</span><br><span class="line">//toast(&quot;正在打开刷宝短视频&quot;); </span><br><span class="line">//sleep(8000);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for (var num = 1; num &lt;= 100; num++) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    threads.start(function()&#123;  //开启子线程</span><br><span class="line">        //监听音量键-，关闭所有脚本</span><br><span class="line">        events.observeKey();</span><br><span class="line">        events.onKeyDown(&quot;volume_down&quot;,function(event)&#123;//音量+改为volume_up</span><br><span class="line">          engines.stopAllAndToast();    </span><br><span class="line">         &#125;);</span><br><span class="line">     &#125; )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //观看视频时间随机4~13秒</span><br><span class="line">    var n = random(4000, 13000)</span><br><span class="line">    sleep(n);</span><br><span class="line">    toastLog(&quot;脚本正在刷第&quot; + num + &quot;个视频，该视频的观看时间为&quot; + n / 1000 + &quot;秒~&quot;);</span><br><span class="line">    click(&quot;首页&quot;);</span><br><span class="line">    sleep(1500);</span><br><span class="line">    // 随机点赞提高活跃度，随机观看时间11倍数时点赞</span><br><span class="line">        if (n % 11 == 0) &#123;</span><br><span class="line"></span><br><span class="line">        //随机点赞时间</span><br><span class="line">        sleep(n)</span><br><span class="line">        toastLog(&quot;随机观看时间11倍数时点赞执行点赞提高活跃度&quot;)</span><br><span class="line">        sleep(1000);</span><br><span class="line">        id(&quot;list&quot;).findOne().children().forEach(child =&gt; &#123;</span><br><span class="line">            var target = child.findOne(id(&quot;praise&quot;));</span><br><span class="line">            target.click();</span><br><span class="line">            sleep(1500);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">toastLog(&quot;脚本总共刷了&quot; + (num - 1) + &quot;个视频&quot;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> auto.js </tag>
            
            <tag> 自动刷视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wordpress对接微信小程序</title>
      <link href="/posts/f0bcf144.html"/>
      <url>/posts/f0bcf144.html</url>
      
        <content type="html"><![CDATA[<p>不做开发，但系统运维偶尔需要和开发打交道，那就折腾吧。</p><p>wordpress对接微信小程序，百度+视频用了1小时左右搞定，用“微慕”和“丸子”的开源小程序源码做了测试，当然还有其它的。两个字“简单”，哈哈哈，原谅我这个门外汉的大言不惭，毕竟我只是入门级的。</p><p>简单讲就是：小程序源码+wordpress接口插件</p><h2 id="微慕vs丸子："><a href="#微慕vs丸子：" class="headerlink" title="微慕vs丸子："></a>微慕vs丸子：</h2><p>微慕：简单，简单，什么都简单，功能也简单，毕竟玩的开源的，想玩复杂的可以去微慕官网买专业版的，呵呵呵呵</p><p>丸子：功能多了一点，评论、点赞、审核通知、订阅，也就预示着自己要修改的地方有点多；小程序要调整页面效果，不调整也可以用，就是别人的效果永远不是自己理想的效果。</p><p>最终我还是使用了丸子小程序源码，搞了一天半小程序审核通过，真的要感谢那些开源的大佬和团队，这里顺便记录一下搭建过程。至于微慕的网上教程很多，视频也很多，自己墨迹一下也可以搞定的。</p><p>贴上我的小程序：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-47.png"></p><h2 id="先决条件："><a href="#先决条件：" class="headerlink" title="先决条件："></a>先决条件：</h2><ul><li>域名已备案</li><li>域名已配置ssl（https）</li><li>已搭建wordpress 4.7 以上（4.7 版本以上的源码包含 REST API JSON 接口）</li><li>微信小程序开发者账号（个人、企业都可以）</li></ul><p>如果以上条件没有满足就先去折腾上面的内容，满足条件继续下个步骤。</p><h2 id="下载工具及软件包"><a href="#下载工具及软件包" class="headerlink" title="下载工具及软件包"></a>下载工具及软件包</h2><p>微信开发者工具：<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html">官方下载</a></p><p>丸子wordpress插件：wordpress插件商店下载、或 <a href="https://github.com/dchijack/wp-mini-program">github下载</a></p><p>丸子小程序源码：<a href="https://github.com/dchijack/Travel-Mini-Program">github下载</a></p><p>我修改后的微信小程序源码：<a href="https://gitee.com/ffing/wz_Mini_Program">gitee下载</a></p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ul><li>小程序后台设置</li><li>wordpress后台设置</li><li>小程序源码配置测试</li><li>上传小程序源码，并发布小程序</li></ul><h2 id="一，小程序后台设置"><a href="#一，小程序后台设置" class="headerlink" title="一，小程序后台设置"></a>一，小程序后台设置</h2><p>小程序后台：获取appid和秘钥；设置小程序服务器域名地址。</p><p>扫码登录小程序后台：<a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a></p><p>1.获取appid和秘钥：开发–&gt;开发管理–&gt;开发设置，</p><p>我的appid：wxbec70195f60f5f12</p><p>秘钥：第一次会提示“生成”，切记保存秘钥（服务器不保存秘钥）</p><p>将appid和秘钥保存一下一会要用到！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-45-1024x753.png"></p><p>2.生成完秘钥，往下滑动，就可以看到服务器域名设置，全部写上你的wordpress地址。</p><p>注意：downloadfile地址必须加入腾讯的两个地址，提供微信头像<a href="https://thirdwx.qlogo.cn;https//wx.qlogo.cn">https://thirdwx.qlogo.cn；https://wx.qlogo.cn</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-49.png"></p><h2 id="二，wordpress后台设置"><a href="#二，wordpress后台设置" class="headerlink" title="二，wordpress后台设置"></a>二，wordpress后台设置</h2><p>1.安装丸子wordpress插件</p><p>插件–&gt;安装插件–&gt;关键字“mini Program API”–&gt;安装–&gt;启用后左上角就可以到“小程序”模块了</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-50.png"></p><p>2.配置“丸子小程序”插件</p><p>aaa.小程序授权，输入获取到的appid和秘钥</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-51-1024x700.png"></p><p>bbb.常规设置，我只设置了首图显示的小程序名称和描述</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-52.png"></p><p>ccc.功能扩展，按需勾选，我只是测试什么都没勾选。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-53.png"></p><p>ddd.小程序评论开启审核（小程序审核建议开启）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-62-1024x747.png"></p><h2 id="三，小程序源码配置测试"><a href="#三，小程序源码配置测试" class="headerlink" title="三，小程序源码配置测试"></a>三，小程序源码配置测试</h2><p>导入小程序源码绑定自己的appid，并修改自己的url地址。</p><p>1.打开微信小程序开发工具，</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-54.png"></p><p>2.导入下载的微信小程序源码</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-55.png"></p><p>3.输入上面获取到的自己的appid，并选择本地后，“新建”完成。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-56.png"></p><p>4.修改自己的url地址</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-57-1024x825.png"></p><p>5.修改完成后，“清除全部缓存”—&gt;刷新”编译”，即可看到自己小程序效果。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-58-1024x342.png"></p><p>6.修改源码，如果对代码很熟悉可以直接修改，对于我这种不是很熟悉的人，喜欢使用“可视化”进行修改，当然也需要一定的基础，否则容易把源码搞废。</p><h2 id="四，上传小程序源码"><a href="#四，上传小程序源码" class="headerlink" title="四，上传小程序源码"></a>四，上传小程序源码</h2><p>当本地测试完美后，我们可以上传小程序源码，并在小程序后台发布了。</p><p>1.开发者工具，上传源码。第一次上传默认即可。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-59-1024x331.png"></p><p>2.小程序后台，提交版本审核申请</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-60-1024x540.png"></p><p>3. 关于提交审核的建议</p><p>aaaa.修改自己小程序类目，尽量以 教育 &gt; 教育信息 和 服务工具 &gt; 信息查询</p><p>bbb.关于版本说明尽量体现小程序的功能，不要出现测试字眼。</p><p>ccc.我申请时写的：wordpress对接小程序；文章实时更新、评论、审核；必应图库api</p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>必应图库api-实现每日一图</title>
      <link href="/posts/dea8004a.html"/>
      <url>/posts/dea8004a.html</url>
      
        <content type="html"><![CDATA[<p>利用必应的api我们可以对背景或者首图做每日一图，免去了单调的图片，喜欢折腾的小伙伴可以把桌面背景也做了。</p><p>本站首图和小程序首图，已采用必应图库api接口。</p><p>因根域名跳转CDN，更新必应api地址为：<a href="https://blog.ffing.cn/bing.php">https://blog.ffing.cn/bing.php</a></p><h2 id="搭建必应api服务"><a href="#搭建必应api服务" class="headerlink" title="搭建必应api服务"></a>搭建必应api服务</h2><p>只需php环境下，新建一个php文件，贴入如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$str = file_get_contents(&#x27;http://cn.bing.com/HPImageArchive.aspx?idx=0&amp;n=1&#x27;);   // 从bing获取数据</span><br><span class="line"></span><br><span class="line">if(preg_match(&#x27;/&lt;url&gt;([^&lt;]+)&lt;\/url&gt;/isU&#x27;, $str, $matches)) &#123; // 正则匹配抓取图片url</span><br><span class="line">    $imgurl = &#x27;http://cn.bing.com&#x27;.$matches[1];</span><br><span class="line">&#125; else &#123;  // 如果由于某些原因，没抓取到图片地址</span><br><span class="line">    $imgurl = &#x27;https://qnimg.ffing.cn/wp-content/uploads/2021/03/blank-bj.jpg&#x27;; // 默认图像链接可替换为自己的</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">header(&quot;Location: &#123;$imgurl&#125;&quot;);  // 跳转至目标图像</span><br></pre></td></tr></table></figure><p>bing官网：<a href="https://cn.bing.com/">https://cn.bing.com</a></p><p>效果如下：</p><p><img src="https://blog.ffing.cn/bing.php"></p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bing api </tag>
            
            <tag> 必应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于github actions-天翼云盘自动签到获取免费空间</title>
      <link href="/posts/4890051d.html"/>
      <url>/posts/4890051d.html</url>
      
        <content type="html"><![CDATA[<p>天翼云盘的速度是很香的，无奈空间容量少的可怜，目前的活动就是签到赚空间，一天100M以上，一个月就是3G+。</p><p>测试了一周时间，签到随机最多给过98M，抽奖固定2次，每次50M。</p><p>有大佬做了个github actions的签到脚本很方便，这里记录一下（也有python、go）</p><p>有服务器的推荐github编译好的自动签到，也方便备份文件到天翼云盘。</p><p>python3环境：<a href="https://github.com/Aruelius/cloud189">https://github.com/Aruelius/cloud189</a></p><p>go语言环境：<a href="https://github.com/tickstep/cloudpan189-go">https://github.com/tickstep/cloudpan189-go</a></p><p>Frok仓库：<a href="https://github.com/peng4740/Cloud189Checkin-Actions%E4%BD%9C%E8%80%85%E9%A1%B9%E7%9B%AE%E5%89%8D%E5%87%A0%E5%A4%A9%E5%B7%B2%E5%88%A0%E9%99%A4%EF%BC%8C%E6%97%A0%E8%AE%BA%E6%98%AF%E4%B8%AA%E4%BA%BA%E5%8E%9F%E5%9B%A0%E8%BF%98%E6%98%AFgithub%E5%AE%98%E6%96%B9%E5%8E%9F%E5%9B%A0%EF%BC%8C%E5%8F%8D%E6%AD%A3%E6%98%AF%E6%B2%A1%E4%BA%86%EF%BC%81">https://github.com/peng4740/Cloud189Checkin-Actions作者项目前几天已删除，无论是个人原因还是github官方原因，反正是没了！</a></p><p>这里更新下其它作者的签到脚本，方法一样。这个脚本可以添加企业微信、钉钉、及server酱通知！</p><p>仓库：<a href="https://github.com/Ecalose/Cloud189Checkin-Actions">https://github.com/Ecalose/Cloud189Checkin-Actions</a></p><h2 id="准备："><a href="#准备：" class="headerlink" title="准备："></a>准备：</h2><ul><li>github账号一枚</li><li>天翼云盘账号密码</li></ul><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ul><li>server酱绑定微信获取SCKEY（用于微信消息推送）</li><li>Fork天翼云盘签到项目</li></ul><h2 id="一，server酱绑定微信获取SCKEY"><a href="#一，server酱绑定微信获取SCKEY" class="headerlink" title="一，server酱绑定微信获取SCKEY"></a>一，server酱绑定微信获取SCKEY</h2><p>server酱推送签到消息，可以看到签到消息</p><p>server酱依赖github账号登陆，所以必须可以正常打开github.com才可以登陆(不能打开的可以更换hosts文件，具体百度)</p><p>1，打开server酱地址：<a href="http://sc.ftqq.com/">http://sc.ftqq.com/</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-12.png"></p><p>2.输入github账号密码登陆</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-13.png"></p><p>3.绑定要接受消息的微信</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-15-1024x581.png"></p><p>4.点击“开始绑定”后，会弹出二维码，使用微信扫码进行绑定，绑定公众号“方糖”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-6-1024x711.png"></p><p>5，获取SCKEY，复制保存一下，一会要用到项目中。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-26.png"></p><h2 id="二，Fork天翼云盘签到项目"><a href="#二，Fork天翼云盘签到项目" class="headerlink" title="二，Fork天翼云盘签到项目"></a>二，Fork天翼云盘签到项目</h2><p>1.打开项目地址<a href="https://github.com/Ecalose/Cloud189Checkin-Actions">https://github.com/Ecalose/Cloud189Checkin-Actions</a></p><p>登录自己的github账号（没有的自行注册，不会就百度），fork到自己账号下</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-7-1024x320.png"></p><p>2.回到个人主页，查看刚刚fork的项目，点击进入</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-9.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-25-1024x317.png"></p><p>3.进入项目后，创建秘钥，setting—–&gt; Secrets—–&gt;New repository secret</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-28-1024x607.png"></p><p>4.秘钥变量名及值（Fork的项目中，作者有提到变量的使用）</p><p>USER:天翼网盘账号</p><p>PWD:天翼网盘密码</p><p><strong>WWBOT</strong>：企业微信推送消息(可选)</p><p><strong>DDBOT</strong>：钉钉机器人推送消息(可选)，需要注意验证方式关键字填入“签到”</p><p><strong>SCKEY</strong>：server酱微信推送消息(可选)，注：server酱依赖github账号</p><p>推送消息3选1，也可以全部推送，钉钉推送方法我其它文章有写可以自行搜索，这里以server酱推送为例</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-29-1024x607.png"></p><p>5.添加变量及对应的值</p><p>添加用户变量：USER</p><p>不要忘记点击Add secret，添加完成</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-31-1024x609.png"></p><p>添加密码变量：PWD</p><p>不要忘记点击Add secret，添加完成</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-32-1024x566.png"></p><p>添加server酱sckey：SCKEY</p><p>不要忘记点击Add secret，添加完成</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-33-1024x599.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-34-1024x685.png"></p><p>企业微信机器人和钉钉机器人一样都是基于Webhook协议，获取URL即可（钉钉机器人需要额外定义关键字）</p><p>7.添加完变量，就可以点击右上角“star”，自动运行了。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-30-1024x114.png"></p><p>8.查看脚本状态</p><p>第一次运行actions的小伙伴，需要多一步骤，“启用action”，启用后，关闭star再重复打开，否则脚本不会运行。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-35-1024x326.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-36-1024x437.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-37-1024x525.png"></p><p>9.查看签到状态</p><p>如果变量填写的有推送消息，就看推送消息，没有的就自己下个天翼云盘app，或者网页，手动查看咯</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-38.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-39.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-42.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-41.png"></p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github actions </tag>
            
            <tag> 天翼网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于github action-京东自动签到赚京豆</title>
      <link href="/posts/35c7f64a.html"/>
      <url>/posts/35c7f64a.html</url>
      
        <content type="html"><![CDATA[<p>做运维看开发，呵呵呵。。。</p><p>0成本每天签到，白撸的开心不？</p><p>偶尔看到有大神的京东签到脚本，自己没有开发能力，不能保证脚本的安全性（github开源项目一般都是没问题，毕竟有能力的都能看懂脚本。。。）</p><p>测试了一下，一天20<del>40京豆，从百度看到有一天50</del>70个豆子的，也许是京东的api接口更新导致签到失败吧。反正是白撸的，挂着就行，一个月更新一次京东cookie也没什么问题。</p><p>安全措施：京东设置交易密码、关闭小额免密支付</p><p>fork地址：<a href="https://github.com/xcqlucky/JD/_Sign/_Action">https://github.com/xcqlucky/JD\_Sign\_Action</a></p><p>准备：</p><p>github账号</p><h2 id="流程："><a href="#流程：" class="headerlink" title="流程："></a>流程：</h2><ul><li>京东cookie（手机号登录，cookie最长1个月）</li><li>server酱（微信推送消息）</li><li>github账号（用于fork项目）</li></ul><h2 id="一，获取京东cookie"><a href="#一，获取京东cookie" class="headerlink" title="一，获取京东cookie"></a>一，获取京东cookie</h2><p>获取cookie懒人可以使用浏览器插件。</p><p>我这里使用浏览器调试模式（F12）</p><p>1.浏览器打开<a href="http://m.jd.com,右下角登录/">http://m.jd.com，右下角登录</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-4.png"></p><p>2.尽量手机号登录，cookie的最长时效是1个月，其它方式一般一周。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-5.png"></p><p>3.点击F12（调试模式）——&gt;再F5（刷新）——&gt;找到log.gif开头文件，复制cookie，右键复制保存下，一会要用到项目中。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-24.png"></p><h2 id="二，server酱绑定微信获取SCKEY"><a href="#二，server酱绑定微信获取SCKEY" class="headerlink" title="二，server酱绑定微信获取SCKEY"></a>二，server酱绑定微信获取SCKEY</h2><p>server酱推送签到消息，可以看到签到失败的原因尤其是cookie过期，方便我们更新cookie。</p><p>server酱依赖github账号登陆，所以必须可以正常打开github.com才可以登陆(不能打开的可以更换hosts文件，具体百度)</p><p>1，打开server酱地址：<a href="http://sc.ftqq.com/">http://sc.ftqq.com/</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-12.png"></p><p>2，输入github账号密码登陆</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-13.png"></p><p>3，绑定要接受消息的微信</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-15-1024x581.png"></p><p>4，点击“开始绑定”后，会弹出二维码，使用微信扫码进行绑定，绑定公众号“方糖”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-6-1024x711.png"></p><p>5，获取SCKEY，复制保存一下，一会要用到项目中。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-26.png"></p><h2 id="三，fork项目JD-Sign-Action"><a href="#三，fork项目JD-Sign-Action" class="headerlink" title="三，fork项目JD_Sign_Action"></a>三，fork项目<strong>JD_Sign_Action</strong></h2><p>1，打开项目地址<a href="https://github.com/xcqlucky/JD/_Sign/_Action%EF%BC%8C%E7%99%BB%E5%BD%95%E8%87%AA%E5%B7%B1%E7%9A%84github%E8%B4%A6%E5%8F%B7%EF%BC%88%E6%B2%A1%E6%9C%89%E7%9A%84%E8%87%AA%E8%A1%8C%E6%B3%A8%E5%86%8C%EF%BC%8C%E4%B8%8D%E4%BC%9A%E5%B0%B1%E7%99%BE%E5%BA%A6%EF%BC%89%EF%BC%8Cfork%E5%88%B0%E8%87%AA%E5%B7%B1%E8%B4%A6%E5%8F%B7%E4%B8%8B">https://github.com/xcqlucky/JD\_Sign\_Action，登录自己的github账号（没有的自行注册，不会就百度），fork到自己账号下</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-8-1024x387.png"></p><p>2，点击右上角自己的小头像，回到自己的主页</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-9.png"></p><p>3，点击进入刚fork的项目<strong>JD_Sign_Action</strong></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-10-1024x270.png"></p><p>4，进入项目点击setting，我们添加秘钥</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-11-1024x386.png"></p><p>5，创建2个秘钥</p><p>第一个秘钥JD_COOKIE，用来京东签到，必须！否则就没有意义了。</p><p>秘钥名：JD_COOKIE</p><p>秘钥值：我们获取的京东cookie</p><p>第二个秘钥PUSH_KEY，用来微信推送签到是否成功的消息</p><p>秘钥名：PUSH_KEY</p><p>秘钥值：server酱获取的sckey</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-17-1024x599.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-18-1024x556.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-19-1024x587.png"></p><p>6，添加完秘钥，点击“star”就可以自动运行</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-20-1024x535.png"></p><p>7，查看脚本执行状态</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-21-1024x441.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-22.png"></p><p>8，脚本50秒左右执行完毕后，你的微信会收到推送消息，你查看消息详情，签到成功或失败的原因。</p><p>注：cookie过期，需要将JD_COOKIE秘钥update新的cookie</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-23.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-64.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-16.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-27.png"></p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 京东签到 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx--实现http(80)自动https(443)</title>
      <link href="/posts/d9372127.html"/>
      <url>/posts/d9372127.html</url>
      
        <content type="html"><![CDATA[<p>客户端访问http(80)—–&gt;https(443)</p><p>可以是同一端口也可以不是不同端口，（同一端口的跳转可以看我另外一篇文章：<a href="https://blog.ffing.cn/wp-admin/post.php?post=775&action=edit">Nginx-实现同一端口HTTP跳转HTTPS(497错误码)</a>），这里写下80—–&gt;443</p><p>test.ffing.cn.conf配置内容如下:</p><p>(可以是两个server写在一个conf文件，也可以2个server写2个conf文件，自己决定)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#监听80，实现自动跳转到https</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name test.ffing.cn;</span><br><span class="line">rewrite ^(.*)$ https://$host$1 permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#监听443，目录</span><br><span class="line">server &#123;</span><br><span class="line">listen 443 ssl;</span><br><span class="line">server_name test.ffing.cn;</span><br><span class="line">#ssl配置</span><br><span class="line">ssl_certificate /opt/crt/nps/nps.ffing.cn.pem;</span><br><span class="line">ssl_certificate_key /opt/crt/nps/nps.ffing.cn.key;</span><br><span class="line">ssl_protocols TLSv1.1 TLSv1.2;</span><br><span class="line">ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line">ssl_session_cache shared:SSL:10m;</span><br><span class="line">ssl_session_timeout 10m;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">root /usr/share/nginx/test;</span><br><span class="line">index index.html</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> 80跳转443 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx 根域名跳转www</title>
      <link href="/posts/e0719ef9.html"/>
      <url>/posts/e0719ef9.html</url>
      
        <content type="html"><![CDATA[<p>根域名和二级域名都可以解析到不同的地址，通常情况我们都是把www作为门户域名。</p><h2 id="效果："><a href="#效果：" class="headerlink" title="效果："></a>效果：</h2><p>实现客户端访问无论访问根域名或www都跳转到www二级域名，即根域名—&gt;www二级域名。</p><h2 id="一，域名服务商设置域名解析"><a href="#一，域名服务商设置域名解析" class="headerlink" title="一，域名服务商设置域名解析"></a>一，域名服务商设置域名解析</h2><p>ffing.cn—&gt;解析到我的云服务器(挂的有我的其它服务)</p><p><a href="http://www.ffing.cn--->解析到我的CDN（只做门户主页）">www.ffing.cn---&gt;解析到我的CDN（只做门户主页）</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/06/image-1-1024x312.png"></p><h2 id="二，配置nginx虚拟主机文件"><a href="#二，配置nginx虚拟主机文件" class="headerlink" title="二，配置nginx虚拟主机文件"></a>二，配置nginx虚拟主机文件</h2><p>可以在nginx.conf中修改，将监听80端口的server字段修改即可。</p><p>重定向：使用rewrite或retun</p><p>如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#第一种：rewrite直接指定协议、域名</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name  ffing.cn;</span><br><span class="line">rewrite ^(.*) https://www.ffing.cn permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#第二种调用server_name参数($scheme原有协议)</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name  ffing.cn;</span><br><span class="line">rewrite ^(.*) $scheme://www.$server_name$1 permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#第三种retun 301（$request_uri是域名后的子目录地址这里加不加无所谓）</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name  ffing.cn;</span><br><span class="line">return 301 $scheme://www.$server_name$request_uri; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#第四种跳转https（通过$scheme判断）</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name  ffing.cn;</span><br><span class="line">   if ($scheme = &quot;http&quot;) &#123;</span><br><span class="line">        return 301 https://$server_name$request_uri;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#第五章rewrite到$host(这是跳转到解析IP，请根据情况慎用)</span><br><span class="line">rewrite ^(.*)$ https://$host$1 permanent;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> www </tag>
            
            <tag> 根域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos -安装Memcached服务端和php扩展（memcache | memcached)</title>
      <link href="/posts/3f501af3.html"/>
      <url>/posts/3f501af3.html</url>
      
        <content type="html"><![CDATA[<p>Memcache是一个高性能的分布式的内存对象缓存系统，通过在内存里维护一个统一的巨大的hash表，它能够用来存储各种格式的数据，包括图像、视频、文件以及数据库检索的结果等。简单的说就是将数据调用到内存中，然后从内存中读取，从而大大提高读取速度。</p><p>我的环境centos7，nginx+mysql+php</p><ul><li><p>编译安装</p><ul><li>一，安装服务端：Memcached</li><li>二，启动服务端：Memcached</li><li>三，安装客户端：php扩展（memcache memcached)</li><li>四，配置客户端：php扩展（memcache memcached)</li><li>五，查看php扩展（memcache memcached)</li></ul></li><li><p>yum安装Memcached</p></li></ul><h2 id="————编译安装————"><a href="#————编译安装————" class="headerlink" title="————编译安装————"></a>————<strong>编译安装————</strong></h2><h4 id="一，安装服务端：Memcached"><a href="#一，安装服务端：Memcached" class="headerlink" title="一，安装服务端：Memcached"></a>一，安装服务端：Memcached</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查看yum可安装的Memcached</span><br><span class="line">yum list memcached*</span><br><span class="line">#通过yum安装memcached、memcached-devel</span><br><span class="line">yum -y install memcached memcached-devel</span><br></pre></td></tr></table></figure><h4 id="二，启动服务端：Memcached"><a href="#二，启动服务端：Memcached" class="headerlink" title="二，启动服务端：Memcached"></a>二，启动服务端：Memcached</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#memcached参数解析：memcached -d -m 1024m -p 11211 -u root  </span><br><span class="line"># -d 守护进程后台运行</span><br><span class="line"># -m 缓存数据的最大内存（默认64MB，该值必须小于物理内存） </span><br><span class="line"># -p 监听TCP端口号（默认端口11211）</span><br><span class="line"># -u 启动用户(必须存在的用户)</span><br><span class="line"># -c 并发数（默认1024，同时允许多少客户端连接）</span><br><span class="line"># -l 监听IP（默认任意IP，指定IP后，只能指定IP连接）</span><br><span class="line">#根据自己需求，匹配参数启动，这里默认启动</span><br><span class="line">memcached -d -u root</span><br><span class="line">#查看memcached是否启动成功</span><br><span class="line">ps -ef grep memcached</span><br></pre></td></tr></table></figure><h4 id="三，安装客户端：php扩展（memcache-memcached"><a href="#三，安装客户端：php扩展（memcache-memcached" class="headerlink" title="三，安装客户端：php扩展（memcache memcached)"></a>三，安装客户端：php扩展（memcache memcached)</h4><p>1.下载源码包，根据需求下载</p><p>memcache源码地址：<a href="https://pecl.php.net/package/memcache">https://pecl.php.net/package/memcache</a></p><p>memcached源码地址：<a href="https://pecl.php.net/package/memcached">https://pecl.php.net/package/memcached</a></p><p>2.安装编译工具</p><p>安装编译工具（gcc、gcc-c++、make、cmake、automake、autoconf）和依赖（zlib-devel、libevent-devel、libmemcached、libmemcached-devel）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ make cmake automake autoconf  zlib-devel libevent-devel libmemcached、libmemcached-devel</span><br></pre></td></tr></table></figure><p>3.编译安装（memcachememcached同样的操作）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#进入memcachememcached解压目录</span><br><span class="line">cd 解压目录</span><br><span class="line">#执行/usr/bin/phpize生成configura</span><br><span class="line">/usr/bin/phpize</span><br><span class="line">#获取php-config路径</span><br><span class="line">which php-config</span><br><span class="line">#生产makefile文件:</span><br><span class="line">./configura --with-php-config=你的php-config路径</span><br><span class="line">#编译安装</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">#安装完成后，查看.so是否存在</span><br><span class="line">ll /usr/lib64/php/modules/  grep memcache</span><br></pre></td></tr></table></figure><h4 id="四，配置php扩展（memcache-memcached"><a href="#四，配置php扩展（memcache-memcached" class="headerlink" title="四，配置php扩展（memcache memcached)"></a>四，配置php扩展（memcache memcached)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#配置php.ini添加扩展</span><br><span class="line">vi /etc/php.ini</span><br><span class="line">#最后追加extension</span><br><span class="line">extension=memcache.so</span><br><span class="line">extension=memcached.so</span><br></pre></td></tr></table></figure><h4 id="五，查看php扩展（memcache-memcached"><a href="#五，查看php扩展（memcache-memcached" class="headerlink" title="五，查看php扩展（memcache memcached)"></a>五，查看php扩展（memcache memcached)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#nginx+php需要重启php-fpm (apache+php需要重启apache)</span><br><span class="line">systemctl restart php-fpm</span><br><span class="line">#查看扩展是否失效</span><br><span class="line">php -m grep memcache</span><br></pre></td></tr></table></figure><p>web测试创建phpinfo.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><p>———————————————————————————————————————————</p><h2 id="————yum安装————"><a href="#————yum安装————" class="headerlink" title="————yum安装————"></a><strong>————yum安装————</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#安装libevent库</span><br><span class="line">yum -y install libevent libevent-deve</span><br><span class="line">#安装memcache</span><br><span class="line">yum -y install memcached</span><br><span class="line">#安装libmemcached扩展</span><br><span class="line">yum -y install libmemcached</span><br><span class="line">#安装php-pecl-memcache扩展</span><br><span class="line">#（如出现php-common冲突，请看最后面问题部分）</span><br><span class="line">yum -y install php-pecl-memcache </span><br><span class="line">#查看php支持模块</span><br><span class="line">php -m  grep memcache</span><br><span class="line">#将memcache追加到php.ini</span><br><span class="line">echo &#x27;extension=memcache.so&#x27; &gt;&gt; /etc/php.ini</span><br><span class="line"></span><br><span class="line">#重启php</span><br><span class="line">systemctl restart php-fpm </span><br></pre></td></tr></table></figure><h2 id="问题：php72w-common-conflicts-with-php-common-5-4-16-46-el7-x86-64-报错的解决"><a href="#问题：php72w-common-conflicts-with-php-common-5-4-16-46-el7-x86-64-报错的解决" class="headerlink" title="问题：php72w-common conflicts with php-common-5.4.16-46.el7.x86_64 报错的解决"></a>问题：php72w-common conflicts with php-common-5.4.16-46.el7.x86_64 报错的解决</h2><p>原因：服务器装的php7.2版本,而yum源php版本过低，导致的错误。</p><p>解决方法：更新yum源，找到对应的php版本源即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#安装epel源</span><br><span class="line">yum -y install epel-release</span><br><span class="line">#安装remi的centos7的源</span><br><span class="line">rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm</span><br><span class="line">#启用对应自己php版本的remi源</span><br><span class="line">vi /etc/yum.repos.d/remi-php《你的php版本号》.repo</span><br><span class="line">###修改：【remi】源 enable=1###</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/11/image-67.png"></p><h2 id="拓展：web管理之memadmin"><a href="#拓展：web管理之memadmin" class="headerlink" title="拓展：web管理之memadmin"></a>拓展：web管理之memadmin</h2><p>memadmin仅支持memcache扩展</p><p>官网：<a href="http://www.junopen.com/memadmin/">http://www.junopen.com/memadmin/</a></p><p>通过config.php文件：修改帐号、密码，默认都是admin</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Memcache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos 搭建Samba共享服务</title>
      <link href="/posts/13554879.html"/>
      <url>/posts/13554879.html</url>
      
        <content type="html"><![CDATA[<p>网盘搞过了，今天搞下Samba，方便windows通过资源管理器直接访问。</p><p>流程</p><ul><li>一，关闭Selinux</li><li>二，防火墙放行端口</li><li>三，安装samba</li><li>四，创建用户及共享目录</li><li>五，配置samba</li><li>六，启动、测试</li></ul><h2 id="一，关闭selinux"><a href="#一，关闭selinux" class="headerlink" title="一，关闭selinux"></a>一，关闭selinux</h2><p>#临时关闭selinux<br>setenforce 0<br>#永久关闭selinux<br>sed -i “s&#x2F;SELINUX&#x3D;enforcing&#x2F;SELINUX&#x3D;disable&#x2F;g” &#x2F;etc&#x2F;selinux&#x2F;config</p><h2 id="二，防火墙放行端口"><a href="#二，防火墙放行端口" class="headerlink" title="二，防火墙放行端口"></a>二，防火墙放行端口</h2><p>#放行端口TCP:139&#x2F;445 和 UDP:137&#x2F;138<br>firewall-cmd –zone&#x3D;public –add-port&#x3D;139&#x2F;tcp –permanent<br>firewall-cmd –zone&#x3D;public –add-port&#x3D;445&#x2F;tcp –permanent<br>firewall-cmd –zone&#x3D;public –add-port&#x3D;137&#x2F;udp –permanent<br>firewall-cmd –zone&#x3D;public –add-port&#x3D;138&#x2F;udp –permanent<br>#重新加载防火墙<br>firewall-cmd –reload</p><h2 id="三，安装samba"><a href="#三，安装samba" class="headerlink" title="三，安装samba"></a>三，安装samba</h2><p>#通过yum安装<br>yum -y install samba*</p><h2 id="四，创建用户及共享目录"><a href="#四，创建用户及共享目录" class="headerlink" title="四，创建用户及共享目录"></a>四，创建用户及共享目录</h2><p>a.创建samba用户及密码</p><p>#创建用户名ffing<br>useradd ffing<br>#设置密码<br>smbpasswd -a ffing</p><p>b,创建samba共享目录 &#x2F;ffing_share ，并设置目录所有者</p><p>#创建访问目录&#x2F;ffing_share<br>mkdir &#x2F;ffing_share<br>#设置目录所有者和组（具备读写权限）<br>chown -R ffing:ffing &#x2F;ffing_share</p><h2 id="五，配置samba"><a href="#五，配置samba" class="headerlink" title="五，配置samba"></a>五，配置samba</h2><p>修改配置文件：&#x2F;etc&#x2F;samba&#x2F;smb.conf</p><p>配置内容如下：（只留下global和你的共享名）</p><p>[global]<br>     workgroup &#x3D; SAMBA<br>     security &#x3D; user<br>     passdb backend &#x3D; tdbsam<br>     printing &#x3D; cups<br>     printcap name &#x3D; cups<br>     load printers &#x3D; yes<br>     cups options &#x3D; raw</p><p>#共享名(根据自己需求更改)<br> [ffing_share]<br>         #共享目录（绝对路径）<br>         path &#x3D; &#x2F;ffing_share<br>         browseable &#x3D; yes<br>         guest ok &#x3D;yes<br>         writable &#x3D;yes<br>         create mask &#x3D;0644<br>         directory mask &#x3D;0755</p><h2 id="六，启动、测试"><a href="#六，启动、测试" class="headerlink" title="六，启动、测试"></a>六，启动、测试</h2><p>启动smb服务：systemctl start smb</p><p>smb开机启动：systemctl enable smb</p><p>windows测试：</p><p>注：如果更新过smb帐号密码或者切换账号，需清除windows登录信息才可正常访问</p><p>windows清除登录信息命令：net use * &#x2F;del &#x2F;y</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-14.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-16.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-17-1024x590.png"></p><p>MAC测试</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-18.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-19.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-20.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-21.png"></p><h2 id="其他"><a href="#其他" class="headerlink" title="#其他"></a>#其他</h2><p>列出samba用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdbedit -L</span><br></pre></td></tr></table></figure><p>smbpasswd语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">smbpasswd [option] username</span><br><span class="line">#options:</span><br><span class="line">-a 添加用户 </span><br><span class="line">-x 删除用户</span><br><span class="line">-d 冻结用户</span><br><span class="line">-n 密码置空</span><br></pre></td></tr></table></figure><p>smb.conf详解（复制过来的有待验证）</p><p>Samba配置文件常用参数详解<br> Samba的主配置文件叫smb.conf，默认在&#x2F;etc&#x2F;samba&#x2F;目录下。<br> smb.conf含有多个段，每个段由段名开始，直到下个段名。每个段名放在方括号中间。每段的参数的格式是：名称&#x3D;指。配置文件中一行一个段名和参数，段名和参数名不分大小写。<br> 除了[global]段外，所有的段都可以看作是一个共享资源。段名是该共享资源的名字，段里的参数是该共享资源的属性。<br> Samba安装好后，使用testparm命令可以测试smb.conf配置是否正确。使用testparm –v命令可以详细的列出smb.conf支持的配置参数。<br> 全局参数：<br> &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Global Settings &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br> [global]<br> config file &#x3D; &#x2F;usr&#x2F;local&#x2F;samba&#x2F;lib&#x2F;smb.conf.%m<br> 说明：config file可以让你使用另一个配置文件来覆盖缺省的配置文件。如果文件 不存在，则该项无效。这个参数很有用，可以使得samba配置更灵活，可以让一台samba服务器模拟多台不同配置的服务器。比如，你想让PC1（主机名）这台电脑在访问Samba Server时使用它自己的配置文件，那么先在&#x2F;etc&#x2F;samba&#x2F;host&#x2F;下为PC1配置一个名为smb.conf.pc1的文件，然后在smb.conf中加入：config file &#x3D; &#x2F;etc&#x2F;samba&#x2F;host&#x2F;smb.conf.%m。这样当PC1请求连接Samba Server时，smb.conf.%m就被替换成smb.conf.pc1。这样，对于PC1来说，它所使用的Samba服务就是由smb.conf.pc1定义的，而其他机器访问Samba Server则还是应用smb.conf。<br> workgroup &#x3D; WORKGROUP<br> 说明：设定 Samba Server 所要加入的工作组或者域。<br> server string &#x3D; Samba Server Version %v<br> 说明：设定 Samba Server 的注释，可以是任何字符串，也可以不填。宏%v表示显示Samba的版本号。<br> netbios name &#x3D; smbserver<br> 说明：设置Samba Server的NetBIOS名称。如果不填，则默认会使用该服务器的DNS名称的第一部分。netbios name和workgroup名字不要设置成一样了。<br> interfaces &#x3D; lo eth0 192.168.12.2&#x2F;24 192.168.13.2&#x2F;24<br> 说明：设置Samba Server监听哪些网卡，可以写网卡名，也可以写该网卡的IP地址。<br> hosts allow &#x3D; 127. 192.168.1. 192.168.10.1<br> 说明：表示允许连接到Samba Server的客户端，多个参数以空格隔开。可以用一个IP表示，也可以用一个网段表示。hosts deny 与hosts allow 刚好相反。<br> 例如：hosts allow&#x3D;172.17.2.EXCEPT172.17.2.50<br> 表示容许来自172.17.2._._的主机连接，但排除172.17.2.50<br> hosts allow&#x3D;172.17.2.0&#x2F;255.255.0.0<br> 表示容许来自172.17.2.0&#x2F;255.255.0.0子网中的所有主机连接<br> hosts allow&#x3D;M1，M2<br> 表示容许来自M1和M2两台计算机连接<br> hosts allow&#x3D;@xq<br> 表示容许来自XQ网域的所有计算机连接<br> max connections &#x3D; 0<br> 说明：max connections用来指定连接Samba Server的最大连接数目。如果超出连接数目，则新的连接请求将被拒绝。0表示不限制。<br> deadtime &#x3D; 0<br> 说明：deadtime用来设置断掉一个没有打开任何文件的连接的时间。单位是分钟，0代表Samba Server不自动切断任何连接。<br> time server &#x3D; yes&#x2F;no<br> 说明：time server用来设置让nmdb成为windows客户端的时间服务器。<br> log file &#x3D; &#x2F;var&#x2F;log&#x2F;samba&#x2F;log.%m<br> 说明：设置Samba Server日志文件的存储位置以及日志文件名称。在文件名后加个宏%m（主机名），表示对每台访问Samba Server的机器都单独记录一个日志文件。如果pc1、pc2访问过Samba Server，就会在&#x2F;var&#x2F;log&#x2F;samba目录下留下log.pc1和log.pc2两个日志文件。<br> max log size &#x3D; 50<br> 说明：设置Samba Server日志文件的最大容量，单位为kB，0代表不限制。<br> security &#x3D; user<br> 说明：设置用户访问Samba Server的验证方式，一共有四种验证方式。<br> share：用户访问Samba Server不需要提供用户名和口令, 安全性能较低。<br> user：Samba Server共享目录只能被授权的用户访问,由Samba Server负责检查账号和密码的正确性。账号和密码要在本Samba Server中建立。<br> server：依靠其他Windows NT&#x2F;2000或Samba Server来验证用户的账号和密码,是一种代理验证。此种安全模式下,系统管理员可以把所有的Windows用户和口令集中到一个NT系统上,使用Windows NT进行Samba认证, 远程服务器可以自动认证全部用户和口令,如果认证失败,Samba将使用用户级安全模式作为替代的方式。<br> domain：域安全级别,使用主域控制器(PDC)来完成认证。<br> passdb backend &#x3D; tdbsam<br> 说明：passdb backend就是用户后台的意思。目前有三种后台：smbpasswd、tdbsam和ldapsam。sam应该是security account manager（安全账户管理）的简写。<br> 1.smbpasswd：该方式是使用smb自己的工具smbpasswd来给系统用户（真实<br> 用户或者虚拟用户）设置一个Samba密码，客户端就用这个密码来访问Samba的资源。smbpasswd文件默认在&#x2F;etc&#x2F;samba目录下，不过有时候要手工建立该文件。<br> 2.tdbsam：该方式则是使用一个数据库文件来建立用户数据库。数据库文件叫passdb.tdb，默认在&#x2F;etc&#x2F;samba目录下。passdb.tdb用户数据库可以使用smbpasswd –a来建立Samba用户，不过要建立的Samba用户必须先是系统用户。我们也可以使用pdbedit命令来建立Samba账户。pdbedit命令的参数很多，我们列出几个主要的。<br> pdbedit –a username：新建Samba账户。<br> pdbedit –x username：删除Samba账户。<br> pdbedit –L：列出Samba用户列表，读取passdb.tdb数据库文件。<br> pdbedit –Lv：列出Samba用户列表的详细信息。<br> pdbedit –c “[D]” –u username：暂停该Samba用户的账号。<br> pdbedit –c “[]” –u username：恢复该Samba用户的账号。<br> 3.ldapsam：该方式则是基于LDAP的账户管理方式来验证用户。首先要建立LDAP服务，然后设置“passdb backend &#x3D; ldapsam:ldap:&#x2F;&#x2F;LDAP Server”<br> encrypt passwords &#x3D; yes&#x2F;no<br> 说明：是否将认证密码加密。因为现在windows操作系统都是使用加密密码，所以一般要开启此项。不过配置文件默认已开启。<br> smb passwd file &#x3D; &#x2F;etc&#x2F;samba&#x2F;smbpasswd<br> 说明：用来定义samba用户的密码文件。smbpasswd文件如果没有那就要手工新建。<br> username map &#x3D; &#x2F;etc&#x2F;samba&#x2F;smbusers<br> 说明：用来定义用户名映射，比如可以将root换成administrator、admin等。不过要事先在smbusers文件中定义好。比如：root &#x3D; administrator admin，这样就可以用administrator或admin这两个用户来代替root登陆Samba Server，更贴近windows用户的习惯。<br> guest account &#x3D; nobody<br> 说明：用来设置guest用户名。<br> socket options &#x3D; TCP_NODELAY SO_RCVBUF&#x3D;8192 SO_SNDBUF&#x3D;8192<br> 说明：用来设置服务器和客户端之间会话的Socket选项，可以优化传输速度。<br> domain master &#x3D; yes&#x2F;no<br> 说明：设置Samba服务器是否要成为网域主浏览器，网域主浏览器可以管理跨子网域的浏览服务。<br> local master &#x3D; yes&#x2F;no<br> 说明：local master用来指定Samba Server是否试图成为本地网域主浏览器。如果设为no，则永远不会成为本地网域主浏览器。但是即使设置为yes，也不等于该Samba Server就能成为主浏览器，还需要参加选举。<br> preferred master &#x3D; yes&#x2F;no<br> 说明：设置Samba Server一开机就强迫进行主浏览器选举，可以提高Samba Server成为本地网域主浏览器的机会。如果该参数指定为yes时，最好把domain master也指定为yes。使用该参数时要注意：如果在本Samba Server所在的子网有其他的机器（不论是windows NT还是其他Samba Server）也指定为首要主浏览器时，那么这些机器将会因为争夺主浏览器而在网络上大发广播，影响网络性能。<br> 如果同一个区域内有多台Samba Server，将上面三个参数设定在一台即可。<br> os level &#x3D; 200<br> 说明：设置samba服务器的os level。该参数决定Samba Server是否有机会成为本地网域的主浏览器。os level从0到255，winNT的os level是32，win95&#x2F;98的os level是1。Windows 2000的os level是64。如果设置为0，则意味着Samba Server将失去浏览选择。如果想让Samba Server成为PDC，那么将它的os level值设大些。<br> domain logons &#x3D; yes&#x2F;no<br> 说明：设置Samba Server是否要做为本地域控制器。主域控制器和备份域控制器都需要开启此项。<br> logon . &#x3D; %u.bat<br> 说明：当使用者用windows客户端登陆，那么Samba将提供一个登陆档。如果设置成%u.bat，那么就要为每个用户提供一个登陆档。如果人比较多，那就比较麻烦。可以设置成一个具体的文件名，比如start.bat，那么用户登陆后都会去执行start.bat，而不用为每个用户设定一个登陆档了。这个文件要放置在[netlogon]的path设置的目录路径下。<br> wins support &#x3D; yes&#x2F;no<br> 说明：设置samba服务器是否提供wins服务。<br> wins server &#x3D; wins服务器IP地址<br> 说明：设置Samba Server是否使用别的wins服务器提供wins服务。<br> wins proxy &#x3D; yes&#x2F;no<br> 说明：设置Samba Server是否开启wins代理服务。<br> dns proxy &#x3D; yes&#x2F;no<br> 说明：设置Samba Server是否开启dns代理服务。<br> load printers &#x3D; yes&#x2F;no<br> 说明：设置是否在启动Samba时就共享打印机。<br> printcap name &#x3D; cups<br> 说明：设置共享打印机的配置文件。<br> printing &#x3D; cups<br> 说明：设置Samba共享打印机的类型。现在支持的打印系统有：bsd, sysv, plp, lprng, aix, hpux, qnx<br> 共享参数：<br> &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Share Definitions &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br> [共享名]<br> comment &#x3D; 任意字符串<br> 说明：comment是对该共享的描述，可以是任意字符串。<br> path &#x3D; 共享目录路径<br> 说明：path用来指定共享目录的路径。可以用%u、%m这样的宏来代替路径里的unix用户和客户机的Netbios名，用宏表示主要用于[homes]共享域。例如：如果我们不打算用home段做为客户的共享，而是在&#x2F;home&#x2F;share&#x2F;下为每个Linux用户以他的用户名建个目录，作为他的共享目录，这样path就可以写成：path &#x3D; &#x2F;home&#x2F;share&#x2F;%u; 。用户在连接到这共享时具体的路径会被他的用户名代替，要注意这个用户名路径一定要存在，否则，客户机在访问时会找不到网络路径。同样，如果我们不是以用户来划分目录，而是以客户机来划分目录，为网络上每台可以访问samba的机器都各自建个以它的netbios名的路径，作为不同机器的共享资源，就可以这样写：path &#x3D; &#x2F;home&#x2F;share&#x2F;%m 。<br> browseable &#x3D; yes&#x2F;no<br> 说明：browseable用来指定该共享是否可以浏览。<br> writable &#x3D; yes&#x2F;no<br> 说明：writable用来指定该共享路径是否可写。<br> available &#x3D; yes&#x2F;no<br> 说明：available用来指定该共享资源是否可用。<br> admin users &#x3D; 该共享的管理者<br> 说明：admin users用来指定该共享的管理员（对该共享具有完全控制权限）。在samba 3.0中，如果用户验证方式设置成“security&#x3D;share”时，此项无效。<br> 例如：admin users &#x3D;bobyuan，jane（多个用户中间用逗号隔开）。<br> valid users &#x3D; 允许访问该共享的用户<br> 说明：valid users用来指定允许访问该共享资源的用户。<br> 例如：valid users &#x3D; bobyuan，@bob，@tech（多个用户或者组中间用逗号隔开，如果要加入一个组就用“@+组名”表示。）<br> invalid users &#x3D; 禁止访问该共享的用户<br> 说明：invalid users用来指定不允许访问该共享资源的用户。<br> 例如：invalid users &#x3D; root，@bob（多个用户或者组中间用逗号隔开。）<br> write list &#x3D; 允许写入该共享的用户<br> 说明：write list用来指定可以在该共享下写入文件的用户。<br> 例如：write list &#x3D; bobyuan，@bob<br> public &#x3D; yes&#x2F;no<br> 说明：public用来指定该共享是否允许guest账户访问。<br> guest ok &#x3D; yes&#x2F;no<br> 说明：意义同“public”。</p><p>贴个我原来的脚本，可正常使用！</p><p>因为当时写的仓促，本来想再完善一下，放gitee上，一直没时间整理，先贴上，如果某天我再用的话，再完善吧。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#about:ffing.cn</span><br><span class="line"></span><br><span class="line">#samba共享基目录：默认/Share_Dir，可自行修改</span><br><span class="line">#本脚本创建的共享目录都在基目录之下</span><br><span class="line">#牵涉共享组成员管理，放弃!!中文共享名!!</span><br><span class="line"></span><br><span class="line">#基目录</span><br><span class="line">SMBDIR=/Share_Dir</span><br><span class="line">mkdir -p $SMBDIR</span><br><span class="line"></span><br><span class="line">############################  函数start ############################</span><br><span class="line">#创建系统用户</span><br><span class="line">FUNUSERADD()&#123;</span><br><span class="line">cat /etc/passwdawk -F&quot;:&quot; &#x27;&#123;print $1&#125;&#x27;grep &quot;^$USERNAME$&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [  $? -eq 0 ];then</span><br><span class="line">FUNPASSWD123456</span><br><span class="line">echo -e &quot;\e[32m $USERNAME 用户名创建完成，初始密码123456\e[0m&quot;</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">useradd -M -n -s /sbin/nologin $USERNAME  &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [  $? -eq 0 ];then</span><br><span class="line">FUNPASSWD123456</span><br><span class="line">echo -e &quot;\e[32m $USERNAME 用户名创建完成，初始密码123456\e[0m&quot;</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\e[31m $USERNAME 用户名创建失败，请输入有效的用户名\e[0m&quot;</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#初始密码123456</span><br><span class="line">FUNPASSWD123456()&#123;</span><br><span class="line">smbpasswd -a $USERNAME &lt;&lt;EOF  &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">123456</span><br><span class="line">123456</span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#用户追加组</span><br><span class="line">FUNDANDGROUP()&#123;</span><br><span class="line">usermod -a -G  $GROUP $USERNAME</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#判断smb用户是否存在</span><br><span class="line">FUNCHECKUSERNAMEYES()&#123;</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">read -p &quot;请输入要修改密码的用户名：&quot; USERNAME</span><br><span class="line">pdbedit -L cut -d&quot;:&quot; -f1grep &quot;^$USERNAME$&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [  $? -eq 0 ];then</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\e[31m 错误用户名不存在，请输入存在的用户名！\e[0m&quot;</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">FUNCHECKUSERNAMENO()&#123;</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">read -p &quot;请输入新的用户名：&quot; USERNAME</span><br><span class="line">if [ ! -z $USERNAME ];then</span><br><span class="line">pdbedit -L cut -d&quot;:&quot; -f1grep &quot;^$USERNAME$&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [  $? -eq 0 ];then</span><br><span class="line">echo -e &quot;\e[31m 错误用户名已存在，请输入新的用户名！\e[0m&quot;</span><br><span class="line">else</span><br><span class="line">break</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#输入SMB密码</span><br><span class="line">FUNPASSWD()&#123;</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">read -p &quot;请输入密码：&quot; PASSWD</span><br><span class="line">if [ -z $PASSWD  ];then</span><br><span class="line">echo -e &quot;\e[31m 输入错误，密码不能为空！ \e[0m&quot;</span><br><span class="line">else</span><br><span class="line">break</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#执行SMB密码</span><br><span class="line">FUNRUNPASSWD()&#123;</span><br><span class="line">smbpasswd -a $USERNAME &lt;&lt;EOF &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">$PASSWD</span><br><span class="line">$PASSWD</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">echo -e &quot;\e[32m $USERNAME 密码设置完成\e[0m&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建共享目录名</span><br><span class="line">FUNGROUPADD()&#123;</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">read -p &quot;请输入新的共享名：&quot; GROUP</span><br><span class="line">if [ ! -z $GROUP ];then</span><br><span class="line">cat /etc/samba/smb.conf tail -n +10grep &#x27;^\[&#x27;cut -d&quot;[&quot; -f2cut -d&quot;]&quot; -f1 grep &quot;^$GROUP$&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo -e &quot;\e[31m $GROUP 共享目录已存在，请重新输入\e[0m&quot;</span><br><span class="line">else</span><br><span class="line">groupadd $GROUP &gt; /dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo -e &quot;\e[32m $GROUP 共享目录名创建完成\e[0m&quot;</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\e[31m 错误，请输入有效的共享目录名！\e[0m&quot;</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建共享目录</span><br><span class="line">FUNMKDIR()&#123;</span><br><span class="line">cd $SMBDIR</span><br><span class="line">mkdir -p $GROUP</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#目录授权</span><br><span class="line">#配置samba目录所有者</span><br><span class="line">FUNOWNDIR()&#123;</span><br><span class="line">cd $SMBDIR</span><br><span class="line">chown -R :$GROUP $GROUP</span><br><span class="line">chmod 770 $GROUP</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#samba全局配置</span><br><span class="line">FUNGLCONF()&#123;</span><br><span class="line">echo &quot;</span><br><span class="line">[global]</span><br><span class="line">     workgroup = WORKGROUP</span><br><span class="line">     security = user</span><br><span class="line">     passdb backend = tdbsam</span><br><span class="line">     printing = cups</span><br><span class="line">     printcap name = cups</span><br><span class="line">     load printers = yes</span><br><span class="line">     cups options = raw</span><br><span class="line">&quot; &gt; /etc/samba/smb.conf</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#添加共享名配置</span><br><span class="line">FUNADDCONF()&#123;</span><br><span class="line">sed -i &#x27;/\[&#x27;&quot;$GROUP&quot;&#x27;\]/,+6d&#x27; /etc/samba/smb.conf </span><br><span class="line">echo &quot;</span><br><span class="line">[$GROUP]</span><br><span class="line">    path =$SMBDIR/$GROUP</span><br><span class="line">    browseable =yes</span><br><span class="line">    guest ok =no</span><br><span class="line">    writable =yes</span><br><span class="line">    create mask =0644</span><br><span class="line">    directory mask =0755</span><br><span class="line">&quot; &gt;&gt; /etc/samba/smb.conf</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#修改SMB用户密码</span><br><span class="line">FUNMODPASSWD()&#123;</span><br><span class="line">#输入密码</span><br><span class="line">FUNPASSWD</span><br><span class="line">#执行SMB密码</span><br><span class="line">FUNRUNPASSWD</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#修改SMB共享目录名称</span><br><span class="line">FUNMODDGROUP()&#123;</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">FUNLISTGROUP</span><br><span class="line">read -p &quot;请输入要被修改的共享名(回车返回上级)：&quot; GROUP</span><br><span class="line">if [ -z $GROUP ];then</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line">cat /etc/samba/smb.conf tail -n +10grep &#x27;^\[&#x27;cut -d&quot;[&quot; -f2cut -d&quot;]&quot; -f1 grep &quot;^$GROUP$&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">read -p &quot;请输入新的共享名：&quot; NEWGROUP</span><br><span class="line">if [ ! -z $NEWGROUP ];then</span><br><span class="line">groupmod -n   $NEWGROUP $GROUP  &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [  $? -eq 0 ];then</span><br><span class="line">#修改本地共享目录名称</span><br><span class="line">cd $SMBDIR</span><br><span class="line">mv  $GROUP  $NEWGROUP</span><br><span class="line">#修改SMB配置中共享名</span><br><span class="line">sed -i &quot;s/\[$GROUP\]/\[$NEWGROUP\]/&quot; /etc/samba/smb.conf</span><br><span class="line">echo -e &quot;\e[32m 修改共享目录名称完成\e[0m&quot;</span><br><span class="line">break 2</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\e[31m 错误，请输入有效的共享目录名\e[0m&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\e[31m 错误，共享目录名不存在！\e[0m&quot;</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查询共享组里存在哪些用户</span><br><span class="line">FUNGROUPUSER()&#123;</span><br><span class="line">#获取组ID</span><br><span class="line">GROUPID=` cat /etc/group awk -F &quot;:&quot; &#x27;&#123;print $1 &quot; &quot; $3&#125;&#x27;grep &quot;^$GROUP &quot; awk &#x27;&#123;print $2&#125;&#x27; `</span><br><span class="line">#获取组用户</span><br><span class="line">echo &gt; /tmp/ingroupuser</span><br><span class="line">echo &gt; /tmp/outgroupuser</span><br><span class="line">for USERNAME in `pdbedit -L cut -d&quot;:&quot; -f1`</span><br><span class="line">do</span><br><span class="line">id $USERNAME awk -F&quot;=&quot; &#x27;&#123;print $4&#125;&#x27;tr &quot;,&quot; &quot;\n&quot;cut -d &quot;(&quot; -f2cut -d &quot;)&quot; -f1 grep &quot;^$GROUP$&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [  $? -eq 0 ];then</span><br><span class="line">echo &quot;$USERNAME&quot; &gt;&gt; /tmp/ingroupuser</span><br><span class="line">else</span><br><span class="line">echo &quot;$USERNAME&quot; &gt;&gt; /tmp/outgroupuser</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">echo &quot;\/\/\/\/\/\/\/\/\/\/\/\/\/\//\/\/\/\/\/\//\/\/\/\/\//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/&quot;</span><br><span class="line">echo -e &quot;\e[32m $GROUP 共享中已存在以下用户： \e[0m&quot;</span><br><span class="line">cat /tmp/ingroupuser tr &quot;\n&quot; &quot;\t&quot;</span><br><span class="line">echo</span><br><span class="line">echo -e &quot;\e[33m $GROUP 共享中未存在以下用户： \e[0m&quot;</span><br><span class="line">cat /tmp/outgroupusertr &quot;\n&quot; &quot;\t&quot;</span><br><span class="line">echo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#所有共享目录总数</span><br><span class="line">FUNSMBDIRSUM()&#123;</span><br><span class="line">SMBDIRSUM=`cat /etc/samba/smb.conf tail -n +10grep &#x27;^\[&#x27;cut -d&quot;[&quot; -f2cut -d&quot;]&quot; -f1 wc -l`</span><br><span class="line">echo &quot;当前Samba共享目录：$SMBDIRSUM 个&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#列出共享权限信息</span><br><span class="line">FUNLISTAUTH()&#123;</span><br><span class="line">FUNSMBDIRSUM</span><br><span class="line">for GROUP in `cat /etc/samba/smb.conf tail -n +10grep &#x27;^\[&#x27;cut -d&quot;[&quot; -f2cut -d&quot;]&quot; -f1`</span><br><span class="line">do</span><br><span class="line">#获取组ID</span><br><span class="line">GROUPID=` cat /etc/group awk -F &quot;:&quot; &#x27;&#123;print $1 &quot; &quot; $3&#125;&#x27;grep &quot;^$GROUP &quot; awk &#x27;&#123;print $2&#125;&#x27; `</span><br><span class="line">#获取组用户</span><br><span class="line">echo &quot;\/\/\/\/\/\/\/\/\/\/\/\/\/\//\/\/\/\/\/\//\/\/\/\/\//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/&quot;</span><br><span class="line">echo -e &quot;\e[33m $GROUP 共享中包含以下用户： \e[0m&quot;</span><br><span class="line">echo &gt; /tmp/groupuser</span><br><span class="line">for USERNAME in `pdbedit -L cut -d&quot;:&quot; -f1`</span><br><span class="line">do</span><br><span class="line">id $USERNAME awk -F&quot;=&quot; &#x27;&#123;print $4&#125;&#x27;tr &quot;,&quot; &quot;\n&quot;cut -d &quot;(&quot; -f2cut -d &quot;)&quot; -f1 grep &quot;^$GROUP$&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [  $? -eq 0 ];then</span><br><span class="line">echo &quot;$USERNAME&quot; &gt;&gt; /tmp/groupuser</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">cat /tmp/groupuser tr &quot;\n&quot; &quot;\t&quot;</span><br><span class="line">echo</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#列出所有用户名</span><br><span class="line">FUNLISTUSER()&#123;</span><br><span class="line">echo &quot;当前samba用户列表：&quot;</span><br><span class="line">echo &quot;------------------------------------------------------------------------------------------&quot;</span><br><span class="line">pdbedit -L cut -d&quot;:&quot; -f1 tr &quot;\n&quot; &quot;\t&quot;</span><br><span class="line">echo</span><br><span class="line">echo &quot;------------------------------------------------------------------------------------------&quot; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#列出所有共享名</span><br><span class="line">FUNLISTGROUP()&#123;</span><br><span class="line">echo &quot;当前samba共享目录列表：&quot;</span><br><span class="line">echo &quot;------------------------------------------------------------------------------------------&quot;</span><br><span class="line">FUNSMBDIRSUM</span><br><span class="line">cat /etc/samba/smb.conf tail -n +10grep &#x27;^\[&#x27;cut -d&quot;[&quot; -f2cut -d&quot;]&quot; -f1 tr &quot;\n&quot; &quot;\t&quot; 2&gt;/dev/null</span><br><span class="line">echo</span><br><span class="line">echo &quot;------------------------------------------------------------------------------------------&quot;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#删除SMB用户</span><br><span class="line">FUNDELUSER()&#123;</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">read -p &quot;请输入要删除的用户名：&quot; USERNAME</span><br><span class="line">if [ ! -z  $USERNAME ];then</span><br><span class="line">smbpasswd -x $USERNAME &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">if [  $? -eq 0 ];then</span><br><span class="line">echo -e &quot;\e[32m $USERNAME 用户删除成功\e[0m&quot;</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\e[31m $USERNAME 用户删除失败，用户不存在！\e[0m&quot;</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#删除SMB共享目录配置</span><br><span class="line">FUNDELSMBCONF()&#123;</span><br><span class="line">sed -i &#x27;/\[&#x27;&quot;$GROUP&quot;&#x27;\]/,+6d&#x27; /etc/samba/smb.conf</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#删除本地共享目录</span><br><span class="line">FUNDELLOCALDIR()&#123;</span><br><span class="line">cd $SMBDIR</span><br><span class="line">rm -rf $GROUP</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#删除smb共享配置及目录</span><br><span class="line">FUNDELSMBCONFDIR()&#123;</span><br><span class="line"></span><br><span class="line">FUNDELSMBCONF</span><br><span class="line">FUNDELLOCALDIR</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#删除共享目录及数据</span><br><span class="line">FUNDELSMBDIR()&#123;</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">FUNLISTGROUP</span><br><span class="line">read -p &quot;请输入要删除的共享名（回车返回上级）：&quot;  GROUP</span><br><span class="line">if [  -z $GROUP ];then</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">cat /etc/samba/smb.conf tail -n +10grep &#x27;^\[&#x27;cut -d&quot;[&quot; -f2cut -d&quot;]&quot; -f1 grep &quot;^$GROUP$&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">FUNDELSMBCONFDIR</span><br><span class="line">echo -e &quot;\e[32m $GROUP 共享目录及数据删除成功 \e[0m&quot;</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\e[31m 输入错误，请输入正确的共享名！\e[0m&quot;</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#删除所有共享用户</span><br><span class="line">FUNDELALLUSER()&#123;</span><br><span class="line">for USER in ` pdbedit -L cut -d&quot;:&quot; -f1`</span><br><span class="line">do</span><br><span class="line">smbpasswd -x $USER &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#删除所有共享目录</span><br><span class="line">FUNDELALLDIR()&#123;</span><br><span class="line">for GROUP in ` cat /etc/samba/smb.conf tail -n +10grep &#x27;^\[&#x27;cut -d&quot;[&quot; -f2cut -d&quot;]&quot; -f1 `</span><br><span class="line">do</span><br><span class="line">FUNDELSMBCONF</span><br><span class="line">cd $SMBDIR</span><br><span class="line">rm -rf $GROUP</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#共享目录添加用户</span><br><span class="line">FUNSMBDIRADDUSER()&#123;</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">FUNLISTGROUP</span><br><span class="line">read -p &quot;请输入要添加用户的共享名（回车返回上级）：&quot; GROUP</span><br><span class="line">if [ -z $GROUP ];then</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line">cat /etc/samba/smb.conf tail -n +10grep &#x27;^\[&#x27;cut -d&quot;[&quot; -f2cut -d&quot;]&quot; -f1 grep &quot;^$GROUP$&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ] ;then</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">#显示组中存在用户，及未存在的用户</span><br><span class="line">FUNGROUPUSER</span><br><span class="line"></span><br><span class="line">read -p &quot;请输入$GROUP 共享中要添加的用户名(回车返回上级)：&quot; USERNAME</span><br><span class="line">if [ -z $USERNAME ];then</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line">pdbedit -L cut -d&quot;:&quot; -f1 grep &quot;^$USERNAME$&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">usermod -a -G  $GROUP $USERNAME</span><br><span class="line">echo -e &quot;\e[32m $GROUP 共享中添加用户 $USERNAME 完成\e[0m&quot;</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\e[31m 输入错误，请输入存在的用户名！\e[0m&quot;</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\e[31m 输入错误，请输入正确的共享名！\e[0m&quot;</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#共享目录删除用户</span><br><span class="line">FUNSMBDELUSER()&#123;</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">FUNLISTGROUP</span><br><span class="line">read -p &quot;请输入要删除用户的共享名（回车返回上级）：&quot; GROUP</span><br><span class="line">if [ -z $GROUP ];then</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line">cat /etc/samba/smb.conf tail -n +10grep &#x27;^\[&#x27;cut -d&quot;[&quot; -f2cut -d&quot;]&quot; -f1 grep &quot;^$GROUP$&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ] ;then</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">FUNGROUPUSER</span><br><span class="line">read -p &quot;请输入$GROUP  共享中要删除的用户名（回车返回上级）：&quot; USERNAME</span><br><span class="line">if [ -z $USERNAME ];then</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line">pdbedit -L cut -d&quot;:&quot; -f1 grep &quot;^$USERNAME$&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">gpasswd -d $USERNAME  $GROUP </span><br><span class="line">echo -e &quot;\e[32m $GROUP 共享中删除用户 $USERNAME 完成\e[0m&quot;</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">echo -e &quot;\e[31m 输入错误，请输入正确的用户名\e[0m&quot;</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\e[31m 输入错误，请输入正确的共享名！\e[0m&quot;</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#关闭selinux、防火墙</span><br><span class="line">FUNSELINUX()&#123;</span><br><span class="line">#关闭selinux</span><br><span class="line">setenforce 0 &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">sed -i &#x27;s/enforcing/disable/g&#x27; /etc/selinux/config</span><br><span class="line">&#125;</span><br><span class="line">#添加防火墙端口</span><br><span class="line">FUNFWD()&#123;</span><br><span class="line">cat /etc/firewalld/zones/public.xml grep port=\&quot;139\&quot;/  &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ ! $? -eq 0 ];then</span><br><span class="line">sed -i &quot;/&lt;\/zone&gt;/i &lt;port protocol=\&quot;tcp\&quot; port=\&quot;139\&quot;/&gt;&quot; /etc/firewalld/zones/public.xml</span><br><span class="line">sed -i &quot;/&lt;\/zone&gt;/i &lt;port protocol=\&quot;tcp\&quot; port=\&quot;445\&quot;/&gt;&quot; /etc/firewalld/zones/public.xml</span><br><span class="line">sed -i &quot;/&lt;\/zone&gt;/i &lt;port protocol=\&quot;tcp\&quot; port=\&quot;137\&quot;/&gt;&quot; /etc/firewalld/zones/public.xml</span><br><span class="line">sed -i &quot;/&lt;\/zone&gt;/i &lt;port protocol=\&quot;tcp\&quot; port=\&quot;138\&quot;/&gt;&quot; /etc/firewalld/zones/public.xml</span><br><span class="line">fi</span><br><span class="line">firewall-cmd --reload &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#重启smb</span><br><span class="line">FUNRESTARTSMB()&#123;</span><br><span class="line">systemctl restart smb &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#启动samba、开机启动</span><br><span class="line">FUNSTARTSMB()&#123;</span><br><span class="line"></span><br><span class="line">systemctl restart smb  &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">systemctl enable smb &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#判断启动状态</span><br><span class="line">FUNSTATUSSMB()&#123;</span><br><span class="line">systemctl status smb &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo -e &quot;\e[32m smb启动状态：成功 \e[0m&quot;</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\e[31m smb启动状态：失败 \e[0m&quot;</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#IP</span><br><span class="line"></span><br><span class="line">IPLAN=`hostname -I awk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">IPWAN=`curl http://pv.sohu.com/cityjson 2&gt;&gt; /dev/null  awk -F &#x27;&quot;&#x27; &#x27;&#123;print $4&#125;&#x27;`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#display</span><br><span class="line">FUNDISPLAY()&#123;</span><br><span class="line">echo -e &quot;\e[33m</span><br><span class="line">=================================================</span><br><span class="line">samba外网：$IPWAN</span><br><span class="line">Samba内网：$IPLAN</span><br><span class="line">samba基目录：$SMBDIR</span><br><span class="line">samba默认添加共享：$GROUP</span><br><span class="line">Samba默认添加账号：$USERNAME</span><br><span class="line">Samba默认添加密码：$PASSWD</span><br><span class="line">================================================= \e[0m&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#yum-check-rpm</span><br><span class="line">FUNCHECKRPM()&#123;</span><br><span class="line">RPM=samba</span><br><span class="line">echo &quot;正在检测 $RPM 安装包&quot;</span><br><span class="line">yum provides $RPM &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ ! $? -eq 0 ];then</span><br><span class="line">echo -e &quot;\e[31m 错误！yum源中未能找到 $RPM 安装包，请检测yum源或网络连接！ \e[0m&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#yum-install-rpm</span><br><span class="line">FUNYUMRPM()&#123;</span><br><span class="line">echo &quot;yum -y install $RPM&quot; &gt;/tmp/yuminstall</span><br><span class="line">nohup bash /tmp/yuminstall  &gt;/tmp/test 2&gt;&amp;1 &amp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#yun-check-installing</span><br><span class="line">FUNCHECKYUM()&#123;</span><br><span class="line">while  [ $? -eq 0 ]</span><br><span class="line">do</span><br><span class="line">echo &quot;$RPM 安装中，请等待 。。。 &quot;</span><br><span class="line">sleep 3</span><br><span class="line">ps -ef grep -v grepgrep &quot;yum.*install.*$RPM.*&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">done</span><br><span class="line">echo &quot;$RPM 安装完成&quot;</span><br><span class="line">&#125;        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#静默安装install</span><br><span class="line">FUNINSTALL()&#123;</span><br><span class="line">#安装samba</span><br><span class="line">FUNCHECKRPM</span><br><span class="line">FUNYUMRPM</span><br><span class="line">FUNCHECKYUM</span><br><span class="line">#创建共享目录名</span><br><span class="line">GROUP=ffing</span><br><span class="line">groupadd $GROUP &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">#创建共享目录</span><br><span class="line">cd $SMBDIR</span><br><span class="line">mkdir  -p $GROUP</span><br><span class="line">#目录权限</span><br><span class="line">FUNOWNDIR</span><br><span class="line">#创建共享用户</span><br><span class="line">USERNAME=ffing</span><br><span class="line">useradd -g $GROUP -M -s /sbin/nologin $USERNAME &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">#samba密码</span><br><span class="line">PASSWD=123456</span><br><span class="line">smbpasswd -a $USERNAME &lt;&lt;EOF &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">$PASSWD</span><br><span class="line">$PASSWD</span><br><span class="line">EOF</span><br><span class="line">#配置samba</span><br><span class="line">FUNGLCONF</span><br><span class="line">FUNADDCONF</span><br><span class="line">#关闭selinux</span><br><span class="line">FUNSELINUX</span><br><span class="line">#防火墙放行</span><br><span class="line">FUNFWD</span><br><span class="line">#samba启动</span><br><span class="line">FUNSTARTSMB</span><br><span class="line">#samba状态</span><br><span class="line">FUNSTATUSSMB</span><br><span class="line">#display</span><br><span class="line">FUNDISPLAY</span><br><span class="line">&#125;</span><br><span class="line">############################函数end############################</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#判断是否存在samba</span><br><span class="line">smbd --version &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">if [ ! $? -eq 0 ];then</span><br><span class="line">FUNINSTALL</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">echo &quot;</span><br><span class="line">=============================================================================================</span><br><span class="line">                -- 1.重置samba(清除所有用户及共享数据)</span><br><span class="line">                </span><br><span class="line">                -- 2.查看共享权限</span><br><span class="line">                </span><br><span class="line">                               -- 添加用户</span><br><span class="line">                -- 3.用户管理---- 修改密码  </span><br><span class="line">                               -- 删除用户</span><br><span class="line">     Samba      </span><br><span class="line">     架构图                    -- 添加共享目录</span><br><span class="line">                -- 4.目录管理---- 修改目录名称</span><br><span class="line">                               -- 删除共享目录</span><br><span class="line">                </span><br><span class="line">                               -- 共享目录添加授权用户</span><br><span class="line">                -- 5.权限管理--  </span><br><span class="line">                               -- 共享目录删除授权用户</span><br><span class="line">                </span><br><span class="line">                -- 0.退出</span><br><span class="line">=============================================================================================</span><br><span class="line">Samba外网：$IPWAN Samba内网：$IPLAN Samba基目录：$SMBDIR </span><br><span class="line">注：本脚本创建的共享目录都在基目录之下，牵涉共享组成员管理!!放弃中文共享名!!</span><br><span class="line">---------------------------------------------------------------------------------------------&quot;</span><br><span class="line">read -p &quot;请选择：&quot; SUM</span><br><span class="line">case $SUM in</span><br><span class="line">1)</span><br><span class="line">FUNDELALLUSER</span><br><span class="line">FUNDELALLDIR</span><br><span class="line">FUNINSTALL</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2)</span><br><span class="line">FUNLISTAUTH</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">3)</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">#列出用户</span><br><span class="line">FUNLISTUSER</span><br><span class="line">echo &quot;1.添加用户&quot;</span><br><span class="line">echo &quot;2.修改密码&quot;</span><br><span class="line">echo &quot;3.删除用户&quot;</span><br><span class="line">read -p &quot;请选择（回车返回上级）：&quot; NUM</span><br><span class="line">if [ -z  $NUM ];then</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line">case $NUM in</span><br><span class="line">1)</span><br><span class="line">#检测用户是否存在</span><br><span class="line">FUNCHECKUSERNAMENO</span><br><span class="line">#添加用户</span><br><span class="line">FUNUSERADD</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">2)</span><br><span class="line"></span><br><span class="line">#原用户名判断</span><br><span class="line">FUNCHECKUSERNAMEYES</span><br><span class="line">#设置密码</span><br><span class="line">FUNPASSWD</span><br><span class="line">FUNRUNPASSWD</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">3)</span><br><span class="line">FUNDELUSER</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo -e &quot;\e[31m 错误，请输入1~3！\e[0m&quot;</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">esac</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">4)</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">#列出共享目录</span><br><span class="line">FUNLISTGROUP</span><br><span class="line">echo &quot;1.添加共享目录&quot;</span><br><span class="line">echo &quot;2.修改共享目录名称&quot;</span><br><span class="line">echo &quot;3.删除共享目录及数据&quot;</span><br><span class="line">read -p &quot;请选择（回车返回上级）：&quot; NUM</span><br><span class="line">if [ -z $NUM ];then</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line">case $NUM in</span><br><span class="line">1)</span><br><span class="line">FUNGROUPADD</span><br><span class="line">FUNMKDIR</span><br><span class="line">FUNOWNDIR</span><br><span class="line">FUNADDCONF</span><br><span class="line">FUNRESTARTSMB</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">2)</span><br><span class="line">FUNMODDGROUP</span><br><span class="line">FUNRESTARTSMB</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">3)</span><br><span class="line">FUNDELSMBDIR</span><br><span class="line"></span><br><span class="line">FUNRESTARTSMB</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo -e &quot;\e[31m 错误，请输入1~3！\e[0m&quot;</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">esac</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">5)</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">FUNLISTGROUP</span><br><span class="line">FUNLISTUSER</span><br><span class="line">echo &quot;1.共享目录添加授权用户&quot;</span><br><span class="line">echo &quot;2.共享目录删除授权用户&quot;</span><br><span class="line">read -p &quot;请选择（回车返回上级）：&quot; NUM</span><br><span class="line">if [ -z $NUM ];then</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line">case $NUM in</span><br><span class="line">1)</span><br><span class="line">FUNSMBDIRADDUSER</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">2)</span><br><span class="line">FUNSMBDELUSER</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">*)</span><br><span class="line">echo -e &quot;\e[31m 错误，请输入1~2！\e[0m&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">0)</span><br><span class="line">exit</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*)</span><br><span class="line">echo -e &quot;\e[31m 错误，请输入1~5！\e[0m&quot;</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">esac</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> samba </tag>
            
            <tag> 共享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos-Cockpit 可视化 Web 管理面板</title>
      <link href="/posts/a4c17420.html"/>
      <url>/posts/a4c17420.html</url>
      
        <content type="html"><![CDATA[<p> 通过 Cockpit - Web 管理面板，检查日志、配置网络、防火墙、创建账户、管理服务、web_ssh、虚拟机、docker、磁盘管理、集群管理等等，功能很强大。</p><p><strong>Cockpit 官方网站</strong> <a href="https://cockpit-project.org/">https://cockpit-project.org/</a></p><ul><li>一，安装cockpit</li><li>二，启动cockpit</li><li>三，放行端口</li><li>四，测试</li><li>五，其它：更换端口及ssl</li></ul><h2 id="一，安装cockpit"><a href="#一，安装cockpit" class="headerlink" title="一，安装cockpit"></a>一，安装cockpit</h2><p>#查看所有的cockpit模块包<br>yum list cockpit*<br>#通过yum安装自己需求的cockpit模块<br>yum -y install cockpit “你需求的模块”</p><h2 id="二，启动cockpit"><a href="#二，启动cockpit" class="headerlink" title="二，启动cockpit"></a>二，启动cockpit</h2><p>#启动cockpit<br>systemctl start cockpit<br>#设置开机启动<br>systemctl enable cockpit</p><h2 id="三，放行端口"><a href="#三，放行端口" class="headerlink" title="三，放行端口"></a>三，放行端口</h2><p>#懒人方法，直接放行cockpit服务<br>firewall-cmd  –zone&#x3D;public –add-service&#x3D;cockpit –permanent<br>#重新加载防火墙<br>firewall-cmd  –reload</p><h2 id="四，登录测试"><a href="#四，登录测试" class="headerlink" title="四，登录测试"></a>四，登录测试</h2><p>http:&#x2F;&#x2F;你的服务IP：9090</p><p>用户名、密码为你本地登录账号密码。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-9-1024x744.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-10-1024x647.png"></p><h2 id="五，其它：更换端口及ssl"><a href="#五，其它：更换端口及ssl" class="headerlink" title="五，其它：更换端口及ssl"></a>五，其它：更换端口及ssl</h2><ul><li><strong>默认web访问端口9090，更换其它端口</strong>：</li></ul><p>vi &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;cockpit.socket</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-11.png"></p><p>重新加载服务：systemctl daemon-reload</p><p>重启cockpit：systemctl restart cockpit</p><ul><li>也可使用nginx反代到80端口</li></ul><p>location &#x2F; {<br>proxy_pass <a href="http://localhost:9090/">http://localhost:9090</a>;<br>proxy_redirect off;<br>proxy_set_header X-Real-IP $remote_addr;<br>proxy_set_header X-Forwarded-For<br>$proxy_add_x_forwarded_for;<br>proxy_set_header Host $host;<br>}</p><ul><li><strong>替换ssl证书</strong></li></ul><p>一般我们使用nginx反代的时候就ssl，如果没装web环境，这个还是有用的。</p><p>cockpit默认证书文件：&#x2F;etc&#x2F;cockpit&#x2F;ws-certs.d&#x2F;0-self-signed.cert</p><p>只需要将自己的域名证书及key覆盖到&#x2F;etc&#x2F;cockpit&#x2F;ws-certs.d&#x2F;0-self-signed.cert</p><p>注！！！证书错误会导致cockpit无法启动,清除无效，需删除证书文件0-self-signed.cert。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-13.png"></p><p>重启cockpit：systemctl restart cockpit</p><p><strong>注：虚拟机模块先决条件需要安装：yum -y install qemu-kvm libvirt virt-install</strong></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos管理面板 </tag>
            
            <tag> cockpit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos- 搭建内网穿透服务器（NPS）</title>
      <link href="/posts/b4173fdc.html"/>
      <url>/posts/b4173fdc.html</url>
      
        <content type="html"><![CDATA[<p>frp和nps是两个轻量级内网穿透代理服务器，这两种都是带有web管理，各有特点。</p><p>frp常用于路由器插件，web管理比较简陋，主要通过文件配置进行映射。</p><p>nps我比较喜欢，web管理很丰富，既可以通过web也可以通过配置文件进行映射。</p><p>流程：</p><ul><li>一，下载nps</li><li>二，修改nps_server配置</li><li>三，安装nps_server</li><li>四，创建系统服务文件（方便systemctl管理）</li><li>五，防火墙放行端口</li><li>六，测试</li></ul><h2 id="一，下载nps"><a href="#一，下载nps" class="headerlink" title="一，下载nps"></a>一，下载nps</h2><p>nps项目源作者项目地址：<a href="https://github.com/ehang-io/nps/releases/">https://github.com/ehang-io/nps/releases/</a></p><p>根据自己平台下载对于版本server、client客户端</p><h2 id="二，修改nps-server配置"><a href="#二，修改nps-server配置" class="headerlink" title="二，修改nps_server配置"></a>二，修改nps_server配置</h2><p>解压server包，可以看到nps（二进制程序）、conf（配置目录）、web（web页目录）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-61.png"></p><p>不对配置修改也可以直接使用，但不安全且配置不一定适合自己，这里nps_config的配置，我更改的内容都是我#号注释的地方。（配置详解可查下作者文档<a href="https://ehang-io.github.io/nps/#/?id=nps">https://ehang-io.github.io/nps/#/?id=nps</a>）</p><p>vi .&#x2F;conf&#x2F;nps.conf</p><p>appname &#x3D; nps<br> Boot mode(devpro)<br> runmode &#x3D; dev<br> HTTP(S) proxy port, no startup if empty<br>#代理服务IP或域名地址<br> http_proxy_ip&#x3D;ffing.fun<br>#http代理端口<br> http_proxy_port&#x3D;11080<br>#https代理端口<br> https_proxy_port&#x3D;11443<br>#启用htts代理<br> https_just_proxy&#x3D;true<br> default https certificate setting<br>#https代理证书（更改为自己的证书路径）<br> https_default_cert_file&#x3D;&#x2F;opt&#x2F;crt&#x2F;ffing.fun.pem<br>#https代理秘钥（更改为自己的密钥路径）<br> https_default_key_file&#x3D;&#x2F;opt&#x2F;crt&#x2F;ffing.fun.key</p><p>#####服务器与客户端之间<br> bridge<br>#客户端与服务端连接方式kcp或tcp<br> bridge_type&#x3D;tcp<br>#服务端客户端通信端口<br> bridge_port&#x3D;8024<br> bridge_ip&#x3D;0.0.0.0<br> Public password, which clients can use to connect to the </p><p>server<br> After the connection, the server will be able to open relevant ports and parse related domain names according to its own configuration file.</p><p><code>#公共key!妥善更改密码，否则客户端可以通过此秘钥直接连接服务器！</code><br> public_vkey&#x3D;123</p><p> Traffic data persistence interval(minute)<br> Ignorance means no persistence<br> flow_store_interval&#x3D;1<br> log level LevelEmergency-&gt;0  LevelAlert-&gt;1 LevelCritical-&gt;2 LevelError-&gt;3 LevelWarning-&gt;4 LevelNotice-&gt;5 LevelInformational-&gt;6 LevelDebug-&gt;7<br> log_level&#x3D;7<br> log_path&#x3D;nps.log<br> Whether to restrict IP access, true or false or ignore<br> ip_limit&#x3D;true<br>#####p2p相关配置<br> p2p<br> p2p_ip&#x3D;127.0.0.1<br> p2p_port&#x3D;6000</p><p>#####web相关配置<br> web<br>#web管理地址<br> web_host&#x3D; ffing.fun<br>#web管理用户名<br> web_username&#x3D;admin<br>#web管理密码<br> web_password&#x3D;admin<br>#web端口<br> web_port &#x3D; 98<br> web_ip&#x3D;0.0.0.0<br> web_base_url&#x3D;<br>#web页面是否启动ssl<br> web_open_ssl&#x3D;true<br>#web-ssl证书<br> web_cert_file&#x3D;&#x2F;opt&#x2F;crt&#x2F;ffing.fun.pem<br>#web-ssl秘钥<br> web_key_file&#x3D;&#x2F;opt&#x2F;crt&#x2F;ffing.fun.key<br> if web under proxy use sub path. like <a href="http://host/nps">http://host/nps</a> need this.<br> web_base_url&#x3D;&#x2F;nps<br> Web API unauthenticated IP address(the len of auth_crypt_key must be 16)<br> Remove comments if needed</p><p>#web api秘钥<br> auth_key&#x3D;test<br>#获取服务端authKey时的aes加密密钥，16位<br> auth_crypt_key &#x3D;1234567812345678<br>#默认允许连接的端口范围<br> allow_ports&#x3D;9001-9999</p><p> Web management multi-user login<br> allow_user_login&#x3D;false<br> allow_user_register&#x3D;false<br> allow_user_change_username&#x3D;false<br> extension<br> allow_flow_limit&#x3D;false<br> allow_rate_limit&#x3D;false<br> allow_tunnel_num_limit&#x3D;false<br> allow_local_proxy&#x3D;false<br> allow_connection_num_limit&#x3D;false<br> allow_multi_ip&#x3D;false<br> system_info_display&#x3D;false<br> cache<br> http_cache&#x3D;false<br> http_cache_length&#x3D;100<br> get origin ip<br> http_add_origin_header&#x3D;false<br> pprof debug options<br> pprof_ip&#x3D;0.0.0.0<br> pprof_port&#x3D;9999<br> client disconnect timeout<br>默认 disconnect_timeout&#x3D;60</p><h2 id="三，安装nps-server"><a href="#三，安装nps-server" class="headerlink" title="三，安装nps_server"></a>三，安装nps_server</h2><p>可根据自己的需求选择安装方式：</p><p>1.绿色文件形式运行</p><p>nps本身就是二进制文件，可以在目录直接运行，默认调用当前目录的conf&#x2F;nps.config配置文件；</p><p>2.命令安装</p><p>nps install</p><p>安装后的二进制文件会放在&#x2F;usr&#x2F;bin下，配置文件会放在&#x2F;etc&#x2F;nps目录下</p><p><strong>nps控制命令：nps startstoprestartinstalluninstallupdate</strong></p><h2 id="四，创建系统服务文件（方便systemctl管理）"><a href="#四，创建系统服务文件（方便systemctl管理）" class="headerlink" title="四，创建系统服务文件（方便systemctl管理）"></a>四，创建系统服务文件（方便systemctl管理）</h2><p>创建nps.service文件，方便后期管理</p><p><code>vi /usr/lib/systemd/system/nps.service</code></p><p>[Unit]<br> Description&#x3D;nps server<br> After&#x3D;network.target<br> [Service]<br> User&#x3D;root<br> Group&#x3D;root<br> ExecStart&#x3D;&#x2F;NPS目录&#x2F;nps<br> Restart&#x3D;always<br> RestartSec&#x3D;30s<br> [Install]<br> WantedBy&#x3D;multi-user.target</p><p>重新加载systemctl</p><p><code>systemctl daemon-reload</code></p><p>systemctl控制命令</p><p><code>systemctl startstoprestartenabeldisable nps</code></p><h2 id="五，防火墙放行端口"><a href="#五，防火墙放行端口" class="headerlink" title="五，防火墙放行端口"></a>五，防火墙放行端口</h2><p>根据nps_server中的配置，放行所需端口</p><p>web端口：98</p><p>服务桥接端口：8024</p><p>http代理端口：11080</p><p>https代理端口：11443</p><p>默认放行端口：9001-9999</p><p><code>firewall-cmd --add-port=你需要放行的端口号/tcp --zone=public --permanent</code></p><p><code>firewall-cmd --reload</code></p><h2 id="六，测试"><a href="#六，测试" class="headerlink" title="六，测试"></a>六，测试</h2><p>web后台：http:&#x2F;&#x2F;你的服务IP:98</p><p>用户名：admin</p><p>密码：admin</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-62.png"></p><p>npc.exe -server&#x3D;1.1.1.1:8284 -vkey&#x3D;客户端的密钥(公共vkey或客户机vkey)</p><p>注：公共vkey泄露，任何客户机都可以连接！！！建议</p><p>为了方便web管理，又无需客户机人员专业操作（修改conf文件），我想了个方法，就是做个bat，将客户机计算机名作为vkey，这样客户机人员只需要提供计算机名即可。</p><p>a.创建一个客户端，将客户机的计算机名作为vkey（验证密钥）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-63-1024x595.png"></p><p>客户机上运行bat内容，自动调用客户机的计算机名称作为vkey，运行bat即可</p><p>for &#x2F;f %%a in (‘hostname’) do set my_host_name&#x3D;%%a<br>npc.exe -server&#x3D;你服务器地址:端口 -vkey&#x3D;%my_host_name%</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-65-1024x484.png"></p><p>连接成功后，就可以通过web后台去添加TCP代理端口、http代理等。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-66.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nps </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos-搭建KMS(vlmcsd)激活服务器</title>
      <link href="/posts/cb27895.html"/>
      <url>/posts/cb27895.html</url>
      
        <content type="html"><![CDATA[<p>Kms激活，全称是Key Management Service，是微软官方认可的一种系统激活方式。这个激活方式主要用于企业计算机的批量激活windows及office。</p><p>流程：</p><ul><li>一，下载kms</li><li>二，运行kms</li><li>三，创建系统服务文件（方便通过systemctl管理）</li><li>四，放行端口</li><li>五，测试</li></ul><h2 id="一，下载kms"><a href="#一，下载kms" class="headerlink" title="一，下载kms"></a>一，下载kms</h2><p>项目下载地址：<a href="https://github.com/Wind4/vlmcsd/releases">https://github.com/Wind4/vlmcsd/releases</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-56.png"></p><h2 id="二，运行kms"><a href="#二，运行kms" class="headerlink" title="二，运行kms"></a>二，运行kms</h2><p>解压后，进入binaries目录，有各个平台的版本，可根据自己的平台、CPU、系统位数选择。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-58.png"></p><p>以我的机器为例：平台：LINUX；CPU架构：intel；系统位数：x64；因此就要选择vlmcsd-x64-musl-static</p><p>#将vlmcsd复制到&#x2F;usr&#x2F;bin目录下,并更名为kms（方便后期管理维护）<br>cp vlmcsd-x64-musl-static &#x2F;usr&#x2F;bin&#x2F;kms<br>#运行kms<br>&#x2F;usr&#x2F;bin&#x2F;kms<br>#查看kms是否运行<br>ps -ef grep kms</p><p>三，创建服务文件（方便通过systemctl管理）</p><p>vi &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;kms.service</p><p>下面是kms.service文件内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=KMS Server By vlmcsd</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/kms.pid</span><br><span class="line">ExecStart=/usr/bin/kms -p /run/kms.pid</span><br><span class="line">ExecStop=/bin/kill -HUP $MAINPID</span><br><span class="line">PrivateTmp=true</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>#重新加载配置文件<br>systemctl deamon-reload</p><h2 id="四，放行端口"><a href="#四，放行端口" class="headerlink" title="四，放行端口"></a>四，放行端口</h2><p>kms 默认放行端口为1688</p><p>#永久放行1688端口<br>firewall-cmd –zone&#x3D;public –add-port&#x3D;1688&#x2F;tcp –permanent<br>#防火墙配置重新加载<br>firewall-cmd –reload</p><h2 id="五，测试"><a href="#五，测试" class="headerlink" title="五，测试"></a>五，测试</h2><p>windows做个bat或者使用cmd自行测试！</p><p>win10专业版bat内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo Win10 Pro -- Activate</span><br><span class="line">@echo off</span><br><span class="line">slmgr /skms “你的服务器IP或域名”</span><br><span class="line">slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</span><br><span class="line">slmgr /ato</span><br><span class="line">slmgr /xpr</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-60.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KMS </tag>
            
            <tag> windows激活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows RDP远程到centos桌面</title>
      <link href="/posts/3e75b8f7.html"/>
      <url>/posts/3e75b8f7.html</url>
      
        <content type="html"><![CDATA[<p>流程：</p><ul><li>1.安装GNOME桌面</li><li>2.安装xrdp</li><li>3.放行3389端口</li></ul><h2 id="一，安装GNOME桌面"><a href="#一，安装GNOME桌面" class="headerlink" title="一，安装GNOME桌面"></a>一，安装GNOME桌面</h2><p>yum   -y grouplist “GNOME Desktop”</p><p>注：可使用yum grouplist 查看yum安装组列表</p><h2 id="二，安装xrdp，并启动"><a href="#二，安装xrdp，并启动" class="headerlink" title="二，安装xrdp，并启动"></a>二，安装xrdp，并启动</h2><p>#安装epel源<br>yum -y install epel-release<br>#安装xrdp<br>yum -y install xrdp<br>#启动xrdp<br>systemctl start xrdp<br>#设置xrdp开机启动<br>systemctl enable xrdp</p><h2 id="三，放行3389端口"><a href="#三，放行3389端口" class="headerlink" title="三，放行3389端口"></a>三，放行3389端口</h2><p>#永久放行3389端口<br>firewall-cmd –zone&#x3D;public –add-port&#x3D;3389&#x2F;tcp –permanent<br>#防火墙配置重新加载<br>firewall-cmd –reload</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-55.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RDP </tag>
            
            <tag> windows远程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos-shell脚本判断系统位数</title>
      <link href="/posts/5df4e843.html"/>
      <url>/posts/5df4e843.html</url>
      
        <content type="html"><![CDATA[<p>if [ $(getconf WORD_BIT) &#x3D; ‘32’ ] &amp;&amp; [ $(getconf LONG_BIT) &#x3D; ‘64’ ] ; then<br>     echo “it’s 64bit”<br> else<br>     echo “it’s 32bit”<br> fi</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos-阿里云ddsn域名解析，钉钉机器人推送提醒</title>
      <link href="/posts/870ab642.html"/>
      <url>/posts/870ab642.html</url>
      
        <content type="html"><![CDATA[<p>家里路由老化（梅林固件），撸了个京东云路由器（下车方便刷第三方固件），官方固件没办法第三方插件，所以就需要在家里的centos装个ddns实现域名解析自动更新。</p><p>github很多脚本，大部分都需要python环境的，也有纯shell的，偶然发现一个web管理页面的（go语言环境），这里记录一下配置过程。</p><p>ddns-go 项目地址：<a href="https://github.com/jeessy2/ddns-go">https://github.com/jeessy2/ddns-go</a></p><p>提前准备：</p><ul><li>1.阿里云域名</li><li>2.阿里云AccessKey ：ID及Secret</li><li>3.钉钉机器人</li></ul><p>流程：</p><ul><li>一.centos安装go语言环境</li><li>二.下载ddns-go</li><li>三.安装ddns-go</li><li>四.防火墙放行端口</li><li>五.配置ddns-go</li></ul><h2 id="一-centos安装go语言环境"><a href="#一-centos安装go语言环境" class="headerlink" title="一.centos安装go语言环境"></a>一.centos安装go语言环境</h2><p>yum安装go语言</p><p>#安装epel源<br>yum -y install epel-release<br>#安装go语言<br>yum -y install golang</p><h2 id="二-下载ddns-go"><a href="#二-下载ddns-go" class="headerlink" title="二.下载ddns-go"></a>二.下载ddns-go</h2><p>国外github源作者项目地址：<a href="https://github.com/jeessy2/ddns-go">下载</a></p><p>国内gitee我备份的项目地址：<a href="https://gitee.com/ffing/ddns_go-2.8.3">下载</a></p><h2 id="三-安装ddns-go"><a href="#三-安装ddns-go" class="headerlink" title="三.安装ddns-go"></a>三.安装ddns-go</h2><p>将下载的包解压后，只需要ddns-go文件</p><p>#进入ddns-go文件所在目录<br>#ddns-go赋执行权限<br>chmod +x ddns<br>#安装ddns-go<br>.&#x2F;ddns-go -s install</p><p>#安装成功会提示：<br>#安装 ddns-go 服务成功! 程序会一直运行, 包括重启后。<br>#没有找到配置文件！请在网页中输入</p><h2 id="四-防火墙放行端口"><a href="#四-防火墙放行端口" class="headerlink" title="四.防火墙放行端口"></a>四.防火墙放行端口</h2><p>ddns-go网页端口为9876，需要防火墙放行</p><p>firewall-cmd –zone&#x3D;public –add-port&#x3D;9876&#x2F;tcp –permanent<br>firewall-cmd –reload</p><h2 id="五-配置ddns-go"><a href="#五-配置ddns-go" class="headerlink" title="五.配置ddns-go"></a>五.配置ddns-go</h2><p>打开web配置页：http:&#x2F;&#x2F;服务器IP:9876，根据页面输入信息</p><p>1.配置阿里云的AccessKey:ID及Secret</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-48-1024x269.png"></p><p>2.配置需要解析的域名</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-49-1024x704.png"></p><p>3.配置管理账号密码</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-50.png"></p><p>4.配置钉钉机器人Webhook</p><p>URL：钉钉机器的Webhook地址</p><p>RequestBody模板（参考源作者修改）：{“msgtype”: “text”,”text”: {“content”: “域名已更新：#{ipv4Domains} –&gt; #{ipv4Addr}，域名更新结果：#{ipv4Result}”}}</p><p>注！！！“域名已更新”必须和钉钉机器“自定义关键词”一致</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-51.png"></p><p>5.”Save”保存，后提示更新成功</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-53-1024x378.png"></p><p>同时，钉钉机器人也会推送域名解析更新消息</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-54.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ddns </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Floccus+坚果云——实现跨平台书签同步插件工具</title>
      <link href="/posts/c8170990.html"/>
      <url>/posts/c8170990.html</url>
      
        <content type="html"><![CDATA[<p>类似插件有很多，也有第三方平台提供书签空间的，但太过于方便，就要有灾难的觉悟（当初的TX网络书签一样，停止运维就预示是GameOver）</p><p>项目地址: <a href="https://github.com/marcelklehr/floccus"><strong>Github – Floccus</strong></a></p><p>官网地址：<a href="https://floccus.org/download">Floccus</a></p><ul><li><strong>WebDAV</strong> ：目前支持 「坚果云、nextcloud &#x2F; owncloud，box」 等 WebDAV 服务器</li><li><strong>Nextcloud 书签</strong> ：利用 Nextcloud 自带的书签应用程序进行同步，可通过 Web 访问。(需要nextcloud v12 以上版本)。</li><li><strong>本地文件同步</strong> ：利用 <a href="https://github.com/TCB13/LoFloccus">LoFloccus</a>软件将书签同步到本地, 再利用 Dropbox，Syncthing，rsync 等进行跨设备同步。</li></ul><p>Floccus插件是个工具！搬运书签的工具！支持IE内核、火狐内核、google内核！</p><p>利用Floccus插件，将书签保存到WebDAV后，再将书签同步到其它平台浏览器。</p><p><strong>书签同步：坚果云WebDAV（可理解为备份中心）《&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》Floccus插件（书签搬运工）《&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》浏览器</strong></p><h2 id="流程："><a href="#流程：" class="headerlink" title="流程："></a>流程：</h2><ul><li>一、下载安装floccus</li><li>二、注册坚果云，设置应用账号</li><li>三、Floccus插件添加坚果账号</li></ul><h2 id="一、下载安装Floccus"><a href="#一、下载安装Floccus" class="headerlink" title="一、下载安装Floccus"></a>一、下载安装Floccus</h2><ul><li>下载Floccus插件</li></ul><p>github项目更新最新的插件，所以建议从github下载：–&gt;<a href="https://github.com/floccusaddon/floccus/releases">下载</a></p><ul><li>安装Floccus插件</li></ul><p>安装很简单，打开插件管理页面</p><p>支持crx文件直接拖进去，或者添加解压文件</p><p>下面以谷歌浏览器为例：</p><p>打开chrome插件管理页：chrome:&#x2F;&#x2F;extensions&#x2F;</p><p>打开开发者模式，添加解压文件即可。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-31-1024x403.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-32-1024x539.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-33-1024x577.png"></p><h2 id="二、注册坚果云，设置应用密码"><a href="#二、注册坚果云，设置应用密码" class="headerlink" title="二、注册坚果云，设置应用密码"></a>二、注册坚果云，设置应用密码</h2><p>坚果云地址：<a href="https://www.jianguoyun.com/">https://www.jianguoyun.com/</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-34.png"></p><p>登录注册账户后，在根目录下建立“书签”文件夹，作为我们同步书签的目录</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-41-1024x332.png"></p><p>右上角点击自己的用户名——》账户信息</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-35-1024x186.png"></p><p>添加应用密码（可以理解为坚果云的API接口）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-37-1024x657.png"></p><p>不要关闭网页，一会需要服务器地址、账户、应用密码</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-38.png"></p><h2 id="三、Floccus插件添加坚果账号"><a href="#三、Floccus插件添加坚果账号" class="headerlink" title="三、Floccus插件添加坚果账号"></a>三、Floccus插件添加坚果账号</h2><p>返回浏览器，点击Floccus插件，添加账户</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-39.png"></p><p>选择webdav同步</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-40.png"></p><p>添加账户信息（我们刚坚果云注册账户及应用密码），保存。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-67.png"></p><p>同步选项：</p><p>注：收藏夹，就是你浏览器中的收藏夹；选项卡就是你当前浏览器打开的网页标签卡</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-69-1024x123.png"></p><p>根据自己需求选择，我直接同步“收藏夹”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-70.png"></p><p>返回插件，点击“同步”，提示成功（MAC提示完美）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-45.png"></p><p>至此，插件已经安装完成，书签已经上传至坚果云。</p><p>我们想同步到哪个浏览器，只需安装Floccus插件，就可将书签下载到浏览器</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Floccus </tag>
            
            <tag> 书签同步 </tag>
            
            <tag> 坚果云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科学上网——免费亚马逊云搭建v2ray</title>
      <link href="/posts/ce21d3df.html"/>
      <url>/posts/ce21d3df.html</url>
      
        <content type="html"><![CDATA[<p>因为经常找些资料，避免不了需要访问外网，就必须有个梯子。可以付费也可以自己搭建，付费的满天飞，可以自行百度。我这里就自己搭建的，有多种选择从图形化的vpn（softether、openvpn），再到后来的socks（frp、nps），再到现在代理服务ss、ssr、v2ray、trojin（刚出没多久）。折腾了太多，最后我选择了v2ray的代理模式，当时用的github项目作者233boy的一键v2ray脚本，着实让我用了3年多（因为家里电脑系统太久了，把硬盘全格式化了，导致亚马逊的key给弄丢了，网盘太多也不知道放哪里了，关键是邮箱也不知道当时用的哪个，呵呵呵。。。大意了）</p><p>没办法重新申请亚马逊EC2再搞吧，上github发现v2ray的有了很多版本，真是道高一尺魔高一丈，原来用的233boy作者也把v2ray的项目删除了，真的是从新来过，这里就顺便记录一下从服务器到搭建过程。</p><h2 id="准备："><a href="#准备：" class="headerlink" title="准备："></a>准备：</h2><p>1.邮箱（注册亚马逊云）</p><p>2.手机（验证）</p><p>3.一张外币信用卡（1美元的核验，只验证不扣钱）</p><p>4.SSH工具（shell工具很多，自己顺手就可以，我这里用finalshell多平台免费）</p><p>5.v2rayU（MAC平台）、v2rayN（windows平台）[文件结尾提供github下载地址]</p><h2 id="流程："><a href="#流程：" class="headerlink" title="流程："></a>流程：</h2><p>一、亚马逊云账号注册</p><p>二、亚马逊云开通EC2服务器</p><p>三、SSH连接亚马逊云</p><p>四、搭建V2ray服务</p><p>五、v2ray客户端登录</p><h2 id="一、亚马逊账号注册"><a href="#一、亚马逊账号注册" class="headerlink" title="一、亚马逊账号注册"></a>一、亚马逊账号注册</h2><p>亚马逊云中文官网：<a href="https://www.amazonaws.cn/">https://www.amazonaws.cn/</a></p><p>注册步骤：注册邮箱密码、地址、电话、信用卡验证（流程一直在更新，不一定是这个顺序）流程很简单，注册完成后，会提示需要亚马逊审核几个小时才可通过。如想看具体的注册可自行百度。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-1024x746.png"></p><h2 id="二、亚马逊云开通EC2服务器"><a href="#二、亚马逊云开通EC2服务器" class="headerlink" title="二、亚马逊云开通EC2服务器"></a>二、亚马逊云开通EC2服务器</h2><p>免费的服务器，配置很低，带宽也很小，也就做个测试服务器。</p><p>免费不代表无限！亚马逊的免费规则：1台云服务器365天+弹性IP（弹性IP必须要和云服务器绑定）</p><ul><li>1.选择区域——》服务——》EC2（云服务器）</li></ul><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-2-1024x745.png"></p><ul><li>2.进入EC2服务：实例——》启动新实例</li></ul><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-3-1024x542.png"></p><ul><li>3.AWS官方的系统版本——》搜索centos镜像（根据自己需求）——》X86（选择需求的镜像）</li></ul><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-4-1024x524.png"></p><ul><li>4.费用说明，继续即可，后面可以一路下一步了。</li></ul><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-5-1024x541.png"></p><ul><li>5.默认免费服务器配置，直接下一步。</li></ul><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-6-1024x542.png"></p><ul><li>6.实例相关，直接下一步。</li></ul><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-7-1024x518.png"></p><ul><li>7.存储配置页，最大免费30G，默认是8G存储，可根据自己需求设置存储大小（不过这种单核1G的免费配置也就做个测试，默认即可）</li></ul><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-8-1024x520.png"></p><ul><li>8.标签，服务器名称，无需理会，直接下一步</li></ul><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-9-1024x498.png"></p><ul><li>9.安全组，默认只开放22端口，我是懒人直接开放所有端口，否则后面还要添加直接全部开放了（端口全部开放不安全，我这是测试服务器就懒得管），后期也可以自己修改安全组</li></ul><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-25-1024x436.png"></p><ul><li>10.启动实例，第一次创建需要先创建秘钥，将秘钥保存好就可以后期长期使用，启动实例就OK了，服务器搭建完成。</li></ul><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-11-1024x521.png"></p><h2 id="三、SSH连接亚马逊云"><a href="#三、SSH连接亚马逊云" class="headerlink" title="三、SSH连接亚马逊云"></a>三、SSH连接亚马逊云</h2><p>1.查看EC2的公网IP</p><p>点击左上角“服务”，选择EC2，回到EC2管理界面。</p><p>点击“实例”，等待2分钟左右实例创建成功，可以看到实例的状态、公网IP</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-13-1024x513.png"></p><p>2.打开SSH工具，连接服务器</p><p>打开finalshell工具，添加云服务器ip（也可域名解析）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-14.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-15.png"></p><p>浏览秘钥，导入刚下载的亚马逊秘钥</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-16.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-18.png"></p><p>主机、用户名、秘钥都完成后，确定。就可以正常连接你的云服务器了。</p><p>拓展：如果不想每次搭建服务器变动公网IP，使用亚马逊的弹性IP服务，可以帮助我们更换实例绑定到弹性IP（固定IP），保障域名解析不需要变更。</p><p>——————————————————————————————————————————</p><p>亚马逊官方镜像实例默认用户名如下，切换root使用命令：sudo su</p><ul><li>对于 Amazon Linux 2 或 Amazon Linux AMI，用户名称是 <code>ec2-user</code>。</li><li>对于 CentOS AMI，用户名称是 <code>centos</code>。</li><li>对于 Debian AMI，用户名称是 <code>admin</code>。</li><li>对于 Fedora AMI，用户名为 <code>ec2-user</code> 或 <code>fedora</code>。</li><li>对于 RHEL AMI，用户名称是 <code>ec2-user</code> 或 <code>root</code>。</li><li>对于 SUSE AMI，用户名称是 <code>ec2-user</code> 或 <code>root</code>。</li><li>对于 Ubuntu AMI，用户名称是 <code>ubuntu</code>。</li></ul><h2 id="四、搭建V2ray服务"><a href="#四、搭建V2ray服务" class="headerlink" title="四、搭建V2ray服务"></a>四、搭建V2ray服务</h2><p>V2ray的一键脚本在github上很多，我这里就github上找个带WEB管理页面做为测试。</p><p>github项目地址：<a href="https://github.com/sprov065/v2-ui">前往</a></p><p>一键安装脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://blog.sprov.xyz/v2-ui.sh)</span><br></pre></td></tr></table></figure><p>搭建很快完成，如下图，需要复制vmess链接,粘贴至SSH即可。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-1.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-3.png"></p><p>服务搭建完成，OK</p><p>打开网页：http:&#x2F;&#x2F;服务器IP(或域名):65432</p><p>默认用户名密码：admin</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-4-1024x545.png"></p><p>登录web管理后，首先修改面板登录密码</p><p>（如果登录忘记也可以通过命令重置：&#x2F;usr&#x2F;local&#x2F;v2-ui&#x2F;v2-ui resetuser）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-5-1024x415.png"></p><p>添加v2ray代理帐号</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-6-1024x564.png"></p><p>v2ray帐号信息很全面：二维码、vmess连接、及帐号信息</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-7-1024x491.png"></p><p>有兴趣的也可以加入CDN，在我看来CDN不一定加速，但是防封IP。</p><p>各平台客户端下载</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/%E5%9B%BE%E7%89%87-8-1024x522.png"></p><h2 id="五、v2ray客户端登录"><a href="#五、v2ray客户端登录" class="headerlink" title="五、v2ray客户端登录"></a>五、v2ray客户端登录</h2><p>win和mac客户端均支持“从剪切板导入URL”或“扫描屏幕二维码”，导入完成可以看到自己的服务器，启动代理即可。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-28.png"></p><ul><li><strong>windows平台</strong></li></ul><p>v2rayN客户端 github<a href="https://github.com/2dust/v2rayN/releases/">下载</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-27.png"></p><ul><li><strong>Mac 平台</strong></li></ul><p>v2rayU客户端 github<a href="https://github.com/yanue/V2rayU/releases">下载</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/05/image-26.png"></p><p>最后总结：</p><p>这个脚本搭建的很快，代理速度一般，能满足日常的资料查询；视频有卡顿（服务器带宽有限、代理服务优化有限），所有你懂的，哈哈哈哈。</p><p><strong>冲浪愉快，切莫害人害己！</strong></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> v2ray </tag>
            
            <tag> 亚马逊云 </tag>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell -tar命令（简版）</title>
      <link href="/posts/2019e692.html"/>
      <url>/posts/2019e692.html</url>
      
        <content type="html"><![CDATA[<p><strong>命令格式：tar [cxt zjJ vf pPN] 生成tar文件 要压缩的文件或目录 -C 解压到指定目录</strong></p><p>tar命令只是打包，而压缩实际是调用gzipbzip2xz等工具，所以要执行某种压缩的前提是系统装有对应的压缩程序！！！</p><h2 id="参数解析："><a href="#参数解析：" class="headerlink" title="参数解析："></a>参数解析：</h2><blockquote><p>————cxt同时只会出现一个，不能同事解压又压缩，不符合逻辑</p><p>-c 创建</p><p>-x 解压</p><p>-t 查看</p><p>————压缩格式，前提是系统有对应的压缩工具（centos7自带gzip和xz）</p><p>z-gzip压缩</p><p>j-bzip2压缩</p><p>J-xz压缩</p><p>————</p><p>v-查看</p><p>f-文件</p><p>————其他属性</p><p>p-保留文件属性</p><p>N-时间节点剔除（剔除时间节点之前的文件）</p><p>exclude-文件或目录剔除</p></blockquote><h2 id="范例：-c-打包-压缩"><a href="#范例：-c-打包-压缩" class="headerlink" title="范例：-c 打包[压缩]"></a>范例：-c 打包[压缩]</h2><p>只打包或打包并压缩，根据需求添加参数</p><p>#将&#x2F;etc目录，打包后，命名为etc.tar</p><p><code>tar -cvf etc.tar /etc/</code></p><p>#将&#x2F;etc目录，gzip格式打包，命名为etc.tar.gz</p><p><code>tar -zcvf etc.tar.gz /etc/</code></p><p>#将&#x2F;etc目录，bzip2格式打包，命名为etc.tar.gz</p><p><code>tar -jcvf etc.tar.xz /etc/</code></p><p>#将&#x2F;etc目录，xz格式打包，命名为etc.tar.xz</p><p><code>tar -Jcvf etc.tar.xz /etc/</code></p><h2 id="范例：-x-解包-解压缩"><a href="#范例：-x-解包-解压缩" class="headerlink" title="范例：-x 解包[解压缩]"></a>范例：-x 解包[解压缩]</h2><p>解包，系统装有对应的压缩程序，就可以在解压的时候省略zjJ参数，一般只需xvf</p><p>#xvf后跟包名，直接解包</p><p><code>tar -xvf etc.tar</code></p><p><code>tar -xvf etc.tar.gz</code></p><p><code>tar -xvf etc.tar.xz</code></p><p>#解压文件输出到指定文件夹,将etc.tar 解压到&#x2F;opt目录下</p><p><code>tar xvf etc.tar -C /opt</code></p><h2 id="范例：其他参数"><a href="#范例：其他参数" class="headerlink" title="范例：其他参数"></a>范例：其他参数</h2><p>#打包某个日期之后的问题，常用于备份新产生的文件</p><p>#譬如将&#x2F;home目录下，2016年1月1日至今的新生文件，打包压缩为home.tar.gz</p><p><code>tar -N &#39;2016/01/01&#39; -zcvf home.tar.gz /home</code></p><p>#打包目录或文件时，剔除某个我们不想要目录或文件</p><p>#譬如将&#x2F;home目录下，剔除download目录后，打包压缩为home.tar.gz</p><p><code>tar -exclude /home/download -zcvf home.tar.gz /home</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> tar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx -配置文件及虚拟主机+https</title>
      <link href="/posts/2e01ad0d.html"/>
      <url>/posts/2e01ad0d.html</url>
      
        <content type="html"><![CDATA[<p>因为很多东西是自学的，都百度了很多坑，所有可能有描述不到位的，请见谅。</p><p>昨天同事请教https这个问题，我就帮忙解决了一下，但发现虽然自己的思路很清晰，但却没办法很好的传授同事，尴尬。。。</p><p>申明一下，https只是一种协议，任何端口都可以实现这个的协议，不是必须是443端口（就譬如我的ffing.fun:88就用了https协议）</p><p>http默认端口80，即当我们访问<a href="http://ffing.cn和http//ffing.cn:80%EF%BC%8C%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E8%A7%A3%E6%9E%90%E7%9A%84%E6%95%88%E6%9E%9C%E6%98%AF%E4%B8%80%E6%A0%B7%EF%BC%8C%E5%8A%A0%E4%B8%8D%E5%8A%A080%E9%83%BD%E6%98%AF%E4%B8%80%E6%A0%B7%E7%9A%84%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%98%AF%E8%82%AF%E5%AE%9A%E7%9A%84%E3%80%82">http://ffing.cn和http://ffing.cn:80，在浏览器解析的效果是一样，加不加80都是一样的，这个是肯定的。</a></p><p>但！！！https虽然默认端口443，但不一定必须443，可以是任意端口，只是加入了ssl字段关联证书即可。</p><h2 id="首先，了解一下nginx配置文件"><a href="#首先，了解一下nginx配置文件" class="headerlink" title="首先，了解一下nginx配置文件"></a>首先，了解一下nginx配置文件</h2><p>默认配置文件位置 ：&#x2F;etc&#x2F;nginx&#x2F;nginx.conf</p><ul><li>nginx.conf的配置里主要分了3大块</li></ul><ol><li>nginx程序相关信息</li><li>http｛｝（全局）</li><li>server｛｝（虚拟主机）</li></ol><p>user</p><p>http ｛</p><p>server｛｝</p><p>｝</p><p>下面我做个简单的nginx.conf配置文件做个讲解</p><p>#第一部分，nginx相关信息：用户、工作内核数、错误日志、pid<br>user nginx; （nginx的执行用户）<br>worker_processes auto; （cpu内核数量）<br>error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log; （错误日志路径）<br>pid &#x2F;run&#x2F;nginx.pid; （pid文件）<br>#第二部分http，全局配置信息：这是配置的内容对server也生效，所以要根据情况配置配置（如果是通配符的证书，可以直接放这里实现全域名的ssl），最主要的要看include后加载的虚拟主机位置<br>http {<br>keepalive（高可用集群）<br>client_max_body_size（nginx上传大小）<br>include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;*.conf（！！！这里标注的你虚拟主机的配置文件路径，可以根据自己情况修改！！！）  #第三部分server，虚拟主机配置：在nginx.conf中的server可以配置监听多个server，但后期维护比较麻烦，所有，建议这里默认配置80即可，或者直接删除<br> &#96;server {<br>   listen (监听端口)<br>   root   （站点路径）<br>   index   （站点默认页）<br>   location （对象规则）<br>   。。。<br>           }</p><p>   server {<br>   listen<br>   root<br>   index<br>   location<code>  </code>}&#96; }（注意，这个是http的大括号）</p><h2 id="nginx虚拟主机配置"><a href="#nginx虚拟主机配置" class="headerlink" title="nginx虚拟主机配置"></a>nginx虚拟主机配置</h2><p>虚拟主机配置目录：需要看你的nginx.conf中include标识的位置，默认在&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;目录下，配置文件名字随意但必须以.conf结尾（通常规则就是域名+端口+.conf）</p><p>虚拟主机配置文件，其实就是nginx.conf中server｛｝模块</p><p>虚拟主机配置文件，配置注意事项</p><p>1.一个配置文件，只可以监听一个端口！！！但可以有多个域名。</p><p>2.如做跳转，避免“域名：端口”，尽量使用“ip:端口”（域名跳转时，会多个域名解析，加载时长会多1-2秒钟）</p><h2 id="nginx配置https"><a href="#nginx配置https" class="headerlink" title="nginx配置https"></a>nginx配置https</h2><p>先放下ssl字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssl_certificate 证书.pem;（证书路径绝对路径，方便后期管理）</span><br><span class="line">ssl_certificate_key 证书.key;（证书路径绝对路径，方便后期管理）</span><br><span class="line">ssl_protocols TLSv1.1 TLSv1.2;</span><br><span class="line">ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line">ssl_session_cache shared:SSL:10m;</span><br><span class="line">ssl_session_timeout 10m;</span><br></pre></td></tr></table></figure><p>如果我们的ssl证书是通配符域名，懒人操作就是直接放到nginx.conf中http{}字段中，实现全局的https，即你这个nginx下的所有项目都是这个域名下的。下图</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-44.png"></p><p>如果我们申请的单域名证书，就需要在每个server｛｝中添加对应的证书（或者虚拟主机中配置ssl）如下</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-45.png"></p><p>其实还有一个服务器上多域名，多项目的情况，这种情况都需要在server{}中单独配置，这种情况少，但不是没有。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx，https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QPlayer2--Wordpress网站底部悬浮音乐播放器</title>
      <link href="/posts/e56debf3.html"/>
      <url>/posts/e56debf3.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-41.png"></p><p>网上有很多类似的插件，免费、收费、代码各种有，我喜欢折腾，偏向于开源的，没事看看github，发现个好用的音乐播放器QPlayer2，支持网易云音乐解析。</p><p>项目地址：<a href="https://link.zhihu.com/?target=https://github.com/Jrohy/QPlayer-WordPress-Plugin">https://github.com/Jrohy/QPlayer-WordPress-Plugin</a>，最新版本为v1.3.4.2，更新于三年前，已不再更新。</p><p>如今，MoeShin将代码优化后制成QPlayer2，现已支持WordPress、Typecho、Z-Blog。</p><h2 id="一，下载"><a href="#一，下载" class="headerlink" title="一，下载"></a>一，下载</h2><p>Moeshin的github地址：<a href="https://github.com/moeshin/QPlayer2-WordPress/">下载</a></p><p>国内我的gitee地址：<a href="https://gitee.com/ffing/wp_qplayer2-2.0.4">下载</a></p><h2 id="二，安装"><a href="#二，安装" class="headerlink" title="二，安装"></a>二，安装</h2><p>插件默认都放在wp-content&#x2F;plugins目录下即可</p><h2 id="三，设置"><a href="#三，设置" class="headerlink" title="三，设置"></a>三，设置</h2><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-43.png"></p><p>进入后台设置-QPlayer2，作者都有注释，很简单，这里只说下歌曲设置</p><ul><li>添加歌单模式</li></ul><p>网易云音乐解析，ID：就是歌单的ID（获取歌单ID，需要在网易云网网页版，点击进入喜欢的歌单，可以在地址栏看到歌单ID）</p><p>[<br>{“server”: “netease”, “type”: “playlist”, “id”: “2698841554”}<br>]</p><ul><li>添加单曲模式</li></ul><p>单曲模式比较繁琐，自由度高，可以看作者的参数说明：-&gt; <a href="https://moeshin.com/archives/QPlayer2-Typecho.html">Moeshin</a></p><p>[<br>{<br>“name”: “Nightglow”,<br>“artist”: “蔡健雅”,<br>“audio”: “<a href="https://cdn.jsdelivr.net/gh/moeshin/QPlayer-res/Nightglow.mp3">https://cdn.jsdelivr.net/gh/moeshin/QPlayer-res/Nightglow.mp3</a>“,<br>“cover”: “<a href="https://cdn.jsdelivr.net/gh/moeshin/QPlayer-res/Nightglow.jpg">https://cdn.jsdelivr.net/gh/moeshin/QPlayer-res/Nightglow.jpg</a>“,<br>“lrc”: “<a href="https://cdn.jsdelivr.net/gh/moeshin/QPlayer-res/Nightglow.lrc">https://cdn.jsdelivr.net/gh/moeshin/QPlayer-res/Nightglow.lrc</a>“<br>}，<br>{<br>“name”: “やわらかな光”,<br>“artist”: “やまだ豊”,<br>“audio”: “<a href="https://cdn.jsdelivr.net/gh/moeshin/QPlayer-res/%E3%82%84%E3%82%8F%E3%82%89%E3%81%8B%E3%81%AA%E5%85%89.mp3">https://cdn.jsdelivr.net/gh/moeshin/QPlayer-res/やわらかな光.mp3</a>“,<br>“cover”: “<a href="https://cdn.jsdelivr.net/gh/moeshin/QPlayer-res/%E3%82%84%E3%82%8F%E3%82%89%E3%81%8B%E3%81%AA%E5%85%89.jpg">https://cdn.jsdelivr.net/gh/moeshin/QPlayer-res/やわらかな光.jpg</a>“,<br>“lyrics”: “[00:00.00]请欣赏”<br>}<br>]</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-42.png"></p><h2 id="四，其他"><a href="#四，其他" class="headerlink" title="四，其他"></a>四，其他</h2><h4 id="关于图床及音乐库"><a href="#关于图床及音乐库" class="headerlink" title="关于图床及音乐库"></a>关于图床及音乐库</h4><p>第一种方法：可以使用gitee、github的pages服务做个库（推荐github）</p><p>注：github可使用jsdelivrCDN加速</p><p>格式：<a href="https://cdn.jsdelivr.net/gh/">https://cdn.jsdelivr.net/gh/</a>&lt;github用户名&gt;&#x2F;&lt;github仓库名&gt;&#x2F;歌曲名.mp3</p><p>第二种：使用免费的CDN存储做库，七牛、又拍云都是只是免费的流量有限，推荐第一种。</p><p>第三种：使用onedrive网盘做个直连。</p><h4 id="关于歌词不显示问题"><a href="#关于歌词不显示问题" class="headerlink" title="关于歌词不显示问题"></a>关于歌词不显示问题</h4><p>测试后发现可以正常使用github歌词链接，不知道是不是项目作者做有限制还是这些平台有防盗链。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wordpress，QPlayer2 </tag>
            
            <tag> 音乐播放器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BAT 多选择执行</title>
      <link href="/posts/abcba213.html"/>
      <url>/posts/abcba213.html</url>
      
        <content type="html"><![CDATA[<p>因国内访问github要修改hosts文件重定向github，但家里联通宽带就又个奇怪的现象，一段时间可以访问过段时间又不可以访问，所以要频繁的修改hosts文件，很不方便，这里利用bat批处理执行选择操作。</p><h2 id="hosts文件位置"><a href="#hosts文件位置" class="headerlink" title="hosts文件位置"></a>hosts文件位置</h2><p>hosts文件位置为c:\windows\System32\drivers\etc\hosts 因为有人系统可能安装的不是C盘，所以使用变量%systemroot%来代替windows目录 %systemroot%\System32\drivers\etc\hosts</p><h2 id="bat内容"><a href="#bat内容" class="headerlink" title="bat内容"></a>bat内容</h2><p>我有两个需要重定向的域名，github是需要频繁修改的，但另外一个ffing.fun是固定的</p><p>@echo off<br>Title github重定向<br>Color 0A<br>:github<br>echo.<br>echo ══════════════════════════════════<br>echo 【hosts加入githb地址】：<br>echo 1.加入github<br>echo 2.注释github</p><p>echo.<br>set &#x2F;p n&#x3D;请输入:<br>if “%n%”&#x3D;&#x3D;”” cls&amp;goto :github<br>if “%n%”&#x3D;&#x3D;”1” call :1<br>if “%n%”&#x3D;&#x3D;”2” call :2</p><p>pause<br>goto :eof<br>:1<br>echo 加入github<br>echo 140.82.112.3 github.com &gt; %systemroot%\System32\drivers\etc\hosts<br>echo 192.168.50.200 ffing.fun &gt;&gt; %systemroot%\System32\drivers\etc\hosts<br>exit<br>goto :github</p><p>:2<br>echo 注释github<br>echo #140.82.112.3 github.com &gt; %systemroot%\System32\drivers\etc\hosts<br>echo 192.168.50.200 ffing.fun &gt;&gt; %systemroot%\System32\drivers\etc\hosts<br>exit<br>goto :github</p><p>注:保存bat时编码选择ANSI,否则会出现中文乱码 <img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/bat_ansi.png"></p><h3 id="思路很简单，就是直接将github的IP域名直接导入到host文件-如果你要操作某个文件，可以直接mv-x2F-或-cp-x2F-来实现不提示覆盖"><a href="#思路很简单，就是直接将github的IP域名直接导入到host文件-如果你要操作某个文件，可以直接mv-x2F-或-cp-x2F-来实现不提示覆盖" class="headerlink" title="思路很简单，就是直接将github的IP域名直接导入到host文件,如果你要操作某个文件，可以直接mv&#x2F; 或 cp&#x2F;来实现不提示覆盖"></a>思路很简单，就是直接将github的IP域名直接导入到host文件,如果你要操作某个文件，可以直接mv&#x2F; 或 cp&#x2F;来实现不提示覆盖</h3>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-实现同一端口HTTP跳转HTTPS(497错误码)</title>
      <link href="/posts/f5dd9734.html"/>
      <url>/posts/f5dd9734.html</url>
      
        <content type="html"><![CDATA[<p>一般我们遇到的都是80转443，协议与端口同时跳转，这个很简单；但如果是非标准端口，就譬如我的家庭宽带（80、443）默认是关闭的，所以我只能用其他端口，譬如我的88端口，这里就要用到浏览器返回的错误码，让nginx实现跳转。</p><p>497错误码解释：当此虚拟站点只允许https访问时，用户http访问时nginx会报出497错误码</p><p>而我要实现的就是用户访问<a href="http://ffing.fun:88——>https://ffing.fun:88">http://ffing.fun:88——&gt;https://ffing.fun:88</a></p><p>所以就通过error_page的错误页面实现跳转。</p><p><code>error_page 497 https://$host:$server_port$uri$is_args$args;</code></p><p>497作用域：http或server</p><p>下图是我的测试跳转配置：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-40.png"></p><p>注：修改配置后要重启nginx才会生效！！！</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> nginx ssl </tag>
            
            <tag> NGINX跳转 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows-二次验证登录（multiotp）</title>
      <link href="/posts/cae128dd.html"/>
      <url>/posts/cae128dd.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-39-1024x613.png"></p><p>这两天写登录验证的东西，突然想起前两年用的windows的OTP验证，不过估计大家应该用的都非常少，我是因为当时的阿里云搭的windows服务，总是被暴力破解RDP，所以装的multiotp，实现RDP的二次验证登录。</p><p>两年前用的东西，现在回忆整理一下</p><p>github地址：<a href="https://github.com/multiOTP/multiotp">https://github.com/multiOTP/multiotp</a></p><p>二进制下载地址：<a href="https://download.multiotp.net/credential-provider/">https://download.multiotp.net/credential-provider/</a></p><p><em>支持Windows 7&#x2F;8 &#x2F; 8.1 &#x2F; 10&#x2F;2012（R2）&#x2F; 2016&#x2F;2019的multiOTP的multiOTP凭据提供程序<br>-支持本地和域用户<br>-强制对RDP进行OTP检查<br>-强制或禁用本地登录的OTP检查<br>-客户端可执行文件自动安装和配置<br>multiOTP-仅在成功通过身份验证测试后，才激活multiOTP凭据提供程序<br>-DLL和EXE文件经过数字签名<br>-第一个强大的两因素身份验证解决方案具有缓存支持，以便也可以脱机工作！</em></p><ul><li>准备<ul><li>windows系统，登录用户必须设置密码</li><li>手机安装阿里云app，带有opt验证（也可安装其它opt的app很多：Google Authenticator、Microsoft Authenticato、Authy等）</li><li>安装配置multiotp</li><li>测试</li></ul></li></ul><h2 id="第一步，windows系统，登录用户必须设置密码"><a href="#第一步，windows系统，登录用户必须设置密码" class="headerlink" title="第一步，windows系统，登录用户必须设置密码"></a>第一步，windows系统，登录用户必须设置密码</h2><p>RDP连接是必须有密码的，所以要设置用户密码：</p><p><code>计算机（此电脑）——右键“管理”——用户——右键“设置密码”</code></p><p>开启远程登录：</p><p><code>计算机（此电脑）——右键“属性”——远程设置——允许连接到此电脑</code></p><p>写的简单，因为太简单，如果实在看不懂自行百度</p><h2 id="第二步，手机安装阿里云app"><a href="#第二步，手机安装阿里云app" class="headerlink" title="第二步，手机安装阿里云app"></a>第二步，手机安装阿里云app</h2><p>阿里云app带有shell工具和opt验证模块（虚拟MFA），可以根据自己情况安装，我因为服务器和域名都在阿里云，就下了阿里云app</p><h2 id="第三步，安装配置multiotp"><a href="#第三步，安装配置multiotp" class="headerlink" title="第三步，安装配置multiotp"></a>第三步，安装配置multiotp</h2><ul><li>下载：</li></ul><p>官方二进制地址：<a href="https://download.multiotp.net/credential-provider/">https://download.multiotp.net/credential-provider/</a></p><p>（在网页最下方提供有二进制下载地址）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-30.png"></p><ul><li>安装multiotp</li></ul><p>记住你的安装位置，一会要到目录中使用程序命令</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-27.png"></p><ul><li>配置地址</li></ul><p>如果仅仅是本机使用，空值即可（默认是本机地址）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-28.png"></p><ul><li>配置OPT验证选项</li></ul><p>根据需求勾选（如果你是办公室使用，本机登录也想验证，取消第一项的√）</p><p>（第一项：只有RDP3389使用OTP验证）</p><p>（第二项：禁用自动连接）</p><p>（第三项：启用缓存机制）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-38.png"></p><ul><li>配置OTP核心部分</li></ul><p>绑定OTP信息，需要先使用下面命令创建用户信息</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-35.png"></p><p>通过程序命令行下创建用户信息及二维码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#dos进入你的multiOTP目录,或者在目录里面右键“在此处打开cmd”</span><br><span class="line">cd “multiOTP目录”</span><br><span class="line">#创建administrator的OTP账户（windows系统中必须有你创建的账户，上图默认的当前的用户，如果你想对其他用户做OTP验证，就输入对应的用户名即可）</span><br><span class="line">multiotp -fastcreatenopin administrator</span><br><span class="line">#建立administrator对应的二维码图片（用手机阿里云app扫码绑定，获取OPT动态码）</span><br><span class="line">multiotp -qrcode administrator otp.png</span><br><span class="line">注！！！保存好二维码图片，否则手机恢复或丢失，就无法登录了</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-33.png"></p><p>扫码生成的二维码获取动态码，输入OTP，创建服务</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-36.png"></p><h2 id="第四步，测试"><a href="#第四步，测试" class="headerlink" title="第四步，测试"></a>第四步，测试</h2><p>局域网用其他电脑RDP测试一下</p><p>公网直接域名或IP测试</p><p>本机测试，需取消OTP选项中的第一个√</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二次验证 </tag>
            
            <tag> windows </tag>
            
            <tag> multiotp </tag>
            
            <tag> otp验证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos -webshell之ttyd</title>
      <link href="/posts/47d97286.html"/>
      <url>/posts/47d97286.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-25-1024x406.png"></p><p>背景：前几天去朋友家完，临时需要连接家里的centos，但他电脑上没有安装shell类的工具，避免给朋友电脑装太多“垃圾”（shell工具及服务秘钥），所以找了下web版的shell，百度了一下有很多，这里我推荐一下ttyd。</p><p>ttyd是一款开源的webshell工具，支持多平台 macOS, Linux, FreeBSD&#x2F;OpenBSD, OpenWrt, Windows。</p><p>作者源地址<a href="https://github.com/tsl0922/ttyd%EF%BC%8C%E4%B8%8B%E8%BD%BD%E9%A1%B5%E4%B9%9F%E6%9C%89%E5%B7%B2%E7%BC%96%E8%AF%91%E5%A5%BD%E7%9A%84%E6%96%87%E4%BB%B6">https://github.com/tsl0922/ttyd，下载页也有已编译好的文件</a></p><ul><li><p>流程</p><ul><li><p>下载ttyd</p></li><li><p>防火墙添加放行端口（7681）</p></li><li><p>移动ttyd到&#x2F;usr&#x2F;sbin</p></li><li><p>添加systemctl服务</p></li><li><p>测试ttyd</p></li></ul></li></ul><h2 id="第一步，下载ttyd"><a href="#第一步，下载ttyd" class="headerlink" title="第一步，下载ttyd"></a>第一步，下载ttyd</h2><p>我这里直接用我的gitee文件，也是从作者那下载的1.6.3，如果版本更新你也可以从作者github下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#安装git</span><br><span class="line">yum -y install git</span><br><span class="line">#git我的ttyd</span><br><span class="line">git clone https://gitee.com/ffing/ttyd_webshell-1.6.3.git</span><br></pre></td></tr></table></figure><h2 id="第二步，防火墙添加放行端口（7681）"><a href="#第二步，防火墙添加放行端口（7681）" class="headerlink" title="第二步，防火墙添加放行端口（7681）"></a>第二步，防火墙添加放行端口（7681）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#永久放行端口：7681</span><br><span class="line">firewall-cmd --zone=public --add-port=7681 --permanent</span><br><span class="line">#重新加载防火墙</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">#备注：有朋友不喜欢用端口，可以使用本地web服务器做反向代理，切记将localhost改为127.0.0.1，否则解析跳转很慢，本人喜欢端口（因为家庭宽带不开放80、443所以域名也是要跳转端口的不实用 o(╥﹏╥)o ）</span><br></pre></td></tr></table></figure><h2 id="第三步，复制ttyd到-x2F-usr-x2F-sbin"><a href="#第三步，复制ttyd到-x2F-usr-x2F-sbin" class="headerlink" title="第三步，复制ttyd到&#x2F;usr&#x2F;sbin"></a>第三步，复制ttyd到&#x2F;usr&#x2F;sbin</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#将下载的ttyd移动到/usr/sbin/下</span><br><span class="line"></span><br><span class="line">mv ./ttyd_webshell-1.6.3/ttyd /usr/sbin</span><br><span class="line"></span><br><span class="line">#增加ttyd执行权限</span><br><span class="line"></span><br><span class="line">chmod +x /</span><br><span class="line"></span><br><span class="line">#查看ttyd版本</span><br><span class="line"></span><br><span class="line">ttyd -v</span><br><span class="line"></span><br><span class="line">#启动ttyd，没有密码验证(访问地址：http://ip:7681)</span><br><span class="line"></span><br><span class="line">ttyd bash</span><br><span class="line"></span><br><span class="line">#增加验证访问，用户名：admin，密码123456（访问地址：http://ip:7681）</span><br><span class="line"></span><br><span class="line">ttyd  -c admin:123456 bash</span><br><span class="line"></span><br><span class="line">#如想更改默认端口可增加 -p 参数，如下指定为8080</span><br><span class="line"></span><br><span class="line">ttyd -p 8080 bash</span><br><span class="line">#ssl加密</span><br><span class="line">ttyd --ssl --ssl-cert 证书路径.crt --ssl-key 秘钥路径.key bash</span><br></pre></td></tr></table></figure><h2 id="第四步，添加systemctl服务"><a href="#第四步，添加systemctl服务" class="headerlink" title="第四步，添加systemctl服务"></a>第四步，添加systemctl服务</h2><p>为了方便管理，将ttyd增加系统服务，通过systemctl管理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#移动ttyd.service服务文件到/usr/lib/systemd/system/目录下（有朋友喜欢直接放在/etc/systemd/system/目录下，最终效果都是一样，区别在于一个是软链接另一个是原文件，可以自行百度）</span><br><span class="line">mv  ./ttyd.service /usr/lib/systemd/system</span><br><span class="line">#重新加载systemctl</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">#ok，可以通过systemctl管理了</span><br><span class="line">systemctl start ttyd</span><br><span class="line">systemctl stop ttyd</span><br><span class="line">systemctl restart ttyd</span><br><span class="line">systemctl enable ttyd</span><br></pre></td></tr></table></figure><p>下面是我的ttyd.service文件内容，证书、ssl自行添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=ttyd</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/sbin/ttyd -c admin:123456 bash</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="第五步，测试"><a href="#第五步，测试" class="headerlink" title="第五步，测试"></a>第五步，测试</h2><p>确认防火墙放行端口已增加，服务已启动，我们就可以通过浏览器访问了</p><p>再重申一下，如果想更换默认端口，可以加-p 参数</p><p><a href="http://ttyd服务ip地址：7681">http://ttyd服务ip地址：7681</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ttyd </tag>
            
            <tag> webshell </tag>
            
            <tag> webssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wordpress-钉钉扫码登录（Wechat Social 插件）</title>
      <link href="/posts/5cd14924.html"/>
      <url>/posts/5cd14924.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-23.png"></p><p>扫码登录后台，避免了密码的泄露。</p><p>最初想用微信扫码登录，但需要微信公众号认证，个人无法实现（当然除了money以外）</p><p>后来就想到钉钉，上班不是微信就是钉钉，那就上钉钉吧（最主要的是任何一个api接口前期开发者不需要过多的审核流程）</p><p>有兴趣的也可以看一下——&gt; <a href="https://developers.dingtalk.com/document/mobile-app-guide/procedures-for-authorized-logon-to-ios-applications">开发者文档 接入钉钉登录</a></p><ul><li>流程<ul><li>安装<strong>Wechat Social</strong> 插件</li><li>钉钉开发者创建登录应用（获取appid及key）</li><li>配置<strong>Wechat Social</strong></li><li>用户绑定钉钉</li></ul></li></ul><h2 id="第一步，安装Wechat-Social"><a href="#第一步，安装Wechat-Social" class="headerlink" title="第一步，安装Wechat Social"></a>第一步，安装<strong>Wechat Social</strong></h2><p>wordpress后台，安装<strong>Wechat Social</strong> 后，直接启用。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-9.png"></p><h2 id="第二步，钉钉开发者创建登录应用"><a href="#第二步，钉钉开发者创建登录应用" class="headerlink" title="第二步，钉钉开发者创建登录应用"></a>第二步，钉钉开发者创建登录应用</h2><p>钉钉开发者平台 官网:<a href="https://open-dev.dingtalk.com/">https://open-dev.dingtalk.com</a></p><p>登录钉钉开发者平台</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-12-1024x440.png"></p><p>跳转连接到登录页面</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-11-1024x379.png"></p><p>注册企业或组织（可以随意注册，非必要认证）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-10.png"></p><p>注册完成后，会跳转到OA页面，我们不用管，重新返回开发者网址再次点击登录，即可跳转到开发者页面。</p><p>应用开发——登录——创建扫码登录应用授权</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-13-1024x677.png"></p><p>创建app信息，回调地址是你wordpress站点地址（也可以去<strong>Wechat Social</strong>设置里面看到）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-18.png"></p><p>如果不确定回调地址，也可以通过<strong>Wechat Social</strong>钉钉设置中看到，如下图</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-17.png"></p><p>创建完成后就可以看到appid和key，不要关闭网页，返回wordpress后台</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-19-1024x667.png"></p><h2 id="第三步，配置Wechat-Social"><a href="#第三步，配置Wechat-Social" class="headerlink" title="第三步，配置Wechat Social"></a>第三步，配置<strong>Wechat Social</strong></h2><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-14-1024x631.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-15.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-16.png"></p><p>将钉钉开发者刚创建的appid和key粘贴到下图，保存，配置完成</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-21-1024x462.png"></p><h2 id="第四步，绑定钉钉账号"><a href="#第四步，绑定钉钉账号" class="headerlink" title="第四步，绑定钉钉账号"></a>第四步，绑定钉钉账号</h2><p>wordpress后台，用户——编辑——绑定——“弹出钉钉二维码绑定即可”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-22.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wordpress </tag>
            
            <tag> Wechat Social </tag>
            
            <tag> 钉钉扫码登录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wordpress-手势验证登录（VAPTCHA插件）</title>
      <link href="/posts/32181bd8.html"/>
      <url>/posts/32181bd8.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-8.png"></p><p>常见的数字、字母、图片验证见多了，今天就我顺手玩了下手势验证效果很不错，顺带记录下一。</p><ul><li>流程很简单<ul><li>安装 VAPTCHA 插件</li><li>注册 VAPTCHA 账号（用来获取VID和KEY）</li><li>配置 VAPTCHA</li></ul></li></ul><h2 id="第一步，安装VAPTCHA插件"><a href="#第一步，安装VAPTCHA插件" class="headerlink" title="第一步，安装VAPTCHA插件"></a>第一步，安装VAPTCHA插件</h2><p>登录wordpress后台，安装VAPTCHA，安装完成，直接启用。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-2.png"></p><h2 id="第二步，注册VAPTCHA"><a href="#第二步，注册VAPTCHA" class="headerlink" title="第二步，注册VAPTCHA"></a>第二步，注册VAPTCHA</h2><p>VAPTCHA官网：<a href="https://www.vaptcha.com/">https://www.vaptcha.com</a></p><p>手机号注册账号</p><p>创建验证</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-4-1024x513.png"></p><p>填写验证的域名，提交即可</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-5.png"></p><p>提交完成后，即可看到我们需要的VID和KEY值，不要关闭网页，我们返回wordpress后台</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-6-1024x457.png"></p><h2 id="第三步，配置VAPTCHA"><a href="#第三步，配置VAPTCHA" class="headerlink" title="第三步，配置VAPTCHA"></a>第三步，配置VAPTCHA</h2><p>wordpress后台，设置——VAPTCHA——输入刚刚获取的VID和KEY，保存即可</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/04/image-7.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vaptcha </tag>
            
            <tag> 手势验证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 创建多层目录</title>
      <link href="/posts/4b43e5d3.html"/>
      <url>/posts/4b43e5d3.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#123;多级目录&#125;</span><br></pre></td></tr></table></figure><p>当我们创建多层目录的时候，上层目录不存在就需要mkdir命令加入 [p] 参数</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 安装bash-completion包使用Tab补全命令</title>
      <link href="/posts/b48552f.html"/>
      <url>/posts/b48552f.html</url>
      
        <content type="html"><![CDATA[<p>centos在最小化安装的时候会发现使用bash命令tab无法联想出完整命令，安装bash-completion包解决问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#如果记不住包名，可以查询yum源包含bash相关的包，从查询列表可以看到bash-completion</span><br><span class="line">yum list grep bash</span><br><span class="line">#安装bash-completion</span><br><span class="line">yum -y install bash-completion</span><br><span class="line">#进入bash子进程，刷新bash（也可以退出重连，或重启，比较麻烦）</span><br><span class="line">bash</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bash </tag>
            
            <tag> completion </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 设置命令别名</title>
      <link href="/posts/c899bac2.html"/>
      <url>/posts/c899bac2.html</url>
      
        <content type="html"><![CDATA[<p>当前用户配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#编辑家目录下的“.bash_profile”文件，即可</span><br><span class="line">vi ~/.bash_profile</span><br></pre></td></tr></table></figure><p>全局配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#编辑“/etc/profile”</span><br><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure><p>譬如习惯使用vi命令，但vim更方便，所以我们可以实现当敲vi命令时，就是vim命令，如下图：</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-88.png"></p><p>最后使用source命令，使别名立即生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#source命令后跟文件路径</span><br><span class="line"></span><br><span class="line">#当前用户生效</span><br><span class="line">#source ~ / .bash_profile</span><br><span class="line">#全局生效</span><br><span class="line">#source /etc/profiel</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 别名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7-安装配置phpmyadmin</title>
      <link href="/posts/8037927d.html"/>
      <url>/posts/8037927d.html</url>
      
        <content type="html"><![CDATA[<p>phpMyAdmin是一个非常受欢迎的基于web的MySQL数据库管理工具。它能够创建和删除数据库，创建&#x2F;删除&#x2F;修改表格,删除&#x2F;编辑&#x2F;新增字段，执行SQL脚本等。</p><ul><li>一，安装lnmp（nginx+php+mysql）</li><li>二，下载phpmyadmin安装包，并解压到nginx站点目录</li><li>三，nginx配置虚拟主机后</li><li>四，防火墙放行端口，关闭selinux</li><li>五，重启nginx，测试phpmyadmin站点</li></ul><h2 id="第一步，安装nginx（web服务器）"><a href="#第一步，安装nginx（web服务器）" class="headerlink" title="第一步，安装nginx（web服务器）"></a>第一步，安装nginx（web服务器）</h2><p>#安装wget(下载工具)<br>yum -y install wget<br>#安装unzip（zip解压工具）<br>yum -y install unzip<br>#安装lnmp（下面我个人的gitee脚本，如某个rpm已安装会自动跳过）<br>curl -o lnmp-1.5.7_init.sh <a href="https://gitee.com/ffing/onekey/raw/master/lnmp-1.5.7/_init.sh">https://gitee.com/ffing/onekey/raw/master/lnmp-1.5.7\_init.sh</a> &amp;&amp; bash lnmp-1.5.7_init.sh</p><h2 id="第二步，下载phpmyadmin安装包，并解压到nginx站点目录"><a href="#第二步，下载phpmyadmin安装包，并解压到nginx站点目录" class="headerlink" title="第二步，下载phpmyadmin安装包，并解压到nginx站点目录"></a>第二步，下载phpmyadmin安装包，并解压到nginx站点目录</h2><p>phpmyadmin官网：<a href="https://www.phpmyadmin.net/">https://www.phpmyadmin.net</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#下载phpmyadmin</span><br><span class="line">wget https://files.phpmyadmin.net/phpMyAdmin/5.1.0/phpMyAdmin-5.1.0-all-languages.zip</span><br><span class="line"></span><br><span class="line">#解压下载的phpmyadmin包，到nginx站点目录</span><br><span class="line">unzip phpMyAdmin-5.1.0-all-languages.zip  -d /usr/share/nginx/</span><br></pre></td></tr></table></figure><h2 id="第三步，nginx配置虚拟主机后，重启nginx"><a href="#第三步，nginx配置虚拟主机后，重启nginx" class="headerlink" title="第三步，nginx配置虚拟主机后，重启nginx"></a>第三步，nginx配置虚拟主机后，重启nginx</h2><p>默认nginx的虚拟站点配置文件位于&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;</p><p>(可在nginx配置文件&#x2F;etc&#x2F;nginx&#x2F;nginx.conf文件中看到include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;*）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#创建phpmyadmin虚拟主机文件(文件名可自定义，但必须以.conf结尾)</span><br><span class="line">vi  /etc/nginx/conf.d/phpmyadmin.conf</span><br></pre></td></tr></table></figure><p>下面是我的虚拟主机配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">listen 888;</span><br><span class="line">root /usr/share/nginx/phpmyadmin;</span><br><span class="line">index index.html index.php;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ \.php$        &#123;</span><br><span class="line">fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">fastcgi_index  index.php;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">include        fastcgi_params;</span><br><span class="line">                        &#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="第四步，防火墙添加放行端口"><a href="#第四步，防火墙添加放行端口" class="headerlink" title="第四步，防火墙添加放行端口"></a>第四步，防火墙添加放行端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#添加放行端口888</span><br><span class="line">firewall-cmd --zone=public --add-port=888/tcp  --permanent</span><br><span class="line">#防火墙重新加载</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">#临时关闭seliunx</span><br><span class="line">setenforce 0</span><br><span class="line">#永久关闭selinux</span><br><span class="line">sed -i &quot;s/SELINUX=enforcing/SELINUX=disable/g&quot; /etc/selinux/config</span><br></pre></td></tr></table></figure><h2 id="第五步，重启nginx，打开phpmyadmin站点"><a href="#第五步，重启nginx，打开phpmyadmin站点" class="headerlink" title="第五步，重启nginx，打开phpmyadmin站点"></a>第五步，重启nginx，打开phpmyadmin站点</h2><p>重启nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>phpmyadmin站点为：<a href="http://web服务器站点ip:8080/">http://web服务器站点IP:8080</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-87.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> phpmyadmin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 跳转指定域名端口</title>
      <link href="/posts/ad864009.html"/>
      <url>/posts/ad864009.html</url>
      
        <content type="html"><![CDATA[<p>跳转本地8080端口（端口可自定义）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  # 反向代理到 8080 端口</span><br><span class="line">  proxy_pass http://127.0.0.1:8080;</span><br><span class="line">  add_header Access-Control-Allow-Origin *;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跳转ffing.fun的8080端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  # 反向代理到ffing.fun 8080 端口</span><br><span class="line">  proxy_pass http://ffing.fun:8080;</span><br><span class="line">  #跨域时必须有</span><br><span class="line">  add_header Access-Control-Allow-Origin *;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NGINX跳转 </tag>
            
            <tag> 域名端口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>群辉NAS -物理机安装群辉折腾笔记</title>
      <link href="/posts/a86fe2b6.html"/>
      <url>/posts/a86fe2b6.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-65.png"></p><p>从最早的邮件存储附件，到FTP，到网盘，再到现在的NAS，存储的路真的是远走越快了。</p><p>容我先讲下我的存储经历</p><ul><li>最初的邮箱是我的存储空间，</li><li>某一天网盘出现，好久不长网盘倒了（360网盘，呵呵呵。。。）</li><li>后来net123工具，把我家里的电脑内网映射做存储（带宽限制，小文件还可以传输，大文件。。。）</li><li>再后来云服务器，搭建web的同时搭建了FTP（流量带宽问。。。）</li><li>再再后来，云服务器centos搭建各种网盘测试，无一例外带宽问题得不到解决</li><li>ok，家庭宽带有了公网IP，centos 网盘搞起，虽然家庭宽带的上传带宽也有限制2~3M的上行，至少够我用了（我的笔记、代码都是小文件）</li><li>中间，我想过用cdn存储直接做网盘，但发现运营商还是又各种限制的还是算了。</li><li>后来NAS出现了，真是雨后春笋啊，各种NAS层出不穷，让我对NAS有了兴趣，随后做了测试，感觉还可以，但docker依赖性很强，各种nas的webui都是为了更友好的方便使用者去操作，但却多了很多限制，我还是偏向于自己一台centos做个网盘省事，而且也有利于我去排查故障。</li></ul><p>NAS优点：友好的web界面，傻瓜式操作，自带DDNS方便外网映射，doker软件要什么有什么，硬件配置低功耗低随便攒，RAID保护（当然恢复数据也是要RMB的）</p><p>NAS缺点：框架式系统，限制太多，只能个NAS</p><p>研究了一下网上破解比较多的系统，群辉和威联通，这里我就写个群辉吧</p><h2 id="正文开始"><a href="#正文开始" class="headerlink" title="正文开始"></a><strong>正文开始</strong></h2><p>群辉官网：<a href="https://www.synology.cn/zh-cn">https://www.synology.cn/zh-cn</a></p><p>群辉镜像下载：<a href="https://archive.synology.com/download/Os/DSM/">https://archive.synology.com/download/Os/DSM/</a></p><p>群辉在线搜索局域网设备：<a href="http://find.synology.com/">http://find.synology.com/</a></p><p>群辉下载中心：<a href="https://www.synology.cn/zh-cn/support/download">https://www.synology.cn/zh-cn/support/download</a></p><p>群辉助手下载：再下载中心随便选择一个NAS型号，点击桌面程序，默认第一个就是桌面助手，点击下载对应自己版本的系统工具即可</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-67.png"></p><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><p>1、下载：Win32DiskImager 写入镜像文件到U盘——》<a href="https://8dx.pc6.com/hc6/Win32DiskImager_v1.0.exe">下载</a></p><p>2、下载：ChipEasy芯片无忧查看U盘vid，pid ,用于安装系统——》<a href="http://onlinedown.rbread04.cn/huajunsafe/ChipEasy-v1.620.zip">下载</a></p><p>3、下载：DSM引导文件（openos.org下载1.03b，当然也可以自己制作）——》<a href="https://www.openos.org/downloads/synology-dsm-6-2-2-loader-v1-04b.15/history">下载</a></p><p>3、下载：DSM系统镜像（我当时用的DSM_DS3615xs_25426.pat）——》<a href="https://global.download.synology.com/download/DSM/release/6.2.3/25426/DSM_DS3615xs_25426.pat">下载</a></p><p>4、下载：磁盘精灵，读取U盘grub.cfg引导文件</p><p>4、文本编辑器(记事本、写字板或者notepad类随意) 修改grub.cfg引导文件</p><p>5、引导文件 synoboot.img通过Win32DiskImager工具写入U盘</p><p>6、U盘一个，128M都可以的，用于安装系统</p><h2 id="第一步，将DSM引导写入U盘"><a href="#第一步，将DSM引导写入U盘" class="headerlink" title="第一步，将DSM引导写入U盘"></a>第一步，将DSM引导写入U盘</h2><p>解压刚下载的引导文件dsm.6.2.synoboot_ds3615xs.1.03b.zip</p><p>打开win32写入工具，浏览解压的引导文件synoboot.img，点击写入U盘</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-74.png"></p><h2 id="第二步，修改grub-cfig引导"><a href="#第二步，修改grub-cfig引导" class="headerlink" title="第二步，修改grub.cfig引导"></a>第二步，修改grub.cfig引导</h2><p>写好U盘，需要重新拔插一下，让电脑重新识别U盘文件</p><p>打开磁盘精灵，将U盘内ESP&#x2F;grub&#x2F;grub.cfg复制到桌面进行编辑</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-75.png"></p><p>然后，打开ChipEasy芯片无忧，查看你U盘的PID和VID，我们需要对桌面上的grub.cfg进行编辑，将芯片无忧查询到PID和VID，替换到grub.cfg文件中。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-76.png"></p><p>替换完成后，我们再将桌面上的grub.cfg拖回磁盘精灵U盘原来的位置，提示是否覆盖，我们点击“是”即可。</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-77.png"></p><p>至此我们的前期工作已经做完，开始系统安装</p><h2 id="三，系统安装"><a href="#三，系统安装" class="headerlink" title="三，系统安装"></a>三，系统安装</h2><p>1.将U盘插入准备转群辉的主机，并设置U盘为第一启动项，且引导方式为：传统BISO引导（legacy模式）（这个引导文件只支持BISO引导），出现如下画面</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-78.png"></p><p>2，打开群辉扫描网页<a href="http://find.synology.com/%EF%BC%8C%E6%89%AB%E6%8F%8F%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%BB%9C%EF%BC%8C%E5%8F%91%E7%8E%B0%E6%88%91%E4%BB%AC%E7%9A%84%E7%BE%A4%E8%BE%89%E8%AE%BE%E5%A4%87%EF%BC%8C%E9%80%89%E6%8B%A9%E5%AE%89%E8%A3%85">http://find.synology.com/，扫描本地网络，发现我们的群辉设备，选择安装</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-80.png"></p><p>3，安装镜像浏览选择DSM_DS3615xs_25426.pat，后面就是设置用户名密码，我因为安装太久了没有图了，网上随便贴点吧</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-81.png"></p><p>后面就是设置用户名、密码了</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-82.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-83.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-86.png"></p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 群辉NAS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑苹果 - dell 7040安装笔记</title>
      <link href="/posts/eec7867e.html"/>
      <url>/posts/eec7867e.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-45.png"><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/07/image-45.png"></a></p><p>网上看到很多基于intel平台的黑苹果，就自己网上攒了一套，安装了黑果小兵的10.15.2（19C57）实现完美度99%。（遗留问题：睡眠死机）</p><ul><li><p>硬件约2000RMB（有二手，也有我的其他机器配件）</p><ul><li>主板+机箱+电源（dell 7040m 准系统，芯片组Q170）</li><li>CPU ： I5 6600T</li><li>内存：8G*2（金士顿 DDR4 2133）</li><li>Nvme固态：256G （HP和西数都没问题）</li><li>WIFI模块：DW1820A</li></ul></li><li><p>系统</p><ul><li><a href="https://blog.daliansky.net/macOS-Catalina-10.15.2-19C57-Release-version-with-Clover-5100-original-image-Double-EFI-Version.html">黑果小兵-macOS Catalina 10.15.2(19C57) Installer for Clover 5100 and WEPE</a></li></ul></li><li><p>优化及常用app</p></li></ul><h2 id="一，硬件部分"><a href="#一，硬件部分" class="headerlink" title="一，硬件部分"></a>一，硬件部分</h2><p>硬件部分是根据我自己的需求攒够，当时正和在考虑软路由还是攒个小型服务器，再或者弄个矿机，结合到后期的拓展，我还是选择了一个中等平台的搭配，就譬如你现在看到这篇文章的时候，就用这个小主机搭建的wordpress。</p><p>硬件需要注意，mac系统对硬件还是很敏感：</p><p>1，主板，intel平台，网上也有amd平台的但不稳定需要漫长时间的填坑</p><p>2，内存，一线品牌或二线代工，尽力不要选择杂牌，否则系统安装直接卡内存</p><p>3，硬盘，sata协议应该都没问题，如果是nvme协议建议看网上的评测，我因为原来就有hp和西数的nvme固态所有都测试了一下都没问题</p><p>4，wifi模块，苹果默认使用的都是BCM的网卡，但js炒作价格起飞，我就用黑果小兵驱动的DW1820A依然完美驱动</p><p>5，视频接口，DP优先——&gt;HDMI——&gt;DVI——&gt;VGA</p><h2 id="二，系统安装"><a href="#二，系统安装" class="headerlink" title="二，系统安装"></a>二，系统安装</h2><p>1，打开BIOS的CFG LOCK，因为我的Q170默认是关闭的，所有需要先打开。</p><p>附教程：<a href="https://www.bilibili.com/read/cv4646116/">不刷BIOS修改AMI BIOS的方法（以CFG Lock为例） - 哔哩哔哩</a></p><p>2，黑果小兵系统写入U盘（8G以上）</p><p>黑果小兵系统：<a href="https://blog.daliansky.net/macOS-Catalina-10.15.2-19C57-Release-version-with-Clover-5100-original-image-Double-EFI-Version.html">macOS Catalina 10.15.2(19C57) Installer for Clover 5100 and WEPE</a></p><p>transmac写入U盘教程：<a href="http://www.xitongcheng.com/jiaocheng/xtazjc_article_41339.html">进入</a></p><p>etcher写入U盘工具下载：<a href="https://www.balena.io/etcher/">进入</a></p><p>3，开始安装，uefi模式启动U盘，进入黑果小兵clover，“install mac”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-60.png"></p><p>注意事项：测试其他的版本各种问题，有卡内存，有卡显卡，还有电源问题的，如果卡到某个界面不能顺利安装的话，就要自行百度（故障解决思路先硬件、后软件，因为系统故障太多多，而且因为我有多余配件，就先从硬件开始，内存更换槽位或是单槽位、换硬件或者减少硬件，先保证系统正常安装，再去优化）</p><p>4，选择中文，分区、安装系统，很简单，网上很多这里就不写了吧</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-61.png"></p><p>可能遇到的问题：提示副本损坏，这是只需要终端修改系统时间即可</p><p>输入命令<code>date 0201010116</code>，最后的16代表年份，2016年2月1日1时1分</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-62.png"></p><h2 id="三，优化及app"><a href="#三，优化及app" class="headerlink" title="三，优化及app"></a>三，优化及app</h2><p>优化系统是个很细致的活，你有耐心可以慢慢来，可以通过🍀四叶草来慢慢系统的优化，从取消跑码-V，到剔除多余的驱动，再到启动主题画面、登陆界面等，很多，因为黑苹果装的时间有点早了，忘的差不多了，我这里只是简单记录我的操作</p><p>1，EFI优化(如果没找到合适的可以去github下载别人)</p><p>2，剔除驱动，默认驱动目录CLOVER\kexts\Other</p><p>3，登录界面</p><p>4，app下载：我前面文章写的有app下载站点，自行查阅</p><p>温度监控类app必须有温控驱动Cpu温度virtualSMC_v*.*.*.kext</p><h2 id="遗留问题：必须关闭睡眠，否则睡眠会导致死机"><a href="#遗留问题：必须关闭睡眠，否则睡眠会导致死机" class="headerlink" title="遗留问题：必须关闭睡眠，否则睡眠会导致死机"></a>遗留问题：必须关闭睡眠，否则睡眠会导致死机</h2>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
          <category> 教程 </category>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果 </tag>
            
            <tag> dell-7040 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAC 国内常用app下载站点</title>
      <link href="/posts/e8fc0077.html"/>
      <url>/posts/e8fc0077.html</url>
      
        <content type="html"><![CDATA[<p>pc6：提供win和mac的下载站点</p><p><a href="http://www.pc6.com/">http://www.pc6.com/</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-53-1024x523.png"></p><p>马可波罗：mac的app下载站</p><p><a href="https://www.macbl.com/">https://www.macbl.com/</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-54-1024x654.png"></p><p>精品mac：可以提供下载app的所有版本（版本面很全）</p><p><a href="https://xclient.info/">https://xclient.info/</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-55-1024x791.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-56.png"></p><p>gofans：最新限免</p><p><a href="https://gofans.cn/">https://gofans.cn/</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-57-1024x518.png"></p><p>ISO限免：今日限免</p><p><a href="https://mergeek.com/free/apps">https://mergeek.com/free/apps</a></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-58-1024x713.png"></p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
          <category> 教程 </category>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> app </tag>
            
            <tag> 黑苹果 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx 配置文件添加gzip压缩</title>
      <link href="/posts/e4c1556a.html"/>
      <url>/posts/e4c1556a.html</url>
      
        <content type="html"><![CDATA[<p>将下面代码添加到http｛｝或 server｛｝中即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gzip on;</span><br><span class="line">gzip_min_length 1k;</span><br><span class="line">gzip_buffers 4 16k;</span><br><span class="line">#gzip_http_version 1.0;</span><br><span class="line">gzip_comp_level 2;</span><br><span class="line">gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;</span><br><span class="line">gzip_vary off;</span><br><span class="line">gzip_disable &quot;MSIE [1-6]\.&quot;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ngingx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx - wordpress 修改固定链接导致无法访问</title>
      <link href="/posts/ff57a397.html"/>
      <url>/posts/ff57a397.html</url>
      
        <content type="html"><![CDATA[<p>背景：导入wordpress备份，使用静态缓存需要修改固定链接，发现修改固定链接后无法访问</p><p>官方给出的解决方法：在虚拟主机中加入如下字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">try_files $uri $uri/ /index.php?$args;</span><br><span class="line">&#125;</span><br><span class="line">rewrite /wp-admin$ $scheme://$host$uri/ permanent;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-52.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7 - aria2+yaaw实现web页面下载管理</title>
      <link href="/posts/aa82e5fa.html"/>
      <url>/posts/aa82e5fa.html</url>
      
        <content type="html"><![CDATA[<p>aria2支持http及bt的下载器，但纯命令行的操作对应linux的新手而言不是很友好，所以就有高手制作了aria2的web管理页面，网上的webui有很多，对比后推荐2款：AriaNG和yaaw</p><p>AriaNG：页面颜值很高，但无法对下载的文件重命名</p><p>Yaaw：页面简洁，可以对下载的文件重命名，而且可以更改下载路径</p><p>可以根据自己的情况，去选择webui，当然我更倾向于yaaw。</p><ul><li>第一步：安装aria2，配置aria2.conf文件</li><li>第二步：安装http服务器</li><li>第三步：下载yaaw中文版，并配置http服务器虚拟主机文件</li><li>第四步：开放端口,关闭selinux</li><li>第五步：测试yaaw_webui,并修改地址</li><li>第六步：创建aria2系统服务，通过systemctl控制服务</li></ul><p>拓展项：增加http简单访问验证</p><p>教程开始</p><h2 id="一，1-安装aria2"><a href="#一，1-安装aria2" class="headerlink" title="一，1.安装aria2"></a>一，1.安装aria2</h2><p>通过yum安装aria2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#安装epel源</span><br><span class="line">yum -y install epel-release</span><br><span class="line">#安装aria2</span><br><span class="line">yum -y install aria2</span><br><span class="line">#查看aria2版本</span><br><span class="line">aria2c -v</span><br></pre></td></tr></table></figure><h2 id="一，2-配置aria2-conf"><a href="#一，2-配置aria2-conf" class="headerlink" title="一，2.配置aria2.conf"></a>一，2.配置aria2.conf</h2><p>a.创建aria所需文件及目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#创建下载目录 /aria2_download</span><br><span class="line">mkdir /aria2_download</span><br><span class="line">#创建配置目录 /etc/aria2/</span><br><span class="line">mkdir /etc/aria2</span><br><span class="line">#创建日志文件 /var/log/aria2.log</span><br><span class="line">touch /var/log.aria2.log</span><br><span class="line">#创建会话文件 /etc/aria2/aria2.session</span><br><span class="line">touch /etc/aria2/aria2.session</span><br></pre></td></tr></table></figure><p>b.创建配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#创建配置文件</span><br><span class="line">vi  /etc/aria2/aria2.conf</span><br></pre></td></tr></table></figure><p>下面为我的aria2.conf内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">#########启动前需先建立对应目录及文件#######</span><br><span class="line">#下载目录 /aria2_download</span><br><span class="line">#配置目录 /etc/aria2/</span><br><span class="line">#日志文件 /var/log/aria2.log</span><br><span class="line">#会话文件 /etc/aria2/aria2.session</span><br><span class="line">#</span><br><span class="line"># 日志 </span><br><span class="line">log-level=warn</span><br><span class="line">log=/var/log/aria2.log</span><br><span class="line"></span><br><span class="line"># 后台运行</span><br><span class="line">#方法一，daemon=true</span><br><span class="line">#方法二，启动时加入-D参数：ari2c -D</span><br><span class="line"># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置</span><br><span class="line">dir=/aria2_download</span><br><span class="line"># 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M </span><br><span class="line">disk-cache=32M </span><br><span class="line"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</span><br><span class="line"># 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc </span><br><span class="line"># falloc和trunc则需要文件系统和内核支持</span><br><span class="line"># NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项</span><br><span class="line">file-allocation=none </span><br><span class="line"># 断点续传 </span><br><span class="line">continue=true </span><br><span class="line">## 下载连接相关 ## </span><br><span class="line"># 最大同时下载任务数, 运行时可修改, 默认:5 </span><br><span class="line">max-concurrent-downloads=5 </span><br><span class="line"># 同一服务器连接数, 添加时可指定, 默认:1 </span><br><span class="line">max-connection-per-server=5</span><br><span class="line"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</span><br><span class="line"># 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</span><br><span class="line">min-split-size=10M</span><br><span class="line"># 单个任务最大线程数, 添加时可指定, 默认:5</span><br><span class="line">split=32</span><br><span class="line"># 整体下载速度限制, 运行时可修改, 默认:0</span><br><span class="line">#max-overall-download-limit=0</span><br><span class="line"># 单个任务下载速度限制, 默认:0 </span><br><span class="line">#max-download-limit=0 </span><br><span class="line"># 整体上传速度限制, 运行时可修改, 默认:0 </span><br><span class="line">#max-overall-upload-limit=0 </span><br><span class="line"># 单个任务上传速度限制, 默认:0 </span><br><span class="line">#max-upload-limit=0</span><br><span class="line"># 禁用IPv6, 默认:false</span><br><span class="line">disable-ipv6=true</span><br><span class="line"># 进度保存相关 ##</span><br><span class="line"># 从会话文件中读取下载任务</span><br><span class="line">input-file=/etc/aria2/aria2.session </span><br><span class="line"># 在Aria2退出时保存`错误/未完成`的下载任务到会话文件 </span><br><span class="line">save-session=/etc/aria2/aria2.session </span><br><span class="line"># 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0</span><br><span class="line">save-session-interval=60</span><br><span class="line">## RPC相关设置 ##</span><br><span class="line"># 启用RPC, 默认:false </span><br><span class="line">enable-rpc=true</span><br><span class="line"># 允许所有来源, 默认:false</span><br><span class="line">rpc-allow-origin-all=true</span><br><span class="line"># 允许非外部访问, 默认:false</span><br><span class="line">rpc-listen-all=true</span><br><span class="line"># 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同</span><br><span class="line">#event-poll=select</span><br><span class="line"># RPC监听端口, 端口被占用时可以修改, 默认:6800</span><br><span class="line">rpc-listen-port=6800</span><br><span class="line"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span><br><span class="line">#rpc-secret= </span><br><span class="line"># 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span><br><span class="line">#rpc-user=</span><br><span class="line"># 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span><br><span class="line">#rpc-passwd= </span><br><span class="line"># BT/PT下载相关 ##</span><br><span class="line"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span><br><span class="line">follow-torrent=true </span><br><span class="line">#BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999</span><br><span class="line">listen-port=60002</span><br><span class="line"># 单个种子最大连接数, 默认:55</span><br><span class="line">#bt-max-peers=55</span><br><span class="line"># 打开DHT功能, PT需要禁用, 默认:true</span><br><span class="line">enable-dht=false</span><br><span class="line"># 打开IPv6 DHT功能, PT需要禁用</span><br><span class="line">#enable-dht6=false</span><br><span class="line"># DHT网络监听端口, 默认:6881-6999</span><br><span class="line">#dht-listen-port=6881-6999</span><br><span class="line"># 本地节点查找, PT需要禁用, 默认:false</span><br><span class="line">#bt-enable-lpd=false</span><br><span class="line"># 种子交换, PT需要禁用, 默认:true</span><br><span class="line">enable-peer-exchange=false</span><br><span class="line"># 每个种子限速, 对少种的PT很有用, 默认:50K</span><br><span class="line">#bt-request-peer-speed-limit=50K</span><br><span class="line"># 客户端伪装, PT需要</span><br><span class="line">peer-id-prefix=-TR2770- </span><br><span class="line">user-agent=Transmission/2.77 </span><br><span class="line"># 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0</span><br><span class="line">seed-ratio=0</span><br><span class="line"># 强制保存会话, 即使任务已经完成, 默认:false</span><br><span class="line"># 较新的版本开启后会在任务完成后依然保留.aria2文件，保存下载历史记录</span><br><span class="line">force-save=true</span><br><span class="line"># BT校验相关, 默认:true</span><br><span class="line">#bt-hash-check-seed=true</span><br><span class="line"># 继续之前的BT任务时, 无需再次校验, 默认:false</span><br><span class="line">bt-seed-unverified=true</span><br><span class="line"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span><br><span class="line">bt-save-metadata=true </span><br></pre></td></tr></table></figure><h2 id="一，3-启动aria2"><a href="#一，3-启动aria2" class="headerlink" title="一，3.启动aria2"></a>一，3.启动aria2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#启动aria2(加-D 实现后台隐藏)</span><br><span class="line">aria2c --conf-path=/etc/aria2/aria2.conf -D</span><br><span class="line">#检测aria2进程</span><br><span class="line">ps -ef grep aria2</span><br><span class="line">#检测aria2端口，默认6800</span><br><span class="line">netstat -tlunp aria2</span><br></pre></td></tr></table></figure><h2 id="二，安装http服务器（如已安装，可跳过此步骤）"><a href="#二，安装http服务器（如已安装，可跳过此步骤）" class="headerlink" title="二，安装http服务器（如已安装，可跳过此步骤）"></a>二，安装http服务器（如已安装，可跳过此步骤）</h2><p>http服务器常用apache和nginx，我这里使用nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#安装epel源</span><br><span class="line">yum -y install epel-release</span><br><span class="line">#安装nginx</span><br><span class="line">yum -y install nginx</span><br><span class="line">#启动nginx</span><br><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure><h2 id="三，1-下载yaaw中文版"><a href="#三，1-下载yaaw中文版" class="headerlink" title="三，1.下载yaaw中文版"></a>三，1.下载yaaw中文版</h2><p>这里使用我的gitee仓库yaaw中文版，当然你也可以去Github下载原作者的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#安装git</span><br><span class="line">yum -y install git</span><br><span class="line">#git我的yaaw中文版，到nginx站点目录</span><br><span class="line">git clone https://gitee.com/ffing/yaaw-zh.git /usr/share/nginx/yaaw-zh</span><br></pre></td></tr></table></figure><h2 id="三，2-创建yaaw虚拟主机配置文件"><a href="#三，2-创建yaaw虚拟主机配置文件" class="headerlink" title="三，2.创建yaaw虚拟主机配置文件"></a>三，2.创建yaaw虚拟主机配置文件</h2><p>a.创建yaaw虚拟主机配置文件，端口为6808（端口可以根据自己需求改动）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#创建nginx虚拟主机文件</span><br><span class="line">vi /etc/nginx/conf.d/yaaw-zh.conf</span><br></pre></td></tr></table></figure><p>下面为我的yaaw-zh.conf配置文件内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 6808;</span><br><span class="line">root /usr/share/nginx/yaaw-zh;</span><br><span class="line">index index.html;</span><br><span class="line">location / &#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四，开放防火墙端口"><a href="#四，开放防火墙端口" class="headerlink" title="四，开放防火墙端口"></a>四，开放防火墙端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#nginx默认80端口</span><br><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line">#aria2默认6800端口</span><br><span class="line">firewall-cmd --zone=public --add-port=6800/tcp --permanent</span><br><span class="line">#yaaw虚拟主机端口</span><br><span class="line">firewall-cmd --zone=public --add-port=6808/tcp --permanent</span><br><span class="line">#重现加载防火墙</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="五，测试yaaw-webui"><a href="#五，测试yaaw-webui" class="headerlink" title="五，测试yaaw_webui"></a>五，测试yaaw_webui</h2><p>！！！修改配置需google浏览器或IE内核急速模式！！！</p><p>先重启nginx使aria2虚拟主机生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>打开google浏览器输入地址：http:&#x2F;&#x2F;服务器IP：6808</p><p>点击右上角“小扳手”，来替换自己的aria2地址</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-49-1024x334.png"></p><p>将“localhost”替换为你的服务器ip地址，譬如我替换为我外网域名<a href="http://ffing.cn:6800/jsonrpc%EF%BC%88%E6%AF%8F%E6%AC%A1%E9%83%BD%E8%A6%81%E4%BF%AE%E6%94%B9%E5%9C%B0%E5%9D%80%E5%BE%88%E9%BA%BB%E7%83%A6%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BF%AE%E6%94%B9yaaw-zh/js/yaaw.js%E6%96%87%E4%BB%B6%EF%BC%8C%E6%B0%B8%E4%B9%85%E6%9B%BF%E6%8D%A2%E5%9C%B0%E5%9D%80%EF%BC%89">http://ffing.cn:6800/jsonrpc（每次都要修改地址很麻烦，可以修改yaaw-zh/js/yaaw.js文件，永久替换地址）</a></p><p>如果提示连接aria2服务器失败，简称aria2服务是否启动！</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-51-1024x446.png"></p><p>如此配置结束，可以正常下载文件进行测试</p><h2 id="六，创建aria2系统服务及开机启动"><a href="#六，创建aria2系统服务及开机启动" class="headerlink" title="六，创建aria2系统服务及开机启动"></a>六，创建aria2系统服务及开机启动</h2><p>a.创建aria2系统服务为方便管理aria2，通过systemctl管理器控制aria2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/aria2.service</span><br></pre></td></tr></table></figure><p>下面为我的aria2.server文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=aria2</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">PIDFile=/run/aria2.pid</span><br><span class="line">ExecStart=/usr/bin/aria2c --conf-path=/etc/aria2/aria2.conf</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>b，创建完服务文件，需要重新加载服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>c，通过systemctl添加开机启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#开机启动aria2</span><br><span class="line">systemctl enable aria2</span><br><span class="line">#启动aria2</span><br><span class="line">systemctl start aria2</span><br><span class="line">#停止aria2</span><br><span class="line">systemctl stop aria2</span><br><span class="line">#重启aria2</span><br><span class="line">systemctl restart arai2</span><br></pre></td></tr></table></figure><h2 id="拓展项：增加http简单访问验证"><a href="#拓展项：增加http简单访问验证" class="headerlink" title="拓展项：增加http简单访问验证"></a>拓展项：增加http简单访问验证</h2><p>生成密码文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#安装生成密码工具</span><br><span class="line">yum install httpd-tools</span><br><span class="line"> </span><br><span class="line">#第一次生成密码并且保存到指定文件</span><br><span class="line"> htpasswd -bc /etc/aria2/user.passwd admin 123456</span><br><span class="line"> </span><br><span class="line">#之后添加用户和密码不需要-c参数</span><br><span class="line"> htpasswd -b /etc/aria2/user.passwd test 123456</span><br></pre></td></tr></table></figure><p>虚拟主机配置文件中，在server｛｝内加入校验路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 6808;</span><br><span class="line">root /usr/share/nginx/yaaw-zh;</span><br><span class="line">index index.html;</span><br><span class="line"></span><br><span class="line">    #这里是验证时的提示信息</span><br><span class="line">    auth_basic &quot;input password&quot;;</span><br><span class="line">    #密码校验路径</span><br><span class="line">    auth_basic_user_file /etc/aria2/user.passwd;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aria2 </tag>
            
            <tag> yaaw </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度CDN 加速教程</title>
      <link href="/posts/5f4e8ae1.html"/>
      <url>/posts/5f4e8ae1.html</url>
      
        <content type="html"><![CDATA[<p>国内免费的CDN很多，测试了3个CDN免费版本的腾讯cdn、百度cdn、七牛cdn，这里写下教程及对比。</p><p>**<em>CND</em>**对比</p><p>腾讯</p><p>百度</p><p>七牛</p><p>免费流量</p><p>新用户送120G<br>20G&#x2F;月（6个月）</p><p>10G&#x2F;天</p><p>10G&#x2F;月</p><p>接入方式</p><p>CNAME接入</p><p>NS接入<br>CNAME接入</p><p>CNAME接入</p><p>源端口</p><p>支持</p><p>不支持</p><p>不支持</p><p>特点</p><p>自定义源端口</p><p>2种接入方式，支持<br>泛域名，3种记录<br>A、MX、CNAME</p><p>自定义源端口</p><p>教程开始，先注册账号、<strong>实名！！！</strong></p><p>百度CDN地址：<a href="https://su.baidu.com/console/index.html">https://su.baidu.com/console/index.html</a></p><h2 id="1-配置加速域名"><a href="#1-配置加速域名" class="headerlink" title="1.配置加速域名"></a>1.配置加速域名</h2><p>登录后，我的网站——&gt;添加网站——&gt;选择接入方式（NS、CNAME）</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-30-1024x269.png"></p><h2 id="2-CDN接入（两种方式）"><a href="#2-CDN接入（两种方式）" class="headerlink" title="2.CDN接入（两种方式）"></a>2.CDN接入（两种方式）</h2><ul><li>第一种方式NS接入：通过修改DNS直接解析，实现CDN缓存加速，支持泛域名解析</li></ul><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-31-1024x353.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-32-1024x282.png"></p><p>获取DNS后，我们需要去修改域名的DNS地址，实现域名加速解析，我这里以 阿里云修改DNS为例，进入阿里云控制台——&gt;域名——&gt;域名管理——&gt;DNS修改——&gt;同步</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-33-1024x285.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-35-1024x194.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-36.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-37-1024x170.png"></p><p>DNS修改完成后，返回百度CDN选择免费版，即可</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-38-1024x219.png"></p><ul><li>第二种方式CNAME接入，生成别名CNAME地址，再修改解析CNAME地址</li></ul><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-41-1024x250.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-42-1024x364.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-43-1024x279.png"></p><p>复制CNAME地址，解析到自己的CNAME地址，这里以阿里云域名解析为例</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-47-1024x184.png"></p><p>添加完成后，返回百度CDN ，选择免费版即可</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-38-1024x219.png" alt="此图像的alt属性为空；文件名为image-38-1024x219.png"></p><h2 id="3-检测CDN是否成功"><a href="#3-检测CDN是否成功" class="headerlink" title="3.检测CDN是否成功"></a>3.检测CDN是否成功</h2><p>再域名管理，点击“验证”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-39-1024x196.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-40-1024x136.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-48-1024x176.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 百度CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云CDN 加速教程</title>
      <link href="/posts/f612ab8e.html"/>
      <url>/posts/f612ab8e.html</url>
      
        <content type="html"><![CDATA[<p>国内免费的CDN很多，测试了3个CDN免费版本的腾讯cdn、百度cdn、七牛cdn，这里写下教程及对比。</p><p>**<em>CND</em>**对比</p><p>腾讯</p><p>百度</p><p>七牛</p><p>免费流量</p><p>新用户送120G<br>20G&#x2F;月（6个月）</p><p>10G&#x2F;天</p><p>10G&#x2F;月</p><p>接入方式</p><p>CNAME接入</p><p>NS接入<br>CNAME接入</p><p>CNAME接入</p><p>源端口</p><p>支持</p><p>不支持</p><p>不支持</p><p>特点</p><p>自定义源端口</p><p>2种接入方式，支持<br>泛域名，3种记录<br>A、MX、CNAME</p><p>自定义源端口</p><p>教程开始，先注册账号、<strong>实名！！！</strong></p><p>腾讯CDN地址：<a href="https://console.cloud.tencent.com/cdn/domains">https://console.cloud.tencent.com/cdn/domains</a></p><h2 id="1-配置加速域名"><a href="#1-配置加速域名" class="headerlink" title="1.配置加速域名"></a>1.配置加速域名</h2><p>登录后，选择域名——&gt;添加域名——&gt;加速域名配置——&gt;源配置——&gt;确定</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-17-1024x529.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-18.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-19.png"></p><h2 id="2-配置域名解析"><a href="#2-配置域名解析" class="headerlink" title="2.配置域名解析"></a>2.配置域名解析</h2><p>返回“域名管理”，复制CNAME地址</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-20-1024x80.png"></p><p>然后到我们自己的域名管理种，去添加CNAME解析（我这里以阿里云解析为例）</p><p>登录阿里云，控制台——&gt;<a href="https://dns.console.aliyun.com/">域名解析</a>——&gt;选择域名——&gt;解析设置——&gt;添加解析</p><p>——&gt;记录类型“CNAME”——&gt;“要加速的二级域名”——&gt;“CNAME地址”</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-21-1024x334.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-23-1024x324.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-24-1024x94.png"></p><h2 id="3-检测CDN是否成功"><a href="#3-检测CDN是否成功" class="headerlink" title="3.检测CDN是否成功"></a>3.检测CDN是否成功</h2><p>第一种方法：查看域名状态</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-25-1024x119.png"></p><p>第二种方法：通过腾讯CDN诊断工具</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-26-1024x465.png"></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-27.png"></p><p>腾讯CDN加速完成！</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 腾讯CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 7-bypy+crontab实现自动备份到百度网盘</title>
      <link href="/posts/87966d3b.html"/>
      <url>/posts/87966d3b.html</url>
      
        <content type="html"><![CDATA[<p>bypy是这是一个百度云&#x2F;百度网盘的Python客户端。主要的目的是通过命令行来使用百度云盘，我们可以利用bypy+crontab实现自动备份。</p><h2 id="一，配置环境"><a href="#一，配置环境" class="headerlink" title="一，配置环境"></a><strong>一，配置环境</strong></h2><p>1.安装epel源</p><p><code>yum -y install epel-release</code></p><p>2.查看python版本（centos7默认自带）</p><p><code>python</code></p><p>2.安装python-pip</p><p><code>yum -y install python-pip</code></p><p>3.安装bypy库</p><p><code>pip install bypy</code></p><p>4.安装requests库</p><p><code>pip install requests</code></p><h2 id="二，API授权"><a href="#二，API授权" class="headerlink" title="二，API授权"></a>二，API授权</h2><p>输入命令：bypy info将复制百度api地址，到浏览器器打开，登陆自己的百度网盘帐号密码，获取认证码，再粘贴回centos，登陆成功提示容量信息，由于百度PCS API权限限制，程序只能存取百度云端&#x2F;apps&#x2F;bypy目录下</p><p>输入命令：<code>bypy info</code></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-13-1024x192.png"></p><p>登录百度api网页，获取授权码</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-12.png"></p><p>上传根目录&#x2F;apps&#x2F;bypy</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-15.png"></p><h2 id="三，基本操作命令"><a href="#三，基本操作命令" class="headerlink" title="三，基本操作命令"></a>三，基本操作命令</h2><p>下载：<code>bypy downdir [文件或目录] -v</code></p><p>上传：<code>bypy upload [文件或目录] -v</code></p><p>显示云端列表：<code>bypy list</code></p><p>取消授权：<code>bypy -c</code></p><h2 id="四，crontab定时任务"><a href="#四，crontab定时任务" class="headerlink" title="四，crontab定时任务"></a>四，crontab定时任务</h2><p>安装crontab，实现定时任务</p><p><code>yum -y install crontabs</code></p><p>添加开机启动</p><p><code>systemctl enable crond</code></p><p>启动crontab</p><p><code>systemctl start crond</code></p><h2 id="五，创建上传脚本"><a href="#五，创建上传脚本" class="headerlink" title="五，创建上传脚本"></a>五，创建上传脚本</h2><p>使用crontab，必须使用绝对路径</p><p>vi &#x2F;opt&#x2F;baiduupload.sh</p><p>脚本内容如下</p><p><code>/usr/bin/bypy upload ｛要上传的目录或文件</code>}</p><p>为脚本添加执行权限</p><p><code>chmod + x /opt/baiduupload.sh</code></p><h2 id="六，定时上传，实现同步"><a href="#六，定时上传，实现同步" class="headerlink" title="六，定时上传，实现同步"></a>六，定时上传，实现同步</h2><p>我这里设置的每周一的凌晨3点执行任务，这里核心的位置“ <code>PYTHONIOENCODING=utf-8</code>”设置python字符集为UTF8，否则报错无法执行定时任务</p><p>创建定时任务：<code>crontab -e</code></p><p><code>* 3 * * 1 PYTHONIOENCODING=utf-8 /opt/baiduupload.sh</code></p><p>查看定时任务：crontab -l</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-16.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bypy </tag>
            
            <tag> centos百度网盘 </tag>
            
            <tag> crontab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIT——远程分支</title>
      <link href="/posts/c87a76f0.html"/>
      <url>/posts/c87a76f0.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-9.png"></p><h2 id="一、Git的配置"><a href="#一、Git的配置" class="headerlink" title="一、Git的配置"></a><strong>一、Git的配置</strong></h2><p>1.设置用户名和邮箱(–global 为全局参数，表明本地所有Git仓库都会使用这个配置)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;your_email@youremail.com&quot;</span><br></pre></td></tr></table></figure><p>2.生成密钥(SSH key)，如果已关联秘钥可跳过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-4.png"></p><p>3.添加密钥(SSH key)，并验证是否成功</p><p>添加密钥：将上一步骤生成的密钥即.ssh&#x2F;id_rsa.pub中内容全部复制。在github的 Settings–&gt;SSH and GPG keys–&gt;New SSH key，key中粘贴复制的内容(Title自定义)。</p><p>验证：github输入第一条的命令，码云输入第二条</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#github</span><br><span class="line">ssh -T git@github.com</span><br><span class="line">#gitee</span><br><span class="line">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure><h2 id="二、创建项目工程"><a href="#二、创建项目工程" class="headerlink" title="二、创建项目工程"></a><strong>二、创建项目工程</strong></h2><p>1.远程仓库：在github中New repository 输入Repository name。[例如：TestDemo]</p><p>2.项目工程：在自己本地电脑上新建一个与github新项目工程同名的文件夹。[例如：TestDemo]</p><h2 id="三、创建版本库"><a href="#三、创建版本库" class="headerlink" title="三、创建版本库"></a><strong>三、创建版本库</strong></h2><p> 进入步骤二中的文件夹下，输入以下命令初始化仓库，若出现：Initialized empty Git repository in *:&#x2F;.git&#x2F; 则表示创建成功[注意：此时会生成一个.git目录(隐藏目录)]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h2 id="四、连接远程仓库-下面两种方式都可以"><a href="#四、连接远程仓库-下面两种方式都可以" class="headerlink" title="四、连接远程仓库(下面两种方式都可以)"></a><strong>四、连接远程仓库</strong>(下面两种方式都可以)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#ssh协议连接</span><br><span class="line">git remote add origin git@github.com:yourName/repositoryname.git</span><br><span class="line">#http协议连接</span><br><span class="line">git remote add origin https://github.com/yourName/repositoryname.git</span><br></pre></td></tr></table></figure><h2 id="五、将本地文件push到远程分支"><a href="#五、将本地文件push到远程分支" class="headerlink" title="五、将本地文件push到远程分支"></a><strong>五、将本地文件push到远程分支</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git add .　　　　　　　　              将文件添加到暂存区</span><br><span class="line"></span><br><span class="line">git commit -m &quot;commnet&quot; 　　          提交更改,添加备注信息</span><br><span class="line"></span><br><span class="line">git checkout -b 分支名称          创建本地分支</span><br><span class="line"></span><br><span class="line">git checkout 分支名称             切换本地分支</span><br><span class="line"></span><br><span class="line">git push origin 分支名称       将本地仓库的文件push到远程分支(若 push 不成功，可加 -f 进行强推操作)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Windows </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> git分支 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本-输入指定内容，case跳转</title>
      <link href="/posts/2e90d96c.html"/>
      <url>/posts/2e90d96c.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo &quot;1.安装&quot;</span><br><span class="line">echo &quot;2.卸载&quot;</span><br><span class="line">echo &quot;3.重启&quot;</span><br><span class="line">echo &quot;4.查看&quot;</span><br><span class="line">echo &quot;5.退出&quot;</span><br><span class="line"></span><br><span class="line">read -p &quot;请输入 1-5: &quot; n</span><br><span class="line">case $n in</span><br><span class="line">#输入“1”执行动作</span><br><span class="line">   1)</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">#输入“2”执行动作</span><br><span class="line">   2)</span><br><span class="line">   </span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">#输入“3”执行动作</span><br><span class="line">   3)</span><br><span class="line">   </span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">#输入“4”执行动作</span><br><span class="line">   4)</span><br><span class="line">   </span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">#输入“5”执行动作</span><br><span class="line">   5)</span><br><span class="line">   </span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">#输入“其它”，执行动作</span><br><span class="line">   *)</span><br><span class="line">read -p &quot;请输入 1-5: &quot; </span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> case跳转 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>firewall-cmd 防火墙相关命令</title>
      <link href="/posts/18e67a35.html"/>
      <url>/posts/18e67a35.html</url>
      
        <content type="html"><![CDATA[<p>使用命令或直接编辑防火墙放行文件&#x2F;etc&#x2F;firewalld&#x2F;zones&#x2F;public.xml</p><p>firewall-cmd</p><p>作用域：–zone</p><p>添加端口：–add-port</p><p>永久生效：–permanent</p><p>列出端口：–list-ports</p><p>重新加载防火墙配置：–reload</p><p><strong>注：防火墙修改配置后，需要重启防火墙才可生效</strong></p><p>————————————————————————</p><p>查看所有加入防火墙域的端口</p><p><code>firewall-cmd --list-ports</code></p><p>“放行域”，添加80端口，并永久生效</p><p><code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code></p><p>“放行域”，移除80端口，并永久生效</p><p><code>firewall-cmd --zone=public --remove-port=80/tcp  --permanent</code></p><p>查看所有端口中的“永久生效”端口</p><p><code>firewall-cmd --list-ports --permanent</code></p><p>“放行域”中，查询是否有80端口（查询当前80端口是否放行）</p><p><code>firewall-cmd --zone=public --query-port=80/tcp</code></p><p>“放行域”中，查询是否有80端口，且“永久生效”（查询80端口是否永久放行）</p><p><code>firewall-cmd --zone=public --query-port=80/tcp --permanent</code></p><p>————————————————————————</p><p>禁止访问:rich</p><p>注：dorp，直接丢弃，不返回任何数据。reject，返回拒绝信息。（如可以攻击可直接drop）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#禁止IP(192.168.68.250)访问机器</span><br><span class="line">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=ipv4 source address=&quot;192.168.68.250&quot; drop&#x27;</span><br><span class="line">#禁止一个IP段，比如禁止192.168.*.*</span><br><span class="line">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=ipv4 source address=&quot;192.168.0.0/16&quot; drop&#x27;</span><br><span class="line">#禁止一个IP段，比如禁止192.168.68.*</span><br><span class="line">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=ipv4 source address=&quot;192.168.68.0/24&quot; drop&#x27;</span><br><span class="line"></span><br><span class="line">#从防火墙规则中删除已禁止的IP(192.168.68.250)</span><br><span class="line">firewall-cmd --permanent --remove-rich-rule=&#x27;rule family=ipv4 source address=&quot;192.168.68.250&quot; drop&#x27;</span><br></pre></td></tr></table></figure><p>——————————添加放行端口脚本，如下——————————</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">read -p &quot;请输入放行端口号：&quot; PORT</span><br><span class="line">#&lt;/zone&gt;前追加端口</span><br><span class="line">sed -i  &quot;/&lt;\/zone&gt;/i\  &lt;port protocol=\&quot;tcp\&quot; port=\&quot;$PORT\&quot;/&gt;&quot; /etc/firewalld/zones/public.xml</span><br><span class="line">#重新加载防火墙</span><br><span class="line">firewall-cmd --reload  &gt; /dev/null</span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 添加多个端口</span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=8080-8083/tcp</span><br><span class="line"> </span><br><span class="line"># 删除某个端口</span><br><span class="line">firewall-cmd --permanent --zone=public --remove-port=81/tcp</span><br><span class="line"> </span><br><span class="line"># 针对某个 IP开放端口</span><br><span class="line">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.68.250&quot; port protocol=&quot;tcp&quot; port=&quot;6379&quot; accept&quot;</span><br><span class="line">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.68.251&quot; accept&quot;</span><br><span class="line"> </span><br><span class="line"># 删除某个IP</span><br><span class="line">firewall-cmd --permanent --remove-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.68.51&quot; accept&quot;</span><br><span class="line"> </span><br><span class="line"># 针对一个ip段访问</span><br><span class="line">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.68.0/24&quot; accept&quot;</span><br><span class="line">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.68.0/24&quot; port protocol=&quot;tcp&quot; port=&quot;9200&quot; accept&quot;</span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> firewall-cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本-判断防火墙端口是否放行指定端口</title>
      <link href="/posts/1af7a948.html"/>
      <url>/posts/1af7a948.html</url>
      
        <content type="html"><![CDATA[<p>检测当前防火墙是否放行指定端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PORT=&quot;80&quot;</span><br><span class="line">firewall-cmd --query-port=$&#123;PORT&#125;/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then</span><br><span class="line">echo &quot;----------当前已放行端口:$&#123;PORT&#125;&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;----------当前未放行端口:$&#123;PORT&#125;&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> firewall </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell 条件判断 if [ $? -eq 0 ]</title>
      <link href="/posts/7cf7a34b.html"/>
      <url>/posts/7cf7a34b.html</url>
      
        <content type="html"><![CDATA[<p>[ ] 等价于 test命令</p><p>$0: 　　shell或shell脚本的名字<br>$*:　　 以一对双引号给出参数列表<br>$@:　  将各个参数分别加双引号返回<br>$#:       参数的个数<br>$_:　　代表上一个命令的最后一个参数<br>$$:　　代表所在命令的PID<br>$!:　　 代表最后执行的后台命令的PID<br><code>$?:　　代表上一个命令执行后的退出状态</code></p><p>数字测试：</p><p>-eq：等于<br>-ne：不等于<br>-gt：大于<br>-ge：大于等于<br>-lt：小于<br>-le：小于等于</p><p><strong>字符串比较</strong></p><p>=&#x3D; 等于 两边要有空格<br>!&#x3D; 不等<br>&gt; 大于<br>&lt; 小于</p><p><strong>文件测试</strong></p><p>-z string 测试指定字符是否为空，空着真，非空为假<br>-n string 测试指定字符串是否为不空，空为假 非空为真<br>-e FILE 测试文件是否存在<br>-f file 测试文件是否为普通文件<br>-d file 测试指定路径是否为目录<br>-r file 测试文件对当前用户是否可读<br>-w file 测试文件对当前用户是否可写<br>-x file 测试文件对当前用户是都可执行<br>-z 是否为空 为空则为真<br>-a 是否不空</p><p>字符合集：</p><p>[:alnum:] 所有的字母和数字<br>[:alpha:] 所有字母<br>[:digit:] 所有的数字<br>[:lower:] 所有的小写字符<br>[:upper:] 所有大写字母<br>[:blank:] 水平制表符，空白等<br>[:cntrl:] 所有控制字符<br>[:graph:] 所有可打印字符，不包括空格<br>[:print:] 所有可打印字符，包括空格<br>[:punct:] 所有的标点字符<br>[:space:] 所有的横向或纵向的空白<br>\\ 反斜杠 (第一个\转义)<br>\t Ctrl-I tab键<br>\n Ctrl-J 新行<br>\a Ctrl-G 铃声<br>\b Ctrl-H 退格符<br>\f Ctrl-L 走行换页<br>\r Ctrl-M 回车<br>\v Ctrl-X 水平制表符</p><p><strong>与或非</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-a 与 &amp;&amp;</span><br><span class="line">-o 或 </span><br><span class="line">！ 非  ！</span><br></pre></td></tr></table></figure><p>几个常用例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#用户是否存在，判断执行结果</span><br><span class="line">#[]书写效果如下：</span><br><span class="line">read -p &quot;请输入用户名：&quot; USER</span><br><span class="line">id $USER &amp;&gt; /dev/null</span><br><span class="line">if [ $? -eq 0 ];</span><br><span class="line">then</span><br><span class="line">echo &quot;$USER 已存在&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;$USER 不存在&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#test书写效果如下：</span><br><span class="line">read -p &quot;请输入用户名：&quot; USER</span><br><span class="line">id $USER &amp;&gt; /dev/null</span><br><span class="line">if test $? -eq 0 ;</span><br><span class="line">then</span><br><span class="line">echo &quot;$USER 已存在&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;$USER 不存在&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#判断输入值,当为整数时退出</span><br><span class="line">#利用 -z（或-n） 进行判断，空值为假，非空位置（取反，非空为真，空位假）</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">read -p &quot;请输入值：&quot; NUM</span><br><span class="line">test=`echo $NUM sed &#x27;s/[0-9]//g&#x27;`</span><br><span class="line">if [ -z &quot;$test&quot; ];then</span><br><span class="line">echo &quot;当前整数值：$NUM&quot;</span><br><span class="line">break</span><br><span class="line">else</span><br><span class="line">echo &quot;当前非整数，请重新输入&quot;</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>为了书写格式化shell，一般都使用[]来代替test，不过偶尔只是一句话的判断，用test还是比较方便的。</p><p>如下，判断文件是否存：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#判断test.sh文件是否存，存在就cat</span><br><span class="line">if test -f /opt/shell/test.sh;then</span><br><span class="line">cat /opt/shell/test.sh</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本-tar、split（对目录或文件进行分割打包、合并操作）</title>
      <link href="/posts/20eff20f.html"/>
      <url>/posts/20eff20f.html</url>
      
        <content type="html"><![CDATA[<p>tar命令</p><p><code>-c 创建新的备份（创建压缩包使用）   -x 从备份中还原（解压缩包时使用）   -v 执行过程   -z 压缩或解压   -f 备份文件（打包时使用）   -C 切换到指定目录</code></p><p>打包命令 ：tar -cvzf {打包后的文件名} ｛被打包的文件或目录｝</p><p>解压命令： tar -xvzf {打包后的文件名} -C {解压到指定目录}</p><p>——————————————————————————————————————————</p><p>将目录或文件进行分割打包，分割后的文件名自动加入aa、ab、ac……等后缀</p><p>注：打包时带目录，将会目录一起打包（如想只打包文件，可进入目录内打包，DIR&#x3D;.&#x2F;*）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#将目录进行分割打包，每个包大小为5M</span><br><span class="line">#打包目录</span><br><span class="line">DIR=&quot;/root/test/&quot;</span><br><span class="line">#打包后的文件名</span><br><span class="line">FILE=&quot;test.tar_&quot;</span><br><span class="line">#注意空格</span><br><span class="line">tar czf - $&#123;DIR&#125;  split -b 5m - $&#123;FILE&#125;</span><br></pre></td></tr></table></figure><p>解压到指定目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#将分割后的文件合并</span><br><span class="line">#压缩包文件名</span><br><span class="line">FILE=&quot;/root/test.tar_&quot;</span><br><span class="line">#指定目录</span><br><span class="line">DIR=&quot;/opt/&quot;</span><br><span class="line">cat $&#123;FILE&#125;* tar -zx -C $&#123;DIR&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本-关闭selinux</title>
      <link href="/posts/50cc96f4.html"/>
      <url>/posts/50cc96f4.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#临时关闭SElinux</span><br><span class="line">setenforce 0</span><br><span class="line">#sed修改配置文件，实现永久禁用selinux</span><br><span class="line">sed -i &quot;s/SELINUX=enforcing/SELINUX=disable/g&quot; /etc/selinux/config</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> selinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本-获取内网IP、公网IP及设置IP</title>
      <link href="/posts/f2eab4c5.html"/>
      <url>/posts/f2eab4c5.html</url>
      
        <content type="html"><![CDATA[<h2 id="获取内网IP"><a href="#获取内网IP" class="headerlink" title="获取内网IP"></a>获取内网IP</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IPLAN=$(hostname -I  awk -F &quot; &quot; &#x27;&#123;printf $1&#125;&#x27;)</span><br><span class="line">echo &quot;内网IP：&quot;$IPLAN&quot; &quot;</span><br></pre></td></tr></table></figure><h2 id="获取公网IP"><a href="#获取公网IP" class="headerlink" title="获取公网IP"></a>获取公网IP</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IPWAN=$(curl http://pv.sohu.com/cityjson 2&gt;&gt; /dev/null  awk -F &#x27;&quot;&#x27; &#x27;&#123;print $4&#125;&#x27;)</span><br><span class="line">echo &quot;公网IP：&quot;$IPWAN&quot; &quot;</span><br></pre></td></tr></table></figure><h2 id="设置IP"><a href="#设置IP" class="headerlink" title="设置IP"></a><strong>设置IP</strong></h2><h4 id="第一种：编辑网卡配置文件"><a href="#第一种：编辑网卡配置文件" class="headerlink" title="第一种：编辑网卡配置文件"></a>第一种：编辑网卡配置文件</h4><p>1.查看自己需要编辑的网卡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#第一种：</span><br><span class="line">ip a</span><br><span class="line">#第二种（需要安装net-tools包）</span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>2.编辑网卡文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/《网卡名文件》</span><br></pre></td></tr></table></figure><p>3.编辑完成，重启网络服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><h4 id="第二种：使用NetworManagerTUI图形化编辑-nmtui命令"><a href="#第二种：使用NetworManagerTUI图形化编辑-nmtui命令" class="headerlink" title="第二种：使用NetworManagerTUI图形化编辑:nmtui命令"></a>第二种：使用NetworManagerTUI图形化编辑:nmtui命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmtui</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/10/image-7.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> 获取IP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本-判断rpm包是否安装</title>
      <link href="/posts/d52badb1.html"/>
      <url>/posts/d52badb1.html</url>
      
        <content type="html"><![CDATA[<p>通过判断rpm包名称来判断是否安装，主要有两种类型的包名称</p><h2 id="一，版本号类型：“rpm包名”-“版本号”"><a href="#一，版本号类型：“rpm包名”-“版本号”" class="headerlink" title="一，版本号类型：“rpm包名” + “版本号”"></a>一，版本号类型：“rpm包名” + “版本号”</h2><p>以nginx为例：nginx-1.16.1-3.el7.x86_64</p><p>我们只需要过滤 “nginx-1.1”即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#&quot;.&quot;匹配任意一个字符</span><br><span class="line">TAG=&quot;.&quot;</span><br><span class="line">#&quot;[0-9]&quot;代表0-9中的任何一个数字</span><br><span class="line">NUM=&quot;[0-9]&quot;</span><br><span class="line">PKG=&quot;nginx&quot;</span><br><span class="line"></span><br><span class="line">pName=$(rpm -qa  grep &quot;^$&#123;PKG&#125;$&#123;TAG&#125;$&#123;NUM&#125;$&#123;TAG&#125;$&#123;NUM&#125;&quot;)</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then</span><br><span class="line">echo -e&quot;----------已存在，无需安装----------\n&quot;$&#123;pName&#125;&quot;&quot;</span><br><span class="line">else</span><br><span class="line">echo -e&quot;----------未安装----------&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="二，名称类型：“rpm包名”-“名称”"><a href="#二，名称类型：“rpm包名”-“名称”" class="headerlink" title="二，名称类型：“rpm包名”+“名称”"></a>二，名称类型：“rpm包名”+“名称”</h2><p>以php为例：php72w-fpm-7.2.34-1.w7.x86_64.rpm</p><p>我们只需要过滤的“php***fpm”即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#&quot;.*&quot;匹配任意一个或多个字符</span><br><span class="line">TAG=&quot;.*&quot;</span><br><span class="line">PKG=&quot;php&quot;</span><br><span class="line">NAME=&quot;fpm&quot;</span><br><span class="line"></span><br><span class="line">pName=$(rpm -qa  grep &quot;^$&#123;PKG&#125;$&#123;TAG&#125;$&#123;NAME&#125;&quot;)</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then</span><br><span class="line">echo -e&quot;----------已存在，无需安装----------\n&quot;$&#123;pName&#125;&quot;&quot;</span><br><span class="line">else</span><br><span class="line">echo -e&quot;----------未安装----------&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本-判断服务进程状态</title>
      <link href="/posts/7f22336f.html"/>
      <url>/posts/7f22336f.html</url>
      
        <content type="html"><![CDATA[<p>一键脚本，以nginx为例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PKG=&quot;nginx&quot;</span><br><span class="line">ps -efgrep $PKGgrep -vE &quot;grep$$&quot; &gt;/dev/null</span><br><span class="line">#直接通过$?获取上一句shell执行的状态</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line"> echo -e &quot;\e[42m &quot;$&#123;PKG&#125;&quot; 已启动\e[0m&quot;</span><br><span class="line">else</span><br><span class="line"> echo -e &quot;\e[41m &quot;$&#123;PKG&#125;&quot; 未启动\e[0m&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本-判断目录或文件是否存在</title>
      <link href="/posts/3dd50473.html"/>
      <url>/posts/3dd50473.html</url>
      
        <content type="html"><![CDATA[<h2 id="判断目录是否存在"><a href="#判断目录是否存在" class="headerlink" title="判断目录是否存在"></a>判断目录是否存在</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DIR=&quot;/root/test&quot;</span><br><span class="line">if [ ! -d $DIR ];then</span><br><span class="line">echo &quot;目录不存在&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;目录已存在&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="判断文件是否存在"><a href="#判断文件是否存在" class="headerlink" title="判断文件是否存在"></a>判断文件是否存在</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FILE=&quot;/root/test.txt&quot;</span><br><span class="line">if [ ! -f $FILE ];then</span><br><span class="line"> echo &quot;文件不存在&quot;</span><br><span class="line">else</span><br><span class="line"> echo &quot;文件已存在&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本-结束服务进程</title>
      <link href="/posts/1918ff76.html"/>
      <url>/posts/1918ff76.html</url>
      
        <content type="html"><![CDATA[<p>shell一键脚本，如下定义服务进程：nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SER=&quot;nginx&quot;</span><br><span class="line">kill -9 $(ps -efgrep $&#123;SER&#125; gawk &#x27;$0 !~/grep/ &#123;print $2&#125;&#x27; tr -s &#x27;\n&#x27; &#x27; &#x27;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7 systemctl 自定义服务（简版）</title>
      <link href="/posts/404294ef.html"/>
      <url>/posts/404294ef.html</url>
      
        <content type="html"><![CDATA[<p>例一：创建服务配置文件&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;aria2.service（aria2替换为自己的服务名）</p><p>内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">#服务简单描述（我的服务名aria2）</span><br><span class="line">Description=aria2</span><br><span class="line">#指定先启动after服务，再启动[Service]</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">#跟踪PID</span><br><span class="line">PIDFile=/run/aria2.pid</span><br><span class="line">#重点：Exec必须使用绝对路径</span><br><span class="line">ExecStart=/usr/bin/aria2c --conf-path=/etc/aria2/aria2.conf</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">[Install]</span><br><span class="line">#定义多用户模式</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>_________________________________________________________________________</p><p>例二：创建服务配置文件&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;vlmcsd.service（vlmcsd替换为自己的服务名）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=vlmcsd</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">PIDFile=/run/vlmcsd.pid</span><br><span class="line">ExecStart=/usr/bin/vlmcsd -p /run/vlmcsd.pid</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>注：守护进程需定义Type和Restart</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#推荐：Type=forking</span><br><span class="line">simple 默认参数，进程作为主进程</span><br><span class="line">forking 是后台运行的形式，主进程退出，os接管子进程</span><br><span class="line">oneshot 类似simple，在开始后续单元之前，过程退出</span><br><span class="line">DBUS 类似simple，但随后的单元只在主进程获得D总线名称之后才启动</span><br><span class="line">notify 类似simple，但是随后的单元仅在通过sd_notify()函数发送通知消息之后才启动</span><br><span class="line">idle 类似simple，服务二进制文件的实际执行被延迟到所有作业完成为止，不与其他服务的输出相混合,如状态输出与服务的shell输出混合</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#推荐Restart=[always/on-failure]</span><br><span class="line">定义何种情况Systemd会自动重启当前服务，值：</span><br><span class="line">包括always（总是重启）、no 、on-success、on-failure、on-abnormal、on-abort、on-watchdog</span><br><span class="line">对于守护进程，推荐设为on-failure。对于那些允许发生错误退出的服务，可以设为on-abnormal</span><br></pre></td></tr></table></figure><p>Systemctl 常用命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">重新加载服务配置文件：systemctl daemon-reload</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开机启动服务： systemctl enable [服务名]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">取消开机启动服务：systemctl disabel [服务名]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">启动/停止/重启服务：systemctl start/stop/restart [服务名]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">查询服务状态：systemctl status [服务名]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">查询所有服务状态： systemctl list-unit-files</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查询所有开机服务：systemctl list-unit-files</span><br><span class="line">enabled状态：开机启动</span><br><span class="line">disable状态：开机禁用</span><br><span class="line">static状态：可以被其他服务唤醒</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> systemctl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yum相关配置</title>
      <link href="/posts/3ac567c0.html"/>
      <url>/posts/3ac567c0.html</url>
      
        <content type="html"><![CDATA[<p>通过yum配置文件查询修改配置，默认yum配置文件位于&#x2F;etc&#x2F;yum.conf</p><p>#默认存放位置</p><p>cachedir&#x3D;&#x2F;var&#x2F;cache&#x2F;yum&#x2F;$basearch&#x2F;$releasever</p><p>#是否保留下载文件：1为保存， 0为不保存</p><p>keepcache&#x3D;0</p><p>#保留周期</p><p>metadata_expire&#x3D;90m</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yum </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈学习shell脚本编写</title>
      <link href="/posts/84f45e1a.html"/>
      <url>/posts/84f45e1a.html</url>
      
        <content type="html"><![CDATA[<p>因运维职业原来经常写windows相关的bat脚本，后自学linux遇到shell脚本，其实无论任何脚本都是将单一的操作串联为一个整体的操作，我们要做的就用一个好的思路去串联这些单一的操作，再到后期的脚本优化，实现完美的一键操作。</p><h2 id="第一：基础命令的学习"><a href="#第一：基础命令的学习" class="headerlink" title="第一：基础命令的学习"></a>第一：基础命令的学习</h2><p>首先要学习基础的shell命令，不需要每个都很深入的学会，但至少要知道，你要实现某些操作时，会用到哪个或是哪些命令来帮你完成这项操作，可以帮助我们去学习、了解制作脚本。</p><h2 id="第二：“多条单一命令”到一个脚本的演变"><a href="#第二：“多条单一命令”到一个脚本的演变" class="headerlink" title="第二：“多条单一命令”到一个脚本的演变"></a>第二：“多条单一命令”到一个脚本的演变</h2><p>当我们熟练的单条单条命令的敲写时候，我们就可以尝试将多条命令合并为一个shell脚本的练习了。</p><h2 id="第三：测试优化脚本"><a href="#第三：测试优化脚本" class="headerlink" title="第三：测试优化脚本"></a>第三：测试优化脚本</h2><p>学会了如何去编写脚本后，就要慢慢转向学习测试优化脚本了，从重复出现的命令到变量的替代；从本机环境的直接安装，到检测不同环境从零开始安装；再到匹配不同内核版本及机型的安装。</p><p>学无止境，加油！</p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 安装jellyfin个人流媒体服务器</title>
      <link href="/posts/583ecf7.html"/>
      <url>/posts/583ecf7.html</url>
      
        <content type="html"><![CDATA[<p>前段时间玩了下nas，安装很多东西需要在docker，使用效率不是很高，这里记录一下，在centos7 下安装jellyfin流程。</p><p>jellyfin产生的背景可以百度一下，当然我选择的主要原因开源，那就意味着再升空间。</p><p>jellyfin官网：<a href="http://jellyfin.org/">http://jellyfin.org</a></p><p>开始安装流程</p><h2 id="一，安装epel源"><a href="#一，安装epel源" class="headerlink" title="一，安装epel源"></a>一，安装epel源</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure><h2 id="二，安装ffmpeg（音视频解码）"><a href="#二，安装ffmpeg（音视频解码）" class="headerlink" title="二，安装ffmpeg（音视频解码）"></a>二，安装ffmpeg（音视频解码）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#下载rpmfusion源</span><br><span class="line">wget https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm</span><br><span class="line">#安装rpmfusion源</span><br><span class="line">rpm -ihv rpmfusion-free-release-7.noarch.rpm</span><br><span class="line">#安装ffmpeg</span><br><span class="line">yum -y install ffmpeg</span><br></pre></td></tr></table></figure><h2 id="三，下载jellyfin相关rpm包"><a href="#三，下载jellyfin相关rpm包" class="headerlink" title="三，下载jellyfin相关rpm包"></a>三，下载jellyfin相关rpm包</h2><p>rpm下载地址：<a href="https://repo.jellyfin.org/releases/server">https://repo.jellyfin.org/releases/server</a></p><p>根据自己系统选择对应版本，这里我们选择centos的稳定版本</p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-7-1024x560.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">附上10.6.4的下载地址：</span><br><span class="line">https://repo.jellyfin.org/releases/server/centos/versions/stable/web/10.6.4/jellyfin-web-10.6.4-1.el7.noarch.rpm</span><br><span class="line">https://repo.jellyfin.org/releases/server/centos/versions/stable/server/10.6.4/jellyfin-server-10.6.4-1.el7.x86_64.rpm</span><br><span class="line">https://repo.jellyfin.org/releases/server/centos/versions/stable/server/10.6.4/jellyfin-10.6.4-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><h2 id="四，本地安装jellyfin"><a href="#四，本地安装jellyfin" class="headerlink" title="四，本地安装jellyfin"></a>四，本地安装jellyfin</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y localinstall jellyfin-web-10.6.4-1.el7.noarch.rpm</span><br><span class="line">yum -y localinstall jellyfin-server-10.6.4-1.el7.x86_64.rpm</span><br><span class="line">yum -y localinstall jellyfin-10.6.4-1.el7.x86_64.rpm </span><br></pre></td></tr></table></figure><h2 id="五，启动jellyfin"><a href="#五，启动jellyfin" class="headerlink" title="五，启动jellyfin"></a>五，启动jellyfin</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#启动jellyfin</span><br><span class="line">systemctl start jellyfin.service</span><br><span class="line">#检测默认端口（8096）是否启动</span><br><span class="line">netstat -anp  grep 8096</span><br><span class="line">#设置开机启动</span><br><span class="line">systemctl enable jellyfin.service</span><br></pre></td></tr></table></figure><h2 id="六，初始化jellyfin（网上教程很多，自行查阅）"><a href="#六，初始化jellyfin（网上教程很多，自行查阅）" class="headerlink" title="六，初始化jellyfin（网上教程很多，自行查阅）"></a>六，初始化jellyfin（网上教程很多，自行查阅）</h2><p>浏览器输入：<a href="http://jellyfin服务器ip:8096/">http://jellyfin服务器ip:8096</a></p><p>注意事项：</p><p><strong>国家选择：hongk（香港）</strong></p><p><strong>语言选择：chinese（中文）</strong></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-8-1024x409.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jellyfin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git——远程仓库</title>
      <link href="/posts/98362d43.html"/>
      <url>/posts/98362d43.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-9.png"></p><p>如何使用Git 连接远程仓库呢？远程仓库-&gt;一般指的是代码托管平台。那就先来瞅瞅三个较熟悉的版本(代码)托管服务平台。</p><h2 id="版本-代码-托管服务平台："><a href="#版本-代码-托管服务平台：" class="headerlink" title="版本(代码)托管服务平台："></a><strong>版本(代码)托管服务平台：</strong></h2><p>码云(gitee.com)：是开源中国社区团队推出的基于Git的快速的、免费的、稳定的在线代码托管平台，不限制私有库和公有库数量.</p><p>Coding(coding.net)： 是CODING 旗下的一站式开发平台，提供 git&#x2F;svn 代码托管，免费支持私有库(限定)和公有库</p><p>github(github.com)：是全球最大的开源社区，基于git的版本托管平台。私有库需要付费，访问速度慢。</p><h2 id="前提准备："><a href="#前提准备：" class="headerlink" title="前提准备："></a><strong>前提准备：</strong></h2><p>1.git工具的下载和安装(一直next就行了)。 下载 <a href="https://git-scm.com/download">&gt;&gt;&gt;</a> </p><p>2.github&#x2F;码云&#x2F;Coding上进行注册。  码云<a href="https://gitee.com/signup">&gt;&gt;&gt;</a>　coding<a href="https://coding.net/register">&gt;&gt;&gt;</a>   github<a href="https://github.com/join?source=header-home">&gt;&gt;&gt;</a></p><p>前提准备好了就可以开始进行Git与远程仓库的连接，这里以github为例。</p><h2 id="一、Git的配置（只需要第一次设置，关联秘钥后，不需要再次设置）"><a href="#一、Git的配置（只需要第一次设置，关联秘钥后，不需要再次设置）" class="headerlink" title="一、Git的配置（只需要第一次设置，关联秘钥后，不需要再次设置）"></a><strong>一、Git的配置</strong>（只需要第一次设置，关联秘钥后，不需要再次设置）</h2><p>1.设置用户名和邮箱(–global 为全局参数，表明本地所有Git仓库都会使用这个配置)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;your_email@youremail.com&quot;</span><br></pre></td></tr></table></figure><p>2.生成密钥(SSH key)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-4.png"></p><p>3.添加密钥(SSH key)，并验证是否成功</p><p>添加密钥：将上一步骤生成的密钥即.ssh&#x2F;id_rsa.pub中内容全部复制。在github的 Settings–&gt;SSH and GPG keys–&gt;New SSH key，key中粘贴复制的内容(Title自定义)。</p><p>验证：github输入第一条的命令，码云输入第二条</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#github</span><br><span class="line">ssh -T git@github.com</span><br><span class="line">#gitee</span><br><span class="line">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure><h2 id="二、创建项目工程"><a href="#二、创建项目工程" class="headerlink" title="二、创建项目工程"></a><strong>二、创建项目工程</strong></h2><p>1.远程仓库：在github中New repository 输入Repository name。[例如：TestDemo]</p><p>2.项目工程：在自己本地电脑上新建一个与github新项目工程同名的文件夹。[例如：TestDemo]</p><h2 id="三、创建版本库"><a href="#三、创建版本库" class="headerlink" title="三、创建版本库"></a><strong>三、创建版本库</strong></h2><p> 进入步骤二中的文件夹下，输入以下命令初始化仓库，若出现：Initialized empty Git repository in *:&#x2F;.git&#x2F; 则表示创建成功[注意：此时会生成一个.git目录(隐藏目录)]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h2 id="四、连接远程仓库-下面两种方式都可以"><a href="#四、连接远程仓库-下面两种方式都可以" class="headerlink" title="四、连接远程仓库(下面两种方式都可以)"></a><strong>四、连接远程仓库</strong>(下面两种方式都可以)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#ssh协议连接</span><br><span class="line">git remote add origin git@github.com:yourName/repositoryname.git</span><br><span class="line">#http协议连接</span><br><span class="line">git remote add origin https://github.com/yourName/repositoryname.git</span><br></pre></td></tr></table></figure><h2 id="五、从远程仓库pull文件-若远程仓库没有文件，直接执行步骤六"><a href="#五、从远程仓库pull文件-若远程仓库没有文件，直接执行步骤六" class="headerlink" title="五、从远程仓库pull文件(若远程仓库没有文件，直接执行步骤六)"></a><strong>五、从远程仓库pull文件</strong>(若远程仓库没有文件，直接执行步骤六)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><h2 id="六、将本地文件push到远程仓库-若没有文件则手动创建"><a href="#六、将本地文件push到远程仓库-若没有文件则手动创建" class="headerlink" title="六、将本地文件push到远程仓库(若没有文件则手动创建)"></a><strong>六、将本地文件push到远程仓库</strong>(若没有文件则手动创建)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git status　　　　　　　　　　查看工作目录的状态</span><br><span class="line"></span><br><span class="line">git add .　　　　　　　　将文件添加到暂存区</span><br><span class="line"></span><br><span class="line">git commit -m &quot;commnet&quot; 　　提交更改,添加备注信息(此时将暂存区的信息提交到本地仓库)</span><br><span class="line"></span><br><span class="line">git push origin master 　　 将本地仓库的文件push到远程仓库“master”(若 push 不成功，可加 -f 进行强推操作)</span><br></pre></td></tr></table></figure><p> 注: 至此已经完成了 远程与本地仓库的配置，若需要单独配置可见以下操作</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Windows </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wordpress跳过FTP,安装插件、主题</title>
      <link href="/posts/e38c7bbe.html"/>
      <url>/posts/e38c7bbe.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-10.png"></p><p>网上搜刮了很多相关资料，一个根本原因是目录权限的问题，但如果直接修改为权限777很不安全，所以最佳的方法是修改目录的“所有者”。</p><p>即：wp-content修改目录所有者为apache。（apache为php的用户）</p><h2 id="一，wp-config-php文件，结尾加入脚本代码"><a href="#一，wp-config-php文件，结尾加入脚本代码" class="headerlink" title="一，wp-config.php文件，结尾加入脚本代码"></a>一，wp-config.php文件，结尾加入脚本代码</h2><p><code>define(&#39;WP_TEMP_DIR&#39;, ABSPATH.&#39;wp-content/tmp&#39;);   define(&quot;FS_METHOD&quot;, &quot;direct&quot;);   define(&quot;FS_CHMOD_DIR&quot;, 0777);   define(&quot;FS_CHMOD_FILE&quot;, 0777);</code></p><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image.png"></p><h2 id="二，在wp-content目录下，创建tmp临时目录"><a href="#二，在wp-content目录下，创建tmp临时目录" class="headerlink" title="二，在wp-content目录下，创建tmp临时目录"></a>二，在wp-content目录下，创建tmp临时目录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#当前wordpress目录下</span><br><span class="line">cd wp-content</span><br><span class="line">mkdir tmp</span><br></pre></td></tr></table></figure><h2 id="三，查看php运行用户"><a href="#三，查看php运行用户" class="headerlink" title="三，查看php运行用户"></a>三，查看php运行用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef grep php</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-1.png"></p><p>上图用户为apache</p><h2 id="四，修改wp-content下所有子目录的所有者"><a href="#四，修改wp-content下所有子目录的所有者" class="headerlink" title="四，修改wp-content下所有子目录的所有者"></a>四，修改wp-content下所有子目录的所有者</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#回到wordpress目录下</span><br><span class="line">chown -R apache:apache wp-content</span><br></pre></td></tr></table></figure><p><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/03/image-2.png"></p><p>OK，这要就可以跳过FTP的同时，又保障系统的安全。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7 通过shell来一键操作mysql，实现修改密码及创建wordpress数据库操作</title>
      <link href="/posts/a0ffe260.html"/>
      <url>/posts/a0ffe260.html</url>
      
        <content type="html"><![CDATA[<p>平台：centos7 + mysql5.7</p><p>注：my<strong>sql以“；”标识结束，所有命令结束后必须加“；”</strong></p><h2 id="一-获取msyql初始密码，两种方式："><a href="#一-获取msyql初始密码，两种方式：" class="headerlink" title="一.获取msyql初始密码，两种方式："></a>一.获取msyql初始密码，两种方式：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MYSQLPASSWD=`grep &quot;temporary password&quot; /var/log/mysqld.logawk -F&#x27; &#x27; &quot;&#123;print $NF&#125;&quot;awk &#x27;&#123;print $NF&#125;&#x27;`</span><br><span class="line">echo &quot;MYSQL初始密码:  $&#123;MYSQLPASSWD&#125;&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PASSWD=$(grep &#x27;temporary password&#x27; /var/log/mysqld.log )</span><br><span class="line">#mysql默认密码为12位，从右向左0-12位</span><br><span class="line">MYSQLPASSWD=$&#123;PASSWD:0-12&#125;</span><br><span class="line">echo &quot;MYSQL初始密码:  $&#123;MYSQLPASSWD&#125;&quot;</span><br></pre></td></tr></table></figure><h2 id="二-通过获取到的初始密码-修改mysql密码"><a href="#二-通过获取到的初始密码-修改mysql密码" class="headerlink" title="二.通过获取到的初始密码,修改mysql密码"></a>二.通过获取到的初始密码,修改mysql密码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#使用mysqladmin工具进行密码修改（默认有密码复杂度：大小写、数字、特殊符号）</span><br><span class="line">mysqladmin -uroot -p$&#123;MYSQLPASSWD&#125; password &quot;Aa123456789#&quot;</span><br></pre></td></tr></table></figure><h2 id="三-修改密码安全规则，方便后期修改密码"><a href="#三-修改密码安全规则，方便后期修改密码" class="headerlink" title="三.修改密码安全规则，方便后期修改密码"></a>三.修改密码安全规则，方便后期修改密码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#全局设置 密码安全等级为低</span><br><span class="line">set global validate_password_policy=LOW;</span><br><span class="line">#全局设置 密码长度，最少为4位</span><br><span class="line">set global validate_password_length=4;</span><br></pre></td></tr></table></figure><h2 id="四-创建数据库名“wordpress”，并允许root远程"><a href="#四-创建数据库名“wordpress”，并允许root远程" class="headerlink" title="四.创建数据库名“wordpress”，并允许root远程"></a>四.创建数据库名“wordpress”，并允许root远程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create database wordpress;</span><br><span class="line">use mysql;</span><br><span class="line">update user set host = &#x27;%&#x27; where user =&#x27;root&#x27;;</span><br></pre></td></tr></table></figure><h2 id="五-设置数据库编码规则（如不设置，按数据库默认规则）"><a href="#五-设置数据库编码规则（如不设置，按数据库默认规则）" class="headerlink" title="五.设置数据库编码规则（如不设置，按数据库默认规则）"></a>五.设置数据库编码规则（如不设置，按数据库默认规则）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">set character_set_client = utf8;</span><br><span class="line">set character_set_server = utf8;</span><br><span class="line">set character_set_connection = utf8;</span><br><span class="line">set character_set_database = utf8;</span><br><span class="line">set character_set_results = utf8;</span><br><span class="line">set collation_connection = utf8_general_ci;</span><br><span class="line">set collation_database = utf8_general_ci;</span><br><span class="line">set collation_server = utf8_general_ci;</span><br></pre></td></tr></table></figure><h2 id="六-创建用户名：test，使用户只可远程操作wordpress数据库"><a href="#六-创建用户名：test，使用户只可远程操作wordpress数据库" class="headerlink" title="六.创建用户名：test，使用户只可远程操作wordpress数据库"></a>六.创建用户名：test，使用户只可远程操作wordpress数据库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &#x27;test&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27;;</span><br><span class="line">GRANT ALL ON wordpress.* TO &#x27;test&#x27;@&#x27;%&#x27;;</span><br><span class="line">ALTER USER &#x27;test&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27; PASSWORD EXPIRE NEVER; </span><br><span class="line">ALTER USER &#x27;test&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><h2 id="七-完成所有操作，必须刷新mysql权限"><a href="#七-完成所有操作，必须刷新mysql权限" class="headerlink" title="七.完成所有操作，必须刷新mysql权限"></a>七.完成所有操作，必须刷新mysql权限</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privilege;</span><br></pre></td></tr></table></figure><blockquote><p>将所有命令合并，实现一键shell</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">PASSWD=$(grep &#x27;temporary password&#x27; /var/log/mysqld.log )</span><br><span class="line">MYSQLPASSWD=$&#123;PASSWD:0-12&#125;</span><br><span class="line">echo MYSQLPASSWD</span><br><span class="line">mysqladmin -uroot -p$&#123;MYSQLPASSWD&#125; password &quot;Aa123456789#&quot;</span><br><span class="line">mysql -uroot -pAa123456789# &lt;&lt; EOF</span><br><span class="line">/*密码规则*/</span><br><span class="line">set global validate_password_policy=LOW;</span><br><span class="line">set global validate_password_length=4;</span><br><span class="line">/*创建数据库*/</span><br><span class="line">create database wordpress;</span><br><span class="line">use mysql;</span><br><span class="line">update user set host = &#x27;%&#x27; where user =&#x27;root&#x27;;</span><br><span class="line">/*设置编码*/</span><br><span class="line">set character_set_client = utf8;</span><br><span class="line">set character_set_server = utf8;</span><br><span class="line">set character_set_connection = utf8;</span><br><span class="line">set character_set_database = utf8;</span><br><span class="line">set character_set_results = utf8;</span><br><span class="line">set collation_connection = utf8_general_ci;</span><br><span class="line">set collation_database = utf8_general_ci;</span><br><span class="line">set collation_server = utf8_general_ci;</span><br><span class="line">/*创建用户*/</span><br><span class="line">CREATE USER &#x27;test&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27;;</span><br><span class="line">GRANT ALL ON wordpress.* TO &#x27;test&#x27;@&#x27;%&#x27;;</span><br><span class="line">ALTER USER &#x27;test&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27; PASSWORD EXPIRE NEVER; </span><br><span class="line">ALTER USER &#x27;test&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123456&#x27;;</span><br><span class="line">/*注意:EOF要靠边*/</span><br><span class="line">EOF</span><br><span class="line">echo &quot;默认账号root，密码Aa123456789#&quot;</span><br><span class="line">echo &quot;数据库：wordpress，账号：test，密码：123456&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linxu 配置nginx多站点（phpmyadmin）</title>
      <link href="/posts/3a46e3d6.html"/>
      <url>/posts/3a46e3d6.html</url>
      
        <content type="html"><![CDATA[<p>linux下常用静态web服务器：apache、nginx，及动态tomcat，这里讲解nginx的相关配置。</p><p><strong>centos 7 下，nginx的多站点的访问需要注意2个事项</strong></p><p>1.关闭selinux</p><p>2.防火墙开启相应端口</p><h2 id="一，检查配置"><a href="#一，检查配置" class="headerlink" title="一，检查配置"></a>一，检查配置</h2><p>查看nginx默认站点配置文件&#x2F;etc&#x2F;nginx&#x2F;nginx.conf中，关键语句“include”告诉我们其他站点配置信息的位置，如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include /etc/nginx/conf.d/*.conf;</span><br></pre></td></tr></table></figure><p>这里告诉我们在&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;目录下的，以conf结尾的都是拓展配置文件。</p><h2 id="二，添加配置"><a href="#二，添加配置" class="headerlink" title="二，添加配置"></a>二，添加配置</h2><p>在 &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;目录下创建phpmyadmin.conf（文件名可随意，但必须以.conf结尾）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/conf.d/phpmyadmin.conf</span><br></pre></td></tr></table></figure><p>添加phpmyadmin站点，端口888，内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">#监听端口</span><br><span class="line">listen 888;</span><br><span class="line">#phpmyadmin站点目录</span><br><span class="line">root /usr/share/nginx/phpmyadmin;</span><br><span class="line">#默认启动</span><br><span class="line">index index.php;</span><br><span class="line">location / &#123;</span><br><span class="line">           &#125;</span><br><span class="line">#php的跳转</span><br><span class="line">location ~ \.php$        &#123;</span><br><span class="line">fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">fastcgi_index  index.php;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">include        fastcgi_params;</span><br><span class="line">                        &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>上面的代码核心在于php的支持</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#php的跳转</span><br><span class="line">location ~ \.php$        &#123;</span><br><span class="line">fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">fastcgi_index  index.php;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">include        fastcgi_params;</span><br><span class="line">                        &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="三，防火去添加放行端口，及关闭selinux"><a href="#三，防火去添加放行端口，及关闭selinux" class="headerlink" title="三，防火去添加放行端口，及关闭selinux"></a>三，防火去添加放行端口，及关闭selinux</h2><p>添加防火墙放行端口888，并重新加载防火墙端口生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=888/tcp --permanen</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>临时关闭selinux</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><h2 id="四，重启nginx"><a href="#四，重启nginx" class="headerlink" title="四，重启nginx"></a>四，重启nginx</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Me</title>
      <link href="/posts/39d6b660.html"/>
      <url>/posts/39d6b660.html</url>
      
        <content type="html"><![CDATA[<p>我的网站优化流程（低配服务器+memcache）：</p><p>ffing.cn（腾讯云）——重定向——&gt;<a href="http://www.ffing.cn(又拍云CDN)——>静态网页3秒跳转——>blog.ffing.cn(腾讯云)\_memcache">www.ffing.cn(又拍云CDN)——&gt;静态网页3秒跳转——&gt;blog.ffing.cn(腾讯云)\_memcache</a></p><p>centos 7 常用包一键安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o onekey.sh https://gitee.com/ffing/onekey/raw/master/onekey.sh  &amp;&amp; bash onekey.sh</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl https://gitee.com/ffing/onekey/raw/master/onekey.sh)</span><br></pre></td></tr></table></figure><p><a href="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-88.png"><img src="https://qnimg.ffing.cn/wp-content/uploads/2021/08/image-88.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> Me </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
